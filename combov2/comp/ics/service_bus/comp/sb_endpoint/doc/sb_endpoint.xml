<?xml version="1.0" encoding="ISO-8859-1"?>
<source>

        <component>Service Bus Endpoint component</component>

<authors>
   <author login="pus">Viktor Pus</author>
</authors>

<features>
   <item>Serial interface for messages.</item>
   <item>Paralell R/W interface to component.</item>
</features>

<description>
   This component is intended for independent low-speed maintenance access to 
   Internal Bus components.
</description>

<interface>
   <port_map>
      <divider>Common Interface</divider>
      <port name="CLK" dir="in" width="1">
         Clock input
      </port>
      <port name="RESET" dir="in" width="1">
         Reset input
      </port>
      <divider>Service Bus Interface</divider>
      <port name="TDI" dir="in" width="1">
         Data Input
      </port>
      <port name="TDI_DV" dir="in" width="1">
         Data Input Valid
      </port>
      <port name="TDO" dir="out" width="1">
         Data Output
      </port>
      <port name="TDO_DV" dir="out" width="1">
         Data Output Valid
      </port>
      <divider>User component interface</divider>
      <port name="ADDR" dir="out" width="8">
         Address
      </port>
      <port name="RD" dir="out" width="1">
         Read Request
      </port>
      <port name="WR" dir="out" width="1">
         Write Request
      </port>
      <port name="DWR" dir="out" width="8">
         Write Data
      </port>
      <port name="DRD" dir="in" width="8">
         Read Data
      </port>
      <port name="DRDY" dir="in" width="1">
         Read Data Ready
      </port>
   </port_map>
</interface>

<body>

    <h1>Specification</h1>
    <p>
      Messages are recieved via serial bus inputs. Messages format:
      <tab sloupce="ll">
      <tr><td><b>Width</b></td><td><b>Meaning</b></td></tr>
      <tr><td>8 bits</td><td>Identification</td></tr>
      <tr><td>1 bit</td><td>Mode (0=read, 1=write)</td></tr>
      <tr><td>8 bits</td><td>Address</td></tr>
      <tr><td>8 bits</td><td>Data In/Out</td></tr>
      </tab>
    </p>
    <p>
      If Identification field matches Endpoint Id, message is processed,
      otherwise it is sent along (to the next endpoint). 
      If matched message is write, recieved data
      are written to desired address at connected component. If message
      is read, data are obtained from connected component, filled to Data Out
      field and message is sent along.
    </p>
    <p>
      As there is no generic for Endpoint Id, each Endpoint must recieve
      Id before its work. This is done by writing to address 0. First
      write request to this address sets Endpoint Id to the value of
      Data In field. Every next write request to this address is sent along.
    </p>
    <h1>Component characteristics</h1>
    <p>
      Device utilization: 51 CLB slices. Maximal frequency: at least 200 MHz
      (Combo6X).
    </p>
</body>
</source>
