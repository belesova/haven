<?xml version="1.0" encoding="ISO-8859-1"?>
<source>

        <component>Asynchronous link of two MI32 interfaces</component>

<authors>
   <author login="pus">Viktor Pus</author>
</authors>

<versions>
   <version id="MAIN">
      <item>Transfer between unrelated clock domains.</item>
      <item>Poor performance.</item>
   </version>
</versions>

<bugs>
</bugs>

<description>
   This component may be used to connect two components running at different
   frequencies.
</description>

<interface>
   <port_map>
      <port name="RESET" dir="in" width="1">
         Reset input
      </port>
      <divider>Master Interface</divider>
      <port name="CLK_M" dir="in" width="1">
         Master clock
      </port>
      <port name="MI_M" dir="inout" width="">
         Master MI32 memory interface
      </port>
      <divider>Slave Interface</divider>
      <port name="CLK_S" dir="in" width="1">
         Slave clock
      </port>
      <port name="MI_S" dir="inout" width="">
         Slave MI32 memory interface
      </port>
   </port_map>
</interface>

<schemes>
   <obr src="./fig/scheme.fig">Structure of MI32_ASYNC component</obr>
</schemes>

<body>

    <h1>Specification</h1>
    <para>
      Master interface is connected to component which initiates reads 
      and writes. Each read and write is transferred to Slave clock domain
      and sent to Slave interface. In case of read operation, result is
      transferred back to Master clock domain and sent to master.
    </para>
    <para>
      At Master side, ARDY signal is set to 0 while operation is in
      progress. This decreases performance, because no pipelining is possible.
    </para>
    <h1>Component characteristics</h1>
    <para>
      You really don't have to worry about occupied slices or maximal 
      frequency..
    </para>
</body>
</source>
