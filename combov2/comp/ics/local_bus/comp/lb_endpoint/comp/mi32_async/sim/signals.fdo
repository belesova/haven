# signals.fdo : Include file with signals
# Copyright (C) 2006 CESNET
# Author: Viktor Pus <pus@liberouter.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.
#
# $Id: signals.fdo 13034 2010-03-02 16:03:47Z pus $

   exec make
   view wave
   delete wave *

   add_wave "-noupdate -hex -label RESET"       /testbench/RESET
   
   add wave -divider "Master interface"
   add_wave "-noupdate -hex -label CLK_M"       /testbench/CLK_M
   add_wave "-noupdate -hex -label MI_M"       /testbench/MI_M

   add wave -divider "Slave interface"
   add_wave "-noupdate -hex -label CLK_S"       /testbench/CLK_S
   add_wave "-noupdate -hex -label MI_S"       /testbench/MI_S

   add wave -divider "internal signals"
   add_wave "-noupdate -hex -label req"       /testbench/uut/mi32_async_norec_i/req
   add_wave "-noupdate -hex -label regasync_req_fall" /testbench/uut/mi32_async_norec_i/regasync_req_fall
   add_wave "-noupdate -hex -label regasync_req_rise" /testbench/uut/mi32_async_norec_i/regasync_req_rise
   add_wave "-noupdate -hex -label ack"       /testbench/uut/mi32_async_norec_i/ack
   add_wave "-noupdate -hex -label regasync_ack_fall" /testbench/uut/mi32_async_norec_i/regasync_ack_fall
   add_wave "-noupdate -hex -label regasync_ack_rise" /testbench/uut/mi32_async_norec_i/regasync_ack_rise
   add_wave "-noupdate -hex -label master_fsm"       /testbench/uut/mi32_async_norec_i/fsm_master/fsm
   add_wave "-noupdate -hex -label slave_fsm"       /testbench/uut/mi32_async_norec_i/fsm_slave/fsm
   add_wave "-noupdate -hex -label slave_en"       /testbench/uut/mi32_async_norec_i/slave_en
   add_wave "-noupdate -hex -label done"       /testbench/uut/mi32_async_norec_i/done
   add_wave "-noupdate -hex -label reg_dwr"       /testbench/uut/mi32_async_norec_i/reg_dwr
   add_wave "-noupdate -hex -label reg_addr"       /testbench/uut/mi32_async_norec_i/reg_addr
   add_wave "-noupdate -hex -label reg_rd"       /testbench/uut/mi32_async_norec_i/reg_rd
   add_wave "-noupdate -hex -label reg_wr"       /testbench/uut/mi32_async_norec_i/reg_wr
   add_wave "-noupdate -hex -label reg_be"       /testbench/uut/mi32_async_norec_i/reg_be
   add_wave "-noupdate -hex -label mi_s_drdy"       /testbench/uut/mi32_async_norec_i/mi_s_drdy
   add_wave "-noupdate -hex -label mi_s_drdy2"       /testbench/uut/mi32_async_norec_i/mi_s_drdy2
   add_wave "-noupdate -hex -label s_drdy_d"       /testbench/uut/mi32_async_norec_i/s_drdy_d
   add_wave "-noupdate -hex -label s_drd_d"       /testbench/uut/mi32_async_norec_i/s_drd_d
   add_wave "-noupdate -hex -label reg_drd"       /testbench/uut/mi32_async_norec_i/reg_drd
   add_wave "-noupdate -hex -label reg_drdy"       /testbench/uut/mi32_async_norec_i/reg_drdy


   restart -f 
   run 3 us
