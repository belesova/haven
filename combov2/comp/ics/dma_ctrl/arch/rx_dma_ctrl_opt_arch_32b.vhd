--------------------------------------------------------------------
-- Name: rx_dma_ctrl_opt_arch_32b.vhd
-- Created: 12/5/2010 @ 9:49
-- Description: this file contains the top level entity
-- Generated by: DK Design Suite, version 5.1.6051.16784
-- Family: Xilinx Virtex-5
-- Output Style: Xilinx Synthesis Tool
--
-- File structure:
--
-- -rx_dma_ctrl_opt_arch_32b.vhd
--------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
LIBRARY DK;
USE DK.DKPackage.ALL;
LIBRARY unisim;
USE unisim.vcomponents.ALL;
-- this is the top level entity
ENTITY rx_dma_ctrl_opt_arch_32b IS
  -- interface description
  PORT (
    BUF_NEWLEN : IN std_logic_vector(15 DOWNTO 0);
    BUF_NEWLEN_DV : IN std_logic;
    BUF_NEWLEN_RDY : OUT std_logic;
    BUF_RELLEN : OUT std_logic_vector(15 DOWNTO 0);
    BUF_RELLEN_DV : OUT std_logic;
    BUFFER_ADDR : IN std_logic_vector(31 DOWNTO 0);
    BUFFER_SIZE : IN std_logic_vector(15 DOWNTO 0);
    DESC_DO : IN std_logic_vector(31 DOWNTO 0);
    DESC_EMPTY : IN std_logic;
    DESC_READ : OUT std_logic;
    DMA_ACK : IN std_logic;
    DMA_ADDR : IN std_logic_vector(1 DOWNTO 0);
    DMA_DONE : IN std_logic;
    DMA_DOUT : OUT std_logic_vector(31 DOWNTO 0);
    DMA_REQ : OUT std_logic;
    DMA_TAG : IN std_logic_vector(15 DOWNTO 0);
    DMA_TAG_ID : IN std_logic_vector(7 DOWNTO 0);
    ENABLE : OUT std_logic;
    INTERRUPT : OUT std_logic_vector(1 DOWNTO 0);
    PIN_CLK : IN std_logic;
    PIN_RESET : IN std_logic;
    SW_ADDR : IN std_logic_vector(31 DOWNTO 0);
    SW_ARDY : OUT std_logic;
    SW_BE : IN std_logic_vector(3 DOWNTO 0);
    SW_DRD : OUT std_logic_vector(31 DOWNTO 0);
    SW_DRDY : OUT std_logic;
    SW_DWR : IN std_logic_vector(31 DOWNTO 0);
    SW_RD : IN std_logic;
    SW_WR : IN std_logic
  );
END;

-- this is the top level entity
ARCHITECTURE behaviour OF rx_dma_ctrl_opt_arch_32b IS
component RAM16X1D
        generic (
           INIT : bit_vector := X"0000"
        );
        port (
           D     : in std_logic;
           WE    : in std_logic;
           WCLK  : in std_logic;
           A0    : in std_logic;
           A1    : in std_logic;
           A2    : in std_logic;
           A3    : in std_logic;
           DPRA0 : in std_logic;
           DPRA1 : in std_logic;
           DPRA2 : in std_logic;
           DPRA3 : in std_logic;
           SPO   : out std_logic;
           DPO   : out std_logic
        );
end component;
component RAM32X1D
        generic (
           INIT : bit_vector := X"00000000"
        );
        port (
           D     : in std_logic;
           WE    : in std_logic;
           WCLK  : in std_logic;
           A0    : in std_logic;
           A1    : in std_logic;
           A2    : in std_logic;
           A3    : in std_logic;
           A4    : in std_logic;
           DPRA0 : in std_logic;
           DPRA1 : in std_logic;
           DPRA2 : in std_logic;
           DPRA3 : in std_logic;
           DPRA4 : in std_logic;
           SPO   : out std_logic;
           DPO   : out std_logic
        );
end component;
component RAM64X1D
        generic (
           INIT : bit_vector := X"0000000000000000"
        );
        port (
           D     : in std_logic;
           WE    : in std_logic;
           WCLK  : in std_logic;
           A0    : in std_logic;
           A1    : in std_logic;
           A2    : in std_logic;
           A3    : in std_logic;
           A4    : in std_logic;
           A5    : in std_logic;
           DPRA0 : in std_logic;
           DPRA1 : in std_logic;
           DPRA2 : in std_logic;
           DPRA3 : in std_logic;
           DPRA4 : in std_logic;
           DPRA5 : in std_logic;
           SPO   : out std_logic;
           DPO   : out std_logic
        );
end component;
  -- Power cable
  CONSTANT VCC : std_logic := '1';
  -- Ground cable
  CONSTANT GND : std_logic := '0';
  -- One-Hot Multiplexer
  SIGNAL ifc_interrupt : unsigned(1 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL ifc_interrupt0 : unsigned(0 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL ifc_interrupt1 : unsigned(0 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL ifc_enable : unsigned(0 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL ifc_buf_rellen : unsigned(15 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL ifc_desc_read : unsigned(0 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL ifc_sw_drd : unsigned(31 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL ifc_sw_ardy : unsigned(0 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL ifc_sw_drdy : unsigned(0 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL ifc_dma_dout : unsigned(31 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL debugDmaAckWait : unsigned(0 DOWNTO 0);
  -- Register 'swStrPtr'
  SIGNAL swStrPtr : unsigned(31 DOWNTO 0);
  -- Register 'swEndPtr'
  SIGNAL swEndPtr : unsigned(31 DOWNTO 0);
  -- Register 'localSwEndPtr'
  SIGNAL localSwEndPtr : unsigned(31 DOWNTO 0);
  -- Register 'controlRegister'
  SIGNAL controlRegister : unsigned(31 DOWNTO 0);
  -- Register 'statusRegister'
  SIGNAL statusRegister : unsigned(31 DOWNTO 0);
  -- Register 'bufSizeMask'
  SIGNAL bufSizeMask : unsigned(31 DOWNTO 0);
  -- Register 'intrRegister'
  SIGNAL intrRegister : unsigned(31 DOWNTO 0);
  -- Register 'intrMonitor'
  SIGNAL intrMonitor : unsigned(31 DOWNTO 0);
  -- Register 'regIntrMonitor'
  SIGNAL regIntrMonitor : unsigned(31 DOWNTO 0);
  -- Register 'intrReset'
  SIGNAL intrReset : unsigned(0 DOWNTO 0);
  -- Register 'interruptEnable'
  SIGNAL interruptEnable : unsigned(0 DOWNTO 0);
  -- Register 'timeoutEnable'
  SIGNAL timeoutEnable : unsigned(0 DOWNTO 0);
  -- Register 'timeoutRegister'
  SIGNAL timeoutRegister : unsigned(31 DOWNTO 0);
  -- Register 'timeoutMonitor'
  SIGNAL timeoutMonitor : unsigned(31 DOWNTO 0);
  -- Register 'hwStrPtr'
  SIGNAL hwStrPtr : unsigned(12 DOWNTO 0);
  -- Register 'hwEndPtr'
  SIGNAL hwEndPtr : unsigned(12 DOWNTO 0);
  -- Register 'dataDMAProgressCnt'
  SIGNAL dataDMAProgressCnt : unsigned(7 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL dataDMAProgressCnt_Up : unsigned(0 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL dataDMAProgressCnt_Down : unsigned(0 DOWNTO 0);
  -- Register 'dma_done_cnt'
  SIGNAL dma_done_cnt : unsigned(1 DOWNTO 0);
  -- Concatenation
  SIGNAL S_0 : unsigned(31 DOWNTO 0);
  -- Concatenation
  SIGNAL S_1 : unsigned(31 DOWNTO 0);
  -- Start out
  SIGNAL StartOut : std_logic;
  -- Start out
  SIGNAL StartOut_1 : std_logic;
  -- Register 'setStoped'
  SIGNAL setStoped : unsigned(0 DOWNTO 0);
  -- Register 'setPaused'
  SIGNAL setPaused : unsigned(0 DOWNTO 0);
  -- Start out
  SIGNAL StartOut_2 : std_logic;
  -- One-Hot Multiplexer
  SIGNAL getNextDesc : unsigned(0 DOWNTO 0);
  -- Register 'newDescReady'
  SIGNAL newDescReady : unsigned(0 DOWNTO 0);
  -- Start out
  SIGNAL StartOut_3 : std_logic;
  -- Register 'pageBreakFlag'
  SIGNAL pageBreakFlag : unsigned(0 DOWNTO 0);
  -- Start out
  SIGNAL StartOut_4 : std_logic;
  -- Start out
  SIGNAL StartOut_5 : std_logic;
  -- Start out
  SIGNAL StartOut_6 : std_logic;
  -- Register 'timeoutExpired'
  SIGNAL timeoutExpired : unsigned(0 DOWNTO 0);
  -- Start out
  SIGNAL StartOut_7 : std_logic;
  -- Start out
  SIGNAL StartOut_8 : std_logic;
  -- Start out
  SIGNAL StartOut_9 : std_logic;
  -- Start out
  SIGNAL StartOut_10 : std_logic;
  -- Control path join
  SIGNAL CForkIn : std_logic;
  -- Test for equality
  SIGNAL BinOpOut : std_logic;
  -- Constant value
  CONSTANT ConstOut : unsigned(0 DOWNTO 0) := "1";
  -- Test for equality
  SIGNAL BinOpOut_1 : std_logic;
  -- Bitwise AND
  SIGNAL BinOpOut_2 : unsigned(0 DOWNTO 0);
  -- Conditional false branch
  SIGNAL WireFalse : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_1 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue : std_logic;
  -- Plus
  SIGNAL BinOpOut_3 : unsigned(7 DOWNTO 0);
  -- Conditional true branch
  SIGNAL WireTrue_1 : std_logic;
  -- Minus
  SIGNAL BinOpOut_4 : unsigned(7 DOWNTO 0);
  -- Control path join
  SIGNAL CForkIn_1 : std_logic;
  -- Test for equality
  SIGNAL BinOpOut_5 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_2 : std_logic;
  -- Plus
  SIGNAL BinOpOut_6 : unsigned(12 DOWNTO 0);
  -- Constant value
  CONSTANT ConstOut_1 : unsigned(31 DOWNTO 0) := "00000000000000000000000000000001";
  -- Test for equality
  SIGNAL BinOpOut_7 : std_logic;
  -- One-Hot Multiplexer
  SIGNAL ConstOut_2 : unsigned(0 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL Z_Dones_2 : std_logic;
  -- Clock cycle delay
  SIGNAL LoopZ : std_logic;
  -- Clock cycle delay
  SIGNAL LoopZ_1 : std_logic;
  -- Control path join
  SIGNAL CForkIn_2 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_3 : std_logic;
  -- Constant value
  CONSTANT ConstOut_3 : unsigned(7 DOWNTO 0) := "00000000";
  -- Test for equality
  SIGNAL BinOpOut_8 : std_logic;
  -- Constant value
  CONSTANT ConstOut_4 : unsigned(31 DOWNTO 0) := "00000000000000000000000000001111";
  -- One-Hot Multiplexer
  SIGNAL ConstOut_5 : unsigned(31 DOWNTO 0);
  -- Test for equality
  SIGNAL BinOpOut_9 : std_logic;
  -- Clock cycle delay
  SIGNAL LoopZ_2 : std_logic;
  -- Control path join
  SIGNAL CForkIn_3 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_4 : std_logic;
  -- Constant value
  CONSTANT ConstOut_6 : unsigned(31 DOWNTO 0) := "00000000000000000000000000000100";
  -- One-Hot Multiplexer
  SIGNAL ConstOut_7 : unsigned(31 DOWNTO 0);
  -- Test for equality
  SIGNAL BinOpOut_10 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_2 : std_logic;
  -- Constant value
  CONSTANT ConstOut_8 : unsigned(31 DOWNTO 0) := "00000000000000000000000000000010";
  -- Register 'parts'
  SIGNAL parts : unsigned(1 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL LoopZ_3 : std_logic;
  -- Clock cycle delay
  SIGNAL LoopZ_4 : std_logic;
  -- Control path join
  SIGNAL CForkIn_4 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_5 : std_logic;
  -- Test for equality
  SIGNAL BinOpOut_11 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_3 : std_logic;
  -- One-Hot Multiplexer
  SIGNAL SeqChain : unsigned(0 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL Z_Dones_1 : std_logic;
  -- Clock cycle delay
  SIGNAL LoopZ_5 : std_logic;
  -- Control path join
  SIGNAL CForkIn_5 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_6 : std_logic;
  -- Test for equality
  SIGNAL BinOpOut_12 : std_logic;
  -- Control path join
  SIGNAL CForkIn_6 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_7 : std_logic;
  -- Plus
  SIGNAL BinOpOut_13 : unsigned(1 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL Z_Dones_2_1 : std_logic;
  -- Constant value
  CONSTANT ConstOut_9 : unsigned(1 DOWNTO 0) := "01";
  -- Plus
  SIGNAL BinOpOut_14 : unsigned(1 DOWNTO 0);
  -- Constant value
  CONSTANT ConstOut_10 : unsigned(1 DOWNTO 0) := "10";
  -- Test for unsigned less than
  SIGNAL BinOpOut_15 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_4 : std_logic;
  -- Register 'descOffset'
  SIGNAL descOffset : unsigned(11 DOWNTO 0);
  -- Register 'dataLength'
  SIGNAL dataLength : unsigned(12 DOWNTO 0);
  -- Register 'hwDataLength'
  SIGNAL hwDataLength : unsigned(12 DOWNTO 0);
  -- Register 'pageFreeSpace'
  SIGNAL pageFreeSpace : unsigned(12 DOWNTO 0);
  -- Register 'length'
  SIGNAL length : unsigned(12 DOWNTO 0);
  -- Register 'laddr'
  SIGNAL laddr : unsigned(31 DOWNTO 0);
  -- Register 'swFreeSpace'
  SIGNAL swFreeSpace : unsigned(31 DOWNTO 0);
  -- Register 'localHwEndPtr'
  SIGNAL localHwEndPtr : unsigned(12 DOWNTO 0);
  -- Register 'getND'
  SIGNAL getND : unsigned(0 DOWNTO 0);
  -- Control path join
  SIGNAL CForkIn_7 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_8 : std_logic;
  -- Constant value
  CONSTANT ConstOut_11 : unsigned(11 DOWNTO 0) := (OTHERS => '0');
  -- Clock cycle delay
  SIGNAL Z_Dones_4 : std_logic;
  -- Test for equality
  SIGNAL BinOpOut_16 : std_logic;
  -- Test for equality
  SIGNAL BinOpOut_17 : std_logic;
  -- Bitwise AND
  SIGNAL BinOpOut_18 : unsigned(0 DOWNTO 0);
  -- Control path join
  SIGNAL CForkIn_8 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_9 : std_logic;
  -- Clock cycle delay
  SIGNAL Z_Dones_1_1 : std_logic;
  -- Bitwise AND
  SIGNAL BinOpOut_19 : unsigned(0 DOWNTO 0);
  -- Conditional false branch
  SIGNAL WireFalse_5 : std_logic;
  -- Test for inequality
  SIGNAL BinOpOut_20 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_6 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_10 : std_logic;
  -- Minus
  SIGNAL BinOpOut_21 : unsigned(12 DOWNTO 0);
  -- Concatenation
  SIGNAL BinOpOut_22 : unsigned(12 DOWNTO 0);
  -- Minus
  SIGNAL BinOpOut_23 : unsigned(12 DOWNTO 0);
  -- Bitwise AND
  SIGNAL BinOpOut_24 : unsigned(31 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL Z_Dones_4_1 : std_logic;
  -- Constant value
  CONSTANT ConstOut_12 : unsigned(12 DOWNTO 0) := "1000000000000";
  -- Test for unsigned greater than
  SIGNAL BinOpOut_25 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_7 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_11 : std_logic;
  -- Constant value
  CONSTANT ConstOut_13 : unsigned(18 DOWNTO 0) := (OTHERS => '0');
  -- Concatenation
  SIGNAL BinOpOut_26 : unsigned(31 DOWNTO 0);
  -- Test for unsigned greater than
  SIGNAL BinOpOut_27 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_8 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_12 : std_logic;
  -- Clock cycle delay
  SIGNAL ElseDone : std_logic;
  -- Test for unsigned less than or equal
  SIGNAL BinOpOut_28 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_9 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_13 : std_logic;
  -- Test for equality
  SIGNAL BinOpOut_29 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_10 : std_logic;
  -- Concatenation
  SIGNAL BinOpOut_30 : unsigned(31 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL Z_Dones_1_2 : std_logic;
  -- Plus
  SIGNAL BinOpOut_31 : unsigned(31 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL SeqChain_1 : std_logic;
  -- Clock cycle delay
  SIGNAL SeqChain_2 : std_logic;
  -- Constant value
  CONSTANT ConstOut_14 : unsigned(3 DOWNTO 0) := "0001";
  -- Concatenation
  SIGNAL BinOpOut_32 : unsigned(31 DOWNTO 0);
  -- Plus
  SIGNAL BinOpOut_33 : unsigned(11 DOWNTO 0);
  -- Plus
  SIGNAL BinOpOut_34 : unsigned(12 DOWNTO 0);
  -- Concatenation
  SIGNAL BinOpOut_35 : unsigned(31 DOWNTO 0);
  -- Bitwise AND
  SIGNAL BinOpOut_36 : unsigned(31 DOWNTO 0);
  -- Conditional true branch
  SIGNAL WireTrue_14 : std_logic;
  -- Test for equality
  SIGNAL BinOpOut_37 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_11 : std_logic;
  -- Concatenation
  SIGNAL BinOpOut_38 : unsigned(13 DOWNTO 0);
  -- Test for equality
  SIGNAL BinOpOut_39 : std_logic;
  -- One-Hot Multiplexer
  SIGNAL ConstOut_15 : unsigned(0 DOWNTO 0);
  -- Test for equality
  SIGNAL BinOpOut_40 : std_logic;
  -- Control path join
  SIGNAL CForkIn_9 : std_logic;
  -- Test for equality
  SIGNAL BinOpOut_41 : std_logic;
  -- Constant value
  CONSTANT ConstOut_16 : unsigned(3 DOWNTO 0) := "0000";
  -- Constant value
  CONSTANT ConstOut_17 : unsigned(7 DOWNTO 0) := "00000001";
  -- Bitwise OR
  SIGNAL BinOpOut_42 : unsigned(7 DOWNTO 0);
  -- Concatenation
  SIGNAL BinOpOut_43 : unsigned(11 DOWNTO 0);
  -- Test for equality
  SIGNAL BinOpOut_44 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_12 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_15 : std_logic;
  -- Plus
  SIGNAL BinOpOut_45 : unsigned(1 DOWNTO 0);
  -- Conditional false branch
  SIGNAL WireFalse_13 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_16 : std_logic;
  -- Minus
  SIGNAL BinOpOut_46 : unsigned(1 DOWNTO 0);
  -- Register 'flag_length'
  SIGNAL flag_length : unsigned(13 DOWNTO 0);
  -- Register 'length'
  SIGNAL length_1 : unsigned(13 DOWNTO 0);
  -- Constant value
  CONSTANT ConstOut_18 : unsigned(1 DOWNTO 0) := "00";
  -- Test for inequality
  SIGNAL BinOpOut_47 : std_logic;
  -- Bit range selection
  SIGNAL BinOpOut_48 : unsigned(0 DOWNTO 0);
  -- Test for equality
  SIGNAL BinOpOut_49 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_14 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_17 : std_logic;
  -- Concatenation
  SIGNAL BinOpOut_50 : unsigned(13 DOWNTO 0);
  -- Plus
  SIGNAL BinOpOut_51 : unsigned(13 DOWNTO 0);
  -- Constant value
  CONSTANT ConstOut_19 : unsigned(2 DOWNTO 0) := "000";
  -- Bit range selection
  SIGNAL BinOpOut_52 : unsigned(12 DOWNTO 0);
  -- Concatenation
  SIGNAL BinOpOut_53 : unsigned(15 DOWNTO 0);
  -- Test for equality
  SIGNAL BinOpOut_54 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_15 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_18 : std_logic;
  -- Concatenation
  SIGNAL BinOpOut_55 : unsigned(31 DOWNTO 0);
  -- Plus
  SIGNAL BinOpOut_56 : unsigned(31 DOWNTO 0);
  -- Test for equality
  SIGNAL BinOpOut_57 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_19 : std_logic;
  -- Constant value
  CONSTANT ConstOut_20 : unsigned(17 DOWNTO 0) := (OTHERS => '0');
  -- Concatenation
  SIGNAL BinOpOut_58 : unsigned(31 DOWNTO 0);
  -- Bitwise AND
  SIGNAL BinOpOut_59 : unsigned(31 DOWNTO 0);
  -- Control path join
  SIGNAL CForkIn_10 : std_logic;
  -- Test for unsigned greater than or equal
  SIGNAL BinOpOut_60 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_16 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_20 : std_logic;
  -- Control path join
  SIGNAL CForkIn_11 : std_logic;
  -- Concatenation
  SIGNAL BinOpOut_61 : unsigned(1 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL Z_Dones_1_3 : std_logic;
  -- Control path join
  SIGNAL CForkIn_12 : std_logic;
  -- Constant value
  CONSTANT ConstOut_21 : unsigned(31 DOWNTO 0) := "11111111111111111111111111111100";
  -- Conditional true branch
  SIGNAL WireTrue_21 : std_logic;
  -- Bitwise OR
  SIGNAL BinOpOut_62 : unsigned(0 DOWNTO 0);
  -- Conditional false branch
  SIGNAL WireFalse_17 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_22 : std_logic;
  -- Constant value
  CONSTANT ConstOut_22 : unsigned(31 DOWNTO 0) := (OTHERS => '0');
  -- Bitwise AND
  SIGNAL BinOpOut_63 : unsigned(0 DOWNTO 0);
  -- Conditional false branch
  SIGNAL WireFalse_18 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_23 : std_logic;
  -- Plus
  SIGNAL BinOpOut_64 : unsigned(31 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL LoopZ_6 : unsigned(0 DOWNTO 0);
  -- Control path join
  SIGNAL CForkIn_13 : std_logic;
  -- Bitwise OR
  SIGNAL BinOpOut_65 : unsigned(0 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL Z_Dones_1_4 : std_logic;
  -- Test for equality
  SIGNAL BinOpOut_66 : std_logic;
  -- Conditional false branch
  SIGNAL WireFalse_19 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_24 : std_logic;
  -- Bit range selection
  SIGNAL BinOpOut_67 : unsigned(5 DOWNTO 0);
  -- Conditional true branch
  SIGNAL WireTrue_25 : std_logic;
  -- Bit range selection
  SIGNAL BinOpOut_68 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL BinOpOut_69 : unsigned(0 DOWNTO 0);
  -- Bit selection
  SIGNAL LinkWire_0 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_2 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_3 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_4 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_5 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_6 : std_logic;
  -- Test for equality
  SIGNAL BinOpOut_70 : std_logic;
  -- Conditional true branch
  SIGNAL WireTrue_26 : std_logic;
  -- Concatenation
  SIGNAL BinOpOut_71 : unsigned(31 DOWNTO 0);
  -- Concatenation
  SIGNAL BinOpOut_72 : unsigned(31 DOWNTO 0);
  -- Constant value
  CONSTANT ConstOut_23 : unsigned(13 DOWNTO 0) := (OTHERS => '0');
  -- Concatenation
  SIGNAL BinOpOut_73 : unsigned(31 DOWNTO 0);
  -- Constant value
  CONSTANT ConstOut_24 : unsigned(14 DOWNTO 0) := (OTHERS => '0');
  -- Concatenation
  SIGNAL BinOpOut_74 : unsigned(31 DOWNTO 0);
  -- Constant value
  CONSTANT ConstOut_25 : unsigned(30 DOWNTO 0) := (OTHERS => '0');
  -- Concatenation
  SIGNAL BinOpOut_75 : unsigned(31 DOWNTO 0);
  -- Bit selection
  SIGNAL LinkWire_0_1 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_1 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_2_1 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_3_1 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_4_1 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_5_1 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_6_1 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_7 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_8 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_9 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_10 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_11 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_12 : std_logic;
  -- Bit selection
  SIGNAL LinkWire_13 : std_logic;
  -- Conditional false branch
  SIGNAL False_fork_input : std_logic;
  -- Conditional true branch
  SIGNAL S_2 : std_logic;
  -- Bitwise OR
  SIGNAL S_3 : unsigned(0 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL S_4 : std_logic;
  -- Clock cycle delay
  SIGNAL S_5 : std_logic;
  -- Conditional false branch
  SIGNAL False_fork_input_1 : std_logic;
  -- Conditional true branch
  SIGNAL S_6 : std_logic;
  -- Bitwise OR
  SIGNAL S_7 : unsigned(0 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL S_8 : std_logic;
  -- Clock cycle delay
  SIGNAL S_9 : std_logic;
  -- Clock cycle delay
  SIGNAL LoopZ_7 : std_logic;
  -- Control path join
  SIGNAL S_10 : std_logic;
  -- Control path OR
  SIGNAL S_11 : std_logic;
  -- Clock cycle delay
  SIGNAL SeqChain_3 : std_logic;
  -- Control path join
  SIGNAL S_12 : std_logic;
  -- Clock cycle delay
  SIGNAL CForkIn_14 : std_logic;
  -- Control path join
  SIGNAL S_13 : std_logic;
  -- Clock cycle delay
  SIGNAL CForkIn_15 : std_logic;
  -- Control path join
  SIGNAL S_14 : std_logic;
  -- Clock cycle delay
  SIGNAL CForkIn_16 : std_logic;
  -- Control path join
  SIGNAL S_15 : std_logic;
  -- Clock cycle delay
  SIGNAL Z_Dones_0 : std_logic;
  -- Control path join
  SIGNAL S_16 : std_logic;
  -- Clock cycle delay
  SIGNAL Z_Dones_5 : std_logic;
  -- Control path join
  SIGNAL S_17 : std_logic;
  -- Clock cycle delay
  SIGNAL LoopZ_8 : std_logic;
  -- Control path join
  SIGNAL S_18 : std_logic;
  -- Clock cycle delay
  SIGNAL Z_Dones_1_5 : std_logic;
  -- Control path join
  SIGNAL S_19 : std_logic;
  -- Control path OR
  SIGNAL S_20 : std_logic;
  -- Control path OR
  SIGNAL S_21 : std_logic;
  -- Control path OR
  SIGNAL S_22 : std_logic;
  -- Control path OR
  SIGNAL S_23 : std_logic;
  -- Control path OR
  SIGNAL S_24 : std_logic;
  -- Bitwise XOR
  SIGNAL S_25 : unsigned(0 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL S_26 : std_logic;
  -- Bitwise XOR
  SIGNAL S_27 : unsigned(0 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL length_MuxOut : unsigned(13 DOWNTO 0);
  -- Control path OR
  SIGNAL length_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL length_MuxOut_1 : unsigned(12 DOWNTO 0);
  -- Control path OR
  SIGNAL length_CE_1 : std_logic;
  -- One-Hot Multiplexer
  SIGNAL hwDataLength_MuxOut : unsigned(12 DOWNTO 0);
  -- Control path OR
  SIGNAL hwDataLength_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL descOffset_MuxOut : unsigned(11 DOWNTO 0);
  -- Control path OR
  SIGNAL descOffset_CE : std_logic;
  -- Bitwise XOR
  SIGNAL S_28 : unsigned(0 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL S_29 : std_logic;
  -- Bitwise XOR
  SIGNAL S_30 : unsigned(0 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL parts_MuxOut : unsigned(1 DOWNTO 0);
  -- Control path OR
  SIGNAL parts_CE : std_logic;
  -- Control path inverter
  SIGNAL S_31 : std_logic;
  -- One-Hot Multiplexer
  SIGNAL BinOpOut_76 : unsigned(1 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL S_32 : unsigned(31 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_33 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_34 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL BinOpOut_0 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL BinOpOut_1_1 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_35 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_36 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_37 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_38 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_39 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_40 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_41 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_42 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_43 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_44 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_45 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_46 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_47 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_48 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_49 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_50 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_51 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_52 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_53 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_54 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_55 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_56 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_57 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_58 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_59 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_60 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_61 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_62 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_63 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_64 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_65 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL S_66 : unsigned(0 DOWNTO 0);
  -- MPRAM 'DMAReqMem'
  SIGNAL S_67 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_68 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_69 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_70 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_71 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_72 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_73 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_74 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_75 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_76 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_77 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_78 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_79 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_80 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_81 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_82 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_83 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_84 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_85 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_86 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_87 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_88 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_89 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_90 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_91 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_92 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_93 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_94 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_95 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_96 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_97 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_98 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_99 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_100 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_101 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_102 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_103 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_104 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_105 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_106 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_107 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_108 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_109 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_110 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_111 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_112 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_113 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_114 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_115 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_116 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_117 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_118 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_119 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_120 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_121 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_122 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_123 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_124 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_125 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_126 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_127 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_128 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_129 : std_logic;
  -- MPRAM 'DMAReqMem'
  SIGNAL S_130 : std_logic;
  -- One-Hot Multiplexer
  SIGNAL timeoutExpired_MuxOut : unsigned(0 DOWNTO 0);
  -- Control path OR
  SIGNAL timeoutExpired_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL pageBreakFlag_MuxOut : unsigned(0 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL newDescReady_MuxOut : unsigned(0 DOWNTO 0);
  -- Control path OR
  SIGNAL newDescReady_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL setPaused_MuxOut : unsigned(0 DOWNTO 0);
  -- Control path OR
  SIGNAL setPaused_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL setStoped_MuxOut : unsigned(0 DOWNTO 0);
  -- Control path OR
  SIGNAL setStoped_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL dma_done_cnt_MuxOut : unsigned(1 DOWNTO 0);
  -- Control path OR
  SIGNAL dma_done_cnt_CE : std_logic;
  -- Constant value
  CONSTANT dataDMAProgressCnt_Down_1 : unsigned(0 DOWNTO 0) := "0";
  -- Control path inverter
  SIGNAL S_131 : std_logic;
  -- One-Hot Multiplexer
  SIGNAL dataDMAProgressCnt_MuxOut : unsigned(7 DOWNTO 0);
  -- Control path OR
  SIGNAL dataDMAProgressCnt_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL timeoutMonitor_MuxOut : unsigned(31 DOWNTO 0);
  -- Control path OR
  SIGNAL timeoutMonitor_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL timeoutEnable_MuxOut : unsigned(0 DOWNTO 0);
  -- Control path OR
  SIGNAL timeoutEnable_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL interruptEnable_MuxOut : unsigned(0 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL intrReset_MuxOut : unsigned(0 DOWNTO 0);
  -- Control path OR
  SIGNAL intrReset_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL intrMonitor_MuxOut : unsigned(31 DOWNTO 0);
  -- Control path OR
  SIGNAL intrMonitor_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL statusRegister_MuxOut : unsigned(31 DOWNTO 0);
  -- Control path OR
  SIGNAL statusRegister_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL localSwEndPtr_MuxOut : unsigned(31 DOWNTO 0);
  -- Control path OR
  SIGNAL localSwEndPtr_CE : std_logic;
  -- One-Hot Multiplexer
  SIGNAL swEndPtr_MuxOut : unsigned(31 DOWNTO 0);
  -- Control path OR
  SIGNAL swEndPtr_CE : std_logic;
  -- Bitwise AND
  SIGNAL AckOut : unsigned(0 DOWNTO 0);
  -- Register 'IdReg0'
  SIGNAL S_132 : unsigned(0 DOWNTO 0);
  -- Plus
  SIGNAL S_133 : unsigned(0 DOWNTO 0);
  -- Register 'IdReg0'
  SIGNAL S_134 : unsigned(0 DOWNTO 0);
  -- Plus
  SIGNAL S_135 : unsigned(0 DOWNTO 0);
  -- Concatenation
  SIGNAL S_136 : unsigned(13 DOWNTO 0);
  -- Test for equality
  SIGNAL S_137 : std_logic;
  -- Bitwise XOR
  SIGNAL S_138 : unsigned(0 DOWNTO 0);
  -- One-Hot Multiplexer
  SIGNAL S_139 : unsigned(0 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL S_140 : std_logic;
  -- Bitwise not
  SIGNAL S_141 : unsigned(0 DOWNTO 0);
  -- Bitwise AND
  SIGNAL S_142 : unsigned(0 DOWNTO 0);
  -- Bitwise not
  SIGNAL S_143 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_0 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_1 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_2 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_3 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_4 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_5 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_6 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_7 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_8 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_9 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_10 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_11 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_12 : unsigned(0 DOWNTO 0);
  -- Bit range selection
  SIGNAL DataIntoFIFO_13 : unsigned(0 DOWNTO 0);
  -- MPRAM 'FIFORam'
  SIGNAL S_144 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_145 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_146 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_147 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_148 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_149 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_150 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_151 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_152 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_153 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_154 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_155 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_156 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_157 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_158 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_159 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_160 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_161 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_162 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_163 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_164 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_165 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_166 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_167 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_168 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_169 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_170 : std_logic;
  -- MPRAM 'FIFORam'
  SIGNAL S_171 : std_logic;
  -- Control path inverter
  SIGNAL S_172 : std_logic;
  -- Control path inverter
  SIGNAL S_173 : std_logic;
  -- Constant value
  CONSTANT ifc_buf_rellen_1 : unsigned(15 DOWNTO 0) := (OTHERS => '0');
  -- Bitwise AND
  SIGNAL S_174 : unsigned(0 DOWNTO 0);
  -- Bitwise AND
  SIGNAL S_175 : unsigned(0 DOWNTO 0);
  -- Bitwise AND
  SIGNAL S_176 : unsigned(0 DOWNTO 0);
  -- Bitwise OR
  SIGNAL S_177 : unsigned(0 DOWNTO 0);
  -- Bitwise OR
  SIGNAL S_178 : unsigned(0 DOWNTO 0);
  -- Clock cycle delay
  SIGNAL CForkIn_17 : std_logic;
  -- Control path join
  SIGNAL S_179 : std_logic;
  -- Clock cycle delay
  SIGNAL Z_Dones_2_2 : std_logic;
  -- Control path join
  SIGNAL S_180 : std_logic;
  -- Clock cycle delay
  SIGNAL S_181 : std_logic;
  -- Bitwise OR
  SIGNAL S_182 : unsigned(0 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_1 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_2 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_3 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_4 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_5 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_6 : std_logic_vector(14 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_7 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_8 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_9 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_10 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_11 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_12 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_13 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_14 : std_logic_vector(2 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_15 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_16 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_17 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_18 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_19 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_20 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_21 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_22 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_23 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_24 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_25 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_26 : std_logic_vector(2 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_27 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_28 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_29 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_30 : std_logic_vector(1 DOWNTO 0);
  -- Switch Decoder
  SIGNAL SwitchOut : std_logic_vector(14 DOWNTO 0);
  -- Range cast
  SIGNAL RangeCast : unsigned(31 DOWNTO 0);
  -- Range cast
  SIGNAL RangeCast_1 : unsigned(31 DOWNTO 0);
  -- Switch Decoder
  SIGNAL SwitchOut_1 : std_logic_vector(7 DOWNTO 0);
  -- Range cast
  SIGNAL RangeCast_2 : unsigned(31 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_31 : std_logic_vector(2 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_32 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_33 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_34 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_35 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_36 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_37 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_38 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_39 : std_logic_vector(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_40 : std_logic_vector(1 DOWNTO 0);
  -- Range cast
  SIGNAL RangeCast_3 : unsigned(15 DOWNTO 0);
  -- Range cast
  SIGNAL RangeCast_4 : unsigned(1 DOWNTO 0);
  -- Range cast
  SIGNAL RangeCast_5 : unsigned(1 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_41 : std_logic_vector(3 DOWNTO 0);
  -- Concatenation
  SIGNAL MuxEnables_42 : std_logic_vector(3 DOWNTO 0);
  -- Component Connector
  SIGNAL I0_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I0_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I0_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I0_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I0_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_13 : std_logic;
  -- Component Connector
  SIGNAL I0_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I0_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I0_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I0_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I0_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I1_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I1_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I1_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I1_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I1_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_12 : std_logic;
  -- Component Connector
  SIGNAL I1_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I1_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I1_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I1_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I1_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I2_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I2_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I2_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I2_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I2_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_11 : std_logic;
  -- Component Connector
  SIGNAL I2_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I2_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I2_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I2_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I2_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I3_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I3_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I3_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I3_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I3_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_10 : std_logic;
  -- Component Connector
  SIGNAL I3_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I3_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I3_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I3_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I3_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I4_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I4_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I4_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I4_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I4_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_9 : std_logic;
  -- Component Connector
  SIGNAL I4_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I4_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I4_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I4_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I4_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I5_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I5_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I5_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I5_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I5_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_8 : std_logic;
  -- Component Connector
  SIGNAL I5_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I5_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I5_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I5_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I5_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I6_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I6_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I6_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I6_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I6_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_7 : std_logic;
  -- Component Connector
  SIGNAL I6_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I6_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I6_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I6_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I6_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I7_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I7_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I7_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I7_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I7_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_6 : std_logic;
  -- Component Connector
  SIGNAL I7_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I7_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I7_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I7_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I7_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I8_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I8_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I8_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I8_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I8_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_5 : std_logic;
  -- Component Connector
  SIGNAL I8_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I8_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I8_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I8_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I8_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I9_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I9_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I9_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I9_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I9_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_4 : std_logic;
  -- Component Connector
  SIGNAL I9_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I9_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I9_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I9_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I9_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I10_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I10_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I10_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I10_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I10_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_3 : std_logic;
  -- Component Connector
  SIGNAL I10_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I10_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I10_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I10_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I10_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I11_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I11_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I11_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I11_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I11_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_2 : std_logic;
  -- Component Connector
  SIGNAL I11_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I11_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I11_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I11_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I11_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I12_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I12_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I12_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I12_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I12_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_1 : std_logic;
  -- Component Connector
  SIGNAL I12_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I12_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I12_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I12_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I12_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I13_FIFORam_rx_dma_ctrl_opt_162_A0 : std_logic;
  -- Component Connector
  SIGNAL I13_FIFORam_rx_dma_ctrl_opt_162_A1_GND : std_logic;
  -- Component Connector
  SIGNAL I13_FIFORam_rx_dma_ctrl_opt_162_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I13_FIFORam_rx_dma_ctrl_opt_162_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I13_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_0 : std_logic;
  -- Component Connector
  SIGNAL I13_FIFORam_rx_dma_ctrl_opt_162_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I13_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND : std_logic;
  -- Component Connector
  SIGNAL I13_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I13_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I13_FIFORam_rx_dma_ctrl_opt_162_WE : std_logic;
  -- Component Connector
  SIGNAL I0_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I0_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I0_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I0_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I0_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I0_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I0_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I0_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I0_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I0_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I1_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I1_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I1_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I1_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I1_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I1_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I1_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I1_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I1_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I1_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I2_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I2_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I2_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I2_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I2_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I2_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I2_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I2_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I2_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I2_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I3_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I3_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I3_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I3_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I3_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I3_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I3_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I3_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I3_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I3_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I4_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I4_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I4_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I4_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I4_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I4_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I4_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I4_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I4_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I4_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I5_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I5_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I5_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I5_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I5_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I5_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I5_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I5_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I5_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I5_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I6_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I6_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I6_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I6_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I6_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I6_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I6_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I6_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I6_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I6_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I7_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I7_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I7_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I7_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I7_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I7_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I7_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I7_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I7_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I7_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I8_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I8_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I8_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I8_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I8_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I8_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I8_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I8_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I8_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I8_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I9_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I9_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I9_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I9_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I9_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I9_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I9_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I9_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I9_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I9_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I10_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I10_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I10_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I10_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I10_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I10_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I10_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I10_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I10_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I10_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I11_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I11_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I11_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I11_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I11_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I11_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I11_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I11_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I11_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I11_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I12_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I12_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I12_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I12_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I12_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I12_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I12_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I12_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I12_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I12_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I13_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I13_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I13_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I13_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I13_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I13_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I13_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I13_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I13_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I13_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I14_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I14_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I14_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I14_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I14_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I14_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I14_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I14_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I14_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I14_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I15_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I15_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I15_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I15_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I15_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I15_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I15_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I15_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I15_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I15_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I16_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I16_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I16_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I16_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I16_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I16_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I16_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I16_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I16_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I16_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I17_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I17_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I17_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I17_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I17_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I17_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I17_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I17_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I17_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I17_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I18_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I18_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I18_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I18_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I18_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I18_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I18_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I18_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I18_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I18_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I19_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I19_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I19_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I19_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I19_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I19_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I19_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I19_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I19_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I19_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I20_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I20_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I20_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I20_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I20_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I20_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I20_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I20_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I20_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I20_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I21_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I21_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I21_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I21_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I21_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I21_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I21_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I21_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I21_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I21_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I22_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I22_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I22_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I22_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I22_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I22_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I22_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I22_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I22_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I22_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I23_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I23_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I23_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I23_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I23_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I23_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I23_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I23_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I23_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I23_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I24_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I24_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I24_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I24_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I24_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I24_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I24_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I24_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I24_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I24_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I25_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I25_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I25_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I25_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I25_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I25_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I25_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I25_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I25_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I25_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I26_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I26_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I26_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I26_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I26_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I26_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I26_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I26_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I26_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I26_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I27_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I27_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I27_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I27_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I27_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I27_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I27_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I27_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I27_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I27_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I28_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I28_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I28_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I28_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I28_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I28_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I28_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I28_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I28_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I28_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I29_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I29_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I29_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I29_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I29_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I29_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I29_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I29_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I29_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I29_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I30_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I30_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I30_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I30_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I30_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I30_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I30_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I30_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I30_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I30_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I31_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 : std_logic;
  -- Component Connector
  SIGNAL I31_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 : std_logic;
  -- Component Connector
  SIGNAL I31_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND : std_logic;
  -- Component Connector
  SIGNAL I31_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND : std_logic;
  -- Component Connector
  SIGNAL I31_DMAReqMem_rx_dma_ctrl_opt_208_D : std_logic;
  -- Component Connector
  SIGNAL I31_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 : std_logic;
  -- Component Connector
  SIGNAL I31_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 : std_logic;
  -- Component Connector
  SIGNAL I31_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND : std_logic;
  -- Component Connector
  SIGNAL I31_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND : std_logic;
  -- Component Connector
  SIGNAL I31_DMAReqMem_rx_dma_ctrl_opt_208_WE : std_logic;
  -- Component Connector
  SIGNAL I0_start_rx_dma_ctrl_opt_612_aclr_GND : std_logic;
  -- Component Connector
  SIGNAL I0_start_rx_dma_ctrl_opt_574_aclr_GND : std_logic;
  -- Component Connector
  SIGNAL I0_start_rx_dma_ctrl_opt_567_aclr_GND : std_logic;
  -- Component Connector
  SIGNAL I0_start_rx_dma_ctrl_opt_558_aclr_GND : std_logic;
  -- Component Connector
  SIGNAL I0_start_rx_dma_ctrl_opt_521_aclr_GND : std_logic;
  -- Component Connector
  SIGNAL I0_start_rx_dma_ctrl_opt_508_aclr_GND : std_logic;
  -- Component Connector
  SIGNAL I0_start_rx_dma_ctrl_opt_278_aclr_GND : std_logic;
  -- Component Connector
  SIGNAL I0_start_rx_dma_ctrl_opt_258_aclr_GND : std_logic;
  -- Component Connector
  SIGNAL I0_start_rx_dma_ctrl_opt_245_aclr_GND : std_logic;
  -- Component Connector
  SIGNAL I0_start_rx_dma_ctrl_opt_231_aclr_GND : std_logic;
  -- Component Connector
  SIGNAL I0_start_rx_dma_ctrl_opt_212_aclr_GND : std_logic;

BEGIN

  -- Processes:

  PROCESS( BinOpOut_61, MuxEnables ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables IS
      WHEN "10" => ifc_interrupt <= BinOpOut_61;
      WHEN "01" => ifc_interrupt <= ConstOut_18;
      WHEN OTHERS => ifc_interrupt <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_1 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_1 IS
      WHEN "10" => ifc_interrupt0 <= ConstOut;
      WHEN "01" => ifc_interrupt0 <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => ifc_interrupt0 <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_2 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_2 IS
      WHEN "10" => ifc_interrupt1 <= ConstOut;
      WHEN "01" => ifc_interrupt1 <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => ifc_interrupt1 <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( ConstOut_2, MuxEnables_3 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_3 IS
      WHEN "10" => ifc_enable <= ConstOut_2;
      WHEN "01" => ifc_enable <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => ifc_enable <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( BinOpOut_53, MuxEnables_4 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_4 IS
      WHEN "10" => ifc_buf_rellen <= BinOpOut_53;
      WHEN "01" => ifc_buf_rellen <= ifc_buf_rellen_1;
      WHEN OTHERS => ifc_buf_rellen <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_5 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_5 IS
      WHEN "10" => ifc_desc_read <= ConstOut;
      WHEN "01" => ifc_desc_read <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => ifc_desc_read <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( DESC_DO, swStrPtr, swEndPtr, localSwEndPtr, controlRegister, statusRegister, bufSizeMask, 
    intrRegister, timeoutRegister, BinOpOut_71, BinOpOut_72, BinOpOut_73, BinOpOut_74, BinOpOut_75, MuxEnables_6 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_6 IS
      WHEN "100000000000000" => ifc_sw_drd <= controlRegister;
      WHEN "010000000000000" => ifc_sw_drd <= statusRegister;
      WHEN "001000000000000" => ifc_sw_drd <= swStrPtr;
      WHEN "000100000000000" => ifc_sw_drd <= swEndPtr;
      WHEN "000010000000000" => ifc_sw_drd <= bufSizeMask;
      WHEN "000001000000000" => ifc_sw_drd <= intrRegister;
      WHEN "000000100000000" => ifc_sw_drd <= timeoutRegister;
      WHEN "000000010000000" => ifc_sw_drd <= BinOpOut_71;
      WHEN "000000001000000" => ifc_sw_drd <= BinOpOut_72;
      WHEN "000000000100000" => ifc_sw_drd <= UNSIGNED(DESC_DO);
      WHEN "000000000010000" => ifc_sw_drd <= BinOpOut_73;
      WHEN "000000000001000" => ifc_sw_drd <= BinOpOut_74;
      WHEN "000000000000100" => ifc_sw_drd <= localSwEndPtr;
      WHEN "000000000000010" => ifc_sw_drd <= BinOpOut_75;
      WHEN "000000000000001" => ifc_sw_drd <= ConstOut_22;
      WHEN OTHERS => ifc_sw_drd <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( BinOpOut_65, MuxEnables_7 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_7 IS
      WHEN "10" => ifc_sw_ardy <= BinOpOut_65;
      WHEN "01" => ifc_sw_ardy <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => ifc_sw_ardy <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( SW_RD, MuxEnables_8 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_8 IS
      WHEN "10" => ifc_sw_drdy <= to_unsigned(SW_RD);
      WHEN "01" => ifc_sw_drdy <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => ifc_sw_drdy <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( S_0, MuxEnables_9 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_9 IS
      WHEN "10" => ifc_dma_dout <= S_0;
      WHEN "01" => ifc_dma_dout <= ConstOut_22;
      WHEN OTHERS => ifc_dma_dout <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_10 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_10 IS
      WHEN "10" => debugDmaAckWait <= ConstOut;
      WHEN "01" => debugDmaAckWait <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => debugDmaAckWait <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( PIN_CLK ) BEGIN
    IF rising_edge( PIN_CLK ) THEN
      IF ( PIN_RESET='1' ) THEN
        S_140 <= '0';
        S_134 <= "0";
        S_132 <= "0";
        swEndPtr <= (OTHERS => '0');
        localSwEndPtr <= (OTHERS => '0');
        statusRegister <= "00000000000000000000000000000001";
        intrMonitor <= (OTHERS => '0');
        intrReset <= "0";
        interruptEnable <= "0";
        timeoutEnable <= "0";
        timeoutMonitor <= (OTHERS => '0');
        dataDMAProgressCnt <= "00000000";
        dma_done_cnt <= "00";
        setStoped <= "1";
        setPaused <= "0";
        newDescReady <= "0";
        pageBreakFlag <= "0";
        timeoutExpired <= "0";
        Z_Dones_1_4 <= '0';
        S_26 <= '0';
        Z_Dones_2_2 <= '0';
        Z_Dones_1_5 <= '0';
        Z_Dones_1_3 <= '0';
        LoopZ_8 <= '0';
        CForkIn_16 <= '0';
        Z_Dones_5 <= '0';
        S_5 <= '0';
        S_4 <= '0';
        Z_Dones_0 <= '0';
        SeqChain_1 <= '0';
        SeqChain_2 <= '0';
        S_9 <= '0';
        S_8 <= '0';
        CForkIn_15 <= '0';
        Z_Dones_1_2 <= '0';
        CForkIn_14 <= '0';
        ElseDone <= '0';
        SeqChain_3 <= '0';
        Z_Dones_4_1 <= '0';
        Z_Dones_1_1 <= '0';
        CForkIn_17 <= '0';
        Z_Dones_4 <= '0';
        LoopZ_3 <= '0';
        Z_Dones_2_1 <= '0';
        Z_Dones_1 <= '0';
        S_29 <= '0';
        LoopZ_5 <= '0';
        LoopZ_4 <= '0';
        LoopZ <= '0';
        LoopZ_2 <= '0';
      ELSE
        S_140 <= to_stdlogic(S_139);

        -- Update of register 'IdReg0'
        IF ( to_stdlogic(AckOut)='1' ) THEN
          S_134 <= S_135;
        END IF;

        -- Update of register 'IdReg0'
        IF ( to_stdlogic(S_142)='1' ) THEN
          S_132 <= S_133;
        END IF;

        -- Update of register 'swEndPtr'
        IF ( swEndPtr_CE='1' ) THEN
          swEndPtr <= swEndPtr_MuxOut;
        END IF;

        -- Update of register 'localSwEndPtr'
        IF ( localSwEndPtr_CE='1' ) THEN
          localSwEndPtr <= localSwEndPtr_MuxOut;
        END IF;

        -- Update of register 'statusRegister'
        IF ( statusRegister_CE='1' ) THEN
          statusRegister <= statusRegister_MuxOut;
        END IF;

        -- Update of register 'intrMonitor'
        IF ( intrMonitor_CE='1' ) THEN
          intrMonitor <= intrMonitor_MuxOut;
        END IF;

        -- Update of register 'intrReset'
        IF ( intrReset_CE='1' ) THEN
          intrReset <= intrReset_MuxOut;
        END IF;

        -- Update of register 'interruptEnable'
        IF ( timeoutEnable_CE='1' ) THEN
          interruptEnable <= interruptEnable_MuxOut;
        END IF;

        -- Update of register 'timeoutEnable'
        IF ( timeoutEnable_CE='1' ) THEN
          timeoutEnable <= timeoutEnable_MuxOut;
        END IF;

        -- Update of register 'timeoutMonitor'
        IF ( timeoutMonitor_CE='1' ) THEN
          timeoutMonitor <= timeoutMonitor_MuxOut;
        END IF;

        -- Update of register 'dataDMAProgressCnt'
        IF ( dataDMAProgressCnt_CE='1' ) THEN
          dataDMAProgressCnt <= dataDMAProgressCnt_MuxOut;
        END IF;

        -- Update of register 'dma_done_cnt'
        IF ( dma_done_cnt_CE='1' ) THEN
          dma_done_cnt <= dma_done_cnt_MuxOut;
        END IF;

        -- Update of register 'setStoped'
        IF ( setStoped_CE='1' ) THEN
          setStoped <= setStoped_MuxOut;
        END IF;

        -- Update of register 'setPaused'
        IF ( setPaused_CE='1' ) THEN
          setPaused <= setPaused_MuxOut;
        END IF;

        -- Update of register 'newDescReady'
        IF ( newDescReady_CE='1' ) THEN
          newDescReady <= newDescReady_MuxOut;
        END IF;

        -- Update of register 'pageBreakFlag'
        IF ( length_CE_1='1' ) THEN
          pageBreakFlag <= pageBreakFlag_MuxOut;
        END IF;

        -- Update of register 'timeoutExpired'
        IF ( timeoutExpired_CE='1' ) THEN
          timeoutExpired <= timeoutExpired_MuxOut;
        END IF;

        Z_Dones_1_4 <= CForkIn_13;
        S_26 <= to_stdlogic(S_25);
        Z_Dones_2_2 <= S_180;
        Z_Dones_1_5 <= S_19;
        Z_Dones_1_3 <= CForkIn_11;
        LoopZ_8 <= S_18;
        CForkIn_16 <= S_15;
        Z_Dones_5 <= S_17;
        S_5 <= S_2;
        S_4 <= False_fork_input;
        Z_Dones_0 <= S_16;
        SeqChain_1 <= Z_Dones_1_2;
        SeqChain_2 <= SeqChain_1;
        S_9 <= S_6;
        S_8 <= False_fork_input_1;
        CForkIn_15 <= S_14;
        Z_Dones_1_2 <= WireFalse_10;
        CForkIn_14 <= S_13;
        ElseDone <= WireFalse_8;
        SeqChain_3 <= S_12;
        Z_Dones_4_1 <= WireTrue_10;
        Z_Dones_1_1 <= WireTrue_9;
        CForkIn_17 <= S_179;
        Z_Dones_4 <= WireTrue_8;
        LoopZ_3 <= WireFalse_4;
        Z_Dones_2_1 <= WireTrue_7;
        Z_Dones_1 <= WireFalse_3;
        S_29 <= to_stdlogic(S_28);
        LoopZ_5 <= WireTrue_6;
        LoopZ_4 <= WireTrue_5;
        LoopZ <= WireFalse_2;
        LoopZ_2 <= WireTrue_4;
      END IF;
    END IF;
  END PROCESS;

  PROCESS( S_140, S_142, MuxEnables_11 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_11 IS
      WHEN "10" => S_139 <= to_unsigned(S_140);
      WHEN "01" => S_139 <= S_142;
      WHEN OTHERS => S_139 <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( SW_DWR, BinOpOut_59, MuxEnables_12 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_12 IS
      WHEN "10" => swEndPtr_MuxOut <= BinOpOut_59;
      WHEN "01" => swEndPtr_MuxOut <= UNSIGNED(SW_DWR);
      WHEN OTHERS => swEndPtr_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( SW_DWR, BinOpOut_36, MuxEnables_13 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_13 IS
      WHEN "10" => localSwEndPtr_MuxOut <= BinOpOut_36;
      WHEN "01" => localSwEndPtr_MuxOut <= UNSIGNED(SW_DWR);
      WHEN OTHERS => localSwEndPtr_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( ConstOut_5, ConstOut_7, MuxEnables_14 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_14 IS
      WHEN "100" => statusRegister_MuxOut <= ConstOut_5;
      WHEN "010" => statusRegister_MuxOut <= ConstOut_7;
      WHEN "001" => statusRegister_MuxOut <= ConstOut_8;
      WHEN OTHERS => statusRegister_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( BinOpOut_55, BinOpOut_56, MuxEnables_15 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_15 IS
      WHEN "10" => intrMonitor_MuxOut <= BinOpOut_55;
      WHEN "01" => intrMonitor_MuxOut <= BinOpOut_56;
      WHEN OTHERS => intrMonitor_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_16 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_16 IS
      WHEN "10" => intrReset_MuxOut <= dataDMAProgressCnt_Down_1;
      WHEN "01" => intrReset_MuxOut <= ConstOut;
      WHEN OTHERS => intrReset_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( BinOpOut_68, MuxEnables_17 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_17 IS
      WHEN "10" => interruptEnable_MuxOut <= dataDMAProgressCnt_Down_1;
      WHEN "01" => interruptEnable_MuxOut <= BinOpOut_68;
      WHEN OTHERS => interruptEnable_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( BinOpOut_69, MuxEnables_18 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_18 IS
      WHEN "10" => timeoutEnable_MuxOut <= dataDMAProgressCnt_Down_1;
      WHEN "01" => timeoutEnable_MuxOut <= BinOpOut_69;
      WHEN OTHERS => timeoutEnable_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( BinOpOut_64, MuxEnables_19 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_19 IS
      WHEN "10" => timeoutMonitor_MuxOut <= ConstOut_22;
      WHEN "01" => timeoutMonitor_MuxOut <= BinOpOut_64;
      WHEN OTHERS => timeoutMonitor_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( BinOpOut_3, BinOpOut_4, MuxEnables_20 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_20 IS
      WHEN "10" => dataDMAProgressCnt_MuxOut <= BinOpOut_3;
      WHEN "01" => dataDMAProgressCnt_MuxOut <= BinOpOut_4;
      WHEN OTHERS => dataDMAProgressCnt_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_21 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_21 IS
      WHEN "10" => dataDMAProgressCnt_Up <= ConstOut;
      WHEN "01" => dataDMAProgressCnt_Up <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => dataDMAProgressCnt_Up <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_22 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_22 IS
      WHEN "10" => dataDMAProgressCnt_Down <= ConstOut;
      WHEN "01" => dataDMAProgressCnt_Down <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => dataDMAProgressCnt_Down <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( BinOpOut_45, BinOpOut_46, MuxEnables_23 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_23 IS
      WHEN "10" => dma_done_cnt_MuxOut <= BinOpOut_45;
      WHEN "01" => dma_done_cnt_MuxOut <= BinOpOut_46;
      WHEN OTHERS => dma_done_cnt_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_24 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_24 IS
      WHEN "10" => setStoped_MuxOut <= ConstOut;
      WHEN "01" => setStoped_MuxOut <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => setStoped_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_25 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_25 IS
      WHEN "10" => setPaused_MuxOut <= dataDMAProgressCnt_Down_1;
      WHEN "01" => setPaused_MuxOut <= ConstOut;
      WHEN OTHERS => setPaused_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( getND, MuxEnables_26 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_26 IS
      WHEN "100" => getNextDesc <= ConstOut;
      WHEN "010" => getNextDesc <= getND;
      WHEN "001" => getNextDesc <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => getNextDesc <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_27 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_27 IS
      WHEN "10" => newDescReady_MuxOut <= dataDMAProgressCnt_Down_1;
      WHEN "01" => newDescReady_MuxOut <= ConstOut;
      WHEN OTHERS => newDescReady_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_28 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_28 IS
      WHEN "10" => pageBreakFlag_MuxOut <= dataDMAProgressCnt_Down_1;
      WHEN "01" => pageBreakFlag_MuxOut <= ConstOut;
      WHEN OTHERS => pageBreakFlag_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_29 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_29 IS
      WHEN "10" => timeoutExpired_MuxOut <= ConstOut;
      WHEN "01" => timeoutExpired_MuxOut <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => timeoutExpired_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( Z_Dones_1_4, S_26, MuxEnables_30 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_30 IS
      WHEN "10" => LoopZ_6 <= to_unsigned(S_26);
      WHEN "01" => LoopZ_6 <= to_unsigned(Z_Dones_1_4);
      WHEN OTHERS => LoopZ_6 <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( BinOpOut_67, WireTrue_26 ) BEGIN
    -- Switch Decoder
    CASE BinOpOut_67 IS
      WHEN "000000" => SwitchOut <= WireTrue_26 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
      WHEN "000100" => SwitchOut <= '0' & WireTrue_26 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
      WHEN "001000" => SwitchOut <= '0' & '0' & WireTrue_26 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
      WHEN "001100" => SwitchOut <= '0' & '0' & '0' & WireTrue_26 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
      WHEN "010000" => SwitchOut <= '0' & '0' & '0' & '0' & WireTrue_26 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
      WHEN "010100" => SwitchOut <= '0' & '0' & '0' & '0' & '0' & WireTrue_26 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
      WHEN "011000" => SwitchOut <= '0' & '0' & '0' & '0' & '0' & '0' & WireTrue_26 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
      WHEN "011100" => SwitchOut <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & WireTrue_26 & '0' & '0' & '0' & '0' & '0' & '0' & '0';
      WHEN "100000" => SwitchOut <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & WireTrue_26 & '0' & '0' & '0' & '0' & '0' & '0';
      WHEN "100100" => SwitchOut <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & WireTrue_26 & '0' & '0' & '0' & '0' & '0';
      WHEN "101000" => SwitchOut <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & WireTrue_26 & '0' & '0' & '0' & '0';
      WHEN "101100" => SwitchOut <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
        WireTrue_26 & '0' & '0' & '0';
      WHEN "110000" => SwitchOut <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
        WireTrue_26 & '0' & '0';
      WHEN "110100" => SwitchOut <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
        WireTrue_26 & '0';
      WHEN OTHERS => SwitchOut <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & 
        WireTrue_26;
    END CASE;
  END PROCESS;

  PROCESS( WireTrue_24, BinOpOut_67 ) BEGIN
    -- Switch Decoder
    CASE BinOpOut_67 IS
      WHEN "000000" => SwitchOut_1 <= WireTrue_24 & '0' & '0' & '0' & '0' & '0' & '0' & '0';
      WHEN "000100" => SwitchOut_1 <= '0' & WireTrue_24 & '0' & '0' & '0' & '0' & '0' & '0';
      WHEN "001000" => SwitchOut_1 <= '0' & '0' & WireTrue_24 & '0' & '0' & '0' & '0' & '0';
      WHEN "001100" => SwitchOut_1 <= '0' & '0' & '0' & WireTrue_24 & '0' & '0' & '0' & '0';
      WHEN "010000" => SwitchOut_1 <= '0' & '0' & '0' & '0' & WireTrue_24 & '0' & '0' & '0';
      WHEN "010100" => SwitchOut_1 <= '0' & '0' & '0' & '0' & '0' & WireTrue_24 & '0' & '0';
      WHEN "011000" => SwitchOut_1 <= '0' & '0' & '0' & '0' & '0' & '0' & WireTrue_24 & '0';
      WHEN OTHERS => SwitchOut_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & WireTrue_24;
    END CASE;
  END PROCESS;

  PROCESS( PIN_CLK ) BEGIN
    IF rising_edge( PIN_CLK ) THEN
      -- Update of register 'length'
      IF ( length_CE='1' ) THEN
        length_1 <= length_MuxOut;
      END IF;

      -- Update of register 'flag_length'
      IF ( S_2='1' ) THEN
        flag_length <= S_136;
      END IF;

      -- Update of register 'descOffset'
      IF ( descOffset_CE='1' ) THEN
        descOffset <= descOffset_MuxOut;
      END IF;

      -- Update of register 'hwDataLength'
      IF ( hwDataLength_CE='1' ) THEN
        hwDataLength <= hwDataLength_MuxOut;
      END IF;

      -- Update of register 'length'
      IF ( length_CE_1='1' ) THEN
        length <= length_MuxOut_1;
      END IF;

      -- Update of register 'getND'
      IF ( WireFalse_11='1' ) THEN
        getND <= ConstOut_15;
      END IF;

      -- Update of register 'localHwEndPtr'
      IF ( S_11='1' ) THEN
        localHwEndPtr <= hwEndPtr;
      END IF;

      -- Update of register 'swFreeSpace'
      IF ( WireTrue_10='1' ) THEN
        swFreeSpace <= BinOpOut_24;
      END IF;

      -- Update of register 'laddr'
      IF ( WireFalse_10='1' ) THEN
        laddr <= BinOpOut_31;
      END IF;

      -- Update of register 'pageFreeSpace'
      IF ( WireTrue_10='1' ) THEN
        pageFreeSpace <= BinOpOut_23;
      END IF;

      -- Update of register 'dataLength'
      IF ( WireTrue_10='1' ) THEN
        dataLength <= BinOpOut_21;
      END IF;

      -- Update of register 'parts'
      IF ( parts_CE='1' ) THEN
        parts <= parts_MuxOut;
      END IF;
    END IF;
  END PROCESS;

  PROCESS( BinOpOut_50, BinOpOut_51, MuxEnables_31 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_31 IS
      WHEN "100" => length_MuxOut <= ConstOut_23;
      WHEN "010" => length_MuxOut <= BinOpOut_50;
      WHEN "001" => length_MuxOut <= BinOpOut_51;
      WHEN OTHERS => length_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( BinOpOut_33, MuxEnables_32 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_32 IS
      WHEN "10" => descOffset_MuxOut <= ConstOut_11;
      WHEN "01" => descOffset_MuxOut <= BinOpOut_33;
      WHEN OTHERS => descOffset_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( dataLength, MuxEnables_33 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_33 IS
      WHEN "10" => hwDataLength_MuxOut <= ConstOut_12;
      WHEN "01" => hwDataLength_MuxOut <= dataLength;
      WHEN OTHERS => hwDataLength_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( hwDataLength, pageFreeSpace, MuxEnables_34 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_34 IS
      WHEN "10" => length_MuxOut_1 <= hwDataLength;
      WHEN "01" => length_MuxOut_1 <= pageFreeSpace;
      WHEN OTHERS => length_MuxOut_1 <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_35 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_35 IS
      WHEN "10" => ConstOut_15 <= ConstOut;
      WHEN "01" => ConstOut_15 <= dataDMAProgressCnt_Down_1;
      WHEN OTHERS => ConstOut_15 <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( BinOpOut_14, MuxEnables_36 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_36 IS
      WHEN "10" => parts_MuxOut <= ConstOut_18;
      WHEN "01" => parts_MuxOut <= BinOpOut_14;
      WHEN OTHERS => parts_MuxOut <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( Z_Dones_1, S_29, MuxEnables_37 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_37 IS
      WHEN "10" => SeqChain <= to_unsigned(S_29);
      WHEN "01" => SeqChain <= to_unsigned(Z_Dones_1);
      WHEN OTHERS => SeqChain <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_38 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_38 IS
      WHEN "10" => ConstOut_7 <= ConstOut_6;
      WHEN "01" => ConstOut_7 <= ConstOut_4;
      WHEN OTHERS => ConstOut_7 <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( MuxEnables_39 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_39 IS
      WHEN "10" => ConstOut_5 <= ConstOut_1;
      WHEN "01" => ConstOut_5 <= ConstOut_4;
      WHEN OTHERS => ConstOut_5 <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( PIN_CLK ) BEGIN
    IF rising_edge( PIN_CLK ) THEN
      IF ( PIN_RESET='1' ) THEN
        LoopZ_1 <= '0';
        Z_Dones_2 <= '0';
        LoopZ_7 <= '0';
        S_181 <= '0';
        hwEndPtr <= (OTHERS => '0');
        hwStrPtr <= (OTHERS => '0');
        timeoutRegister <= (OTHERS => '0');
        regIntrMonitor <= (OTHERS => '0');
        intrRegister <= (OTHERS => '0');
        bufSizeMask <= "00000000000000000000111111111111";
        controlRegister <= "00000000000000000000000000000100";
        swStrPtr <= (OTHERS => '0');
      ELSE
        LoopZ_1 <= WireTrue_3;
        Z_Dones_2 <= CForkIn_1;
        LoopZ_7 <= S_10;
        S_181 <= to_stdlogic(S_182);

        -- Update of register 'hwEndPtr'
        IF ( WireTrue_2='1' ) THEN
          hwEndPtr <= BinOpOut_6;
        END IF;

        -- Update of register 'hwStrPtr'
        IF ( SeqChain_2='1' ) THEN
          hwStrPtr <= BinOpOut_34;
        END IF;

        -- Update of register 'timeoutRegister'
        IF ( LinkWire_6='1' ) THEN
          timeoutRegister <= UNSIGNED(SW_DWR);
        END IF;

        -- Update of register 'regIntrMonitor'
        IF ( CForkIn_11='1' ) THEN
          regIntrMonitor <= intrMonitor;
        END IF;

        -- Update of register 'intrRegister'
        IF ( LinkWire_5='1' ) THEN
          intrRegister <= UNSIGNED(SW_DWR);
        END IF;

        -- Update of register 'bufSizeMask'
        IF ( LinkWire_4='1' ) THEN
          bufSizeMask <= UNSIGNED(SW_DWR);
        END IF;

        -- Update of register 'controlRegister'
        IF ( LinkWire_0='1' ) THEN
          controlRegister <= UNSIGNED(SW_DWR);
        END IF;

        -- Update of register 'swStrPtr'
        IF ( LinkWire_2='1' ) THEN
          swStrPtr <= UNSIGNED(SW_DWR);
        END IF;
      END IF;
    END IF;
  END PROCESS;

  PROCESS( MuxEnables_40 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_40 IS
      WHEN "10" => ConstOut_2 <= dataDMAProgressCnt_Down_1;
      WHEN "01" => ConstOut_2 <= ConstOut;
      WHEN OTHERS => ConstOut_2 <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( DESC_DO, laddr, BinOpOut_30, BinOpOut_32, MuxEnables_41 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_41 IS
      WHEN "1000" => S_32 <= UNSIGNED(DESC_DO);
      WHEN "0100" => S_32 <= BinOpOut_30;
      WHEN "0010" => S_32 <= laddr;
      WHEN "0001" => S_32 <= BinOpOut_32;
      WHEN OTHERS => S_32 <= (OTHERS => 'X');
    END CASE;
  END PROCESS;

  PROCESS( BinOpOut_13, MuxEnables_42 ) BEGIN
    -- One-Hot Multiplexer
    CASE MuxEnables_42 IS
      WHEN "1000" => BinOpOut_76 <= BinOpOut_13;
      WHEN "0100" => BinOpOut_76 <= ConstOut_9;
      WHEN "0010" => BinOpOut_76 <= ConstOut_10;
      WHEN "0001" => BinOpOut_76 <= ConstOut_18;
      WHEN OTHERS => BinOpOut_76 <= (OTHERS => 'X');
    END CASE;
  END PROCESS;


  -- Combinational expressions:

  MuxEnables <= CForkIn_11 & not(CForkIn_11);
  MuxEnables_1 <= WireTrue_21 & not(WireTrue_21);
  MuxEnables_2 <= WireTrue_23 & not(WireTrue_23);
  MuxEnables_3 <= CForkIn_1 & S_172;
  MuxEnables_4 <= S_5 & S_131;
  MuxEnables_5 <= WireTrue_7 & not(WireTrue_7);
  MuxEnables_6 <= LinkWire_0_1 & LinkWire_1 & LinkWire_2_1 & LinkWire_3_1 & LinkWire_4_1 & LinkWire_5_1 & 
    LinkWire_6_1 & LinkWire_7 & LinkWire_8 & LinkWire_9 & LinkWire_10 & LinkWire_11 & LinkWire_12 & LinkWire_13 & 
    not((LinkWire_0_1 or LinkWire_1 or LinkWire_2_1 or LinkWire_3_1 or LinkWire_4_1 or LinkWire_5_1 or 
    LinkWire_6_1 or LinkWire_7 or LinkWire_8 or LinkWire_9 or LinkWire_10 or LinkWire_11 or LinkWire_12 or 
    LinkWire_13));
  MuxEnables_7 <= CForkIn_13 & S_173;
  MuxEnables_8 <= CForkIn_13 & S_173;
  S_173 <= not(CForkIn_13);
  MuxEnables_9 <= CForkIn_1 & S_172;
  S_172 <= not(CForkIn_1);
  MuxEnables_10 <= WireTrue_14 & not(WireTrue_14);
  DataIntoFIFO_0 <= BinOpOut_38(0 DOWNTO 0);
  DataIntoFIFO_1 <= BinOpOut_38(1 DOWNTO 1);
  DataIntoFIFO_2 <= BinOpOut_38(2 DOWNTO 2);
  DataIntoFIFO_3 <= BinOpOut_38(3 DOWNTO 3);
  DataIntoFIFO_4 <= BinOpOut_38(4 DOWNTO 4);
  DataIntoFIFO_5 <= BinOpOut_38(5 DOWNTO 5);
  DataIntoFIFO_6 <= BinOpOut_38(6 DOWNTO 6);
  DataIntoFIFO_7 <= BinOpOut_38(7 DOWNTO 7);
  DataIntoFIFO_8 <= BinOpOut_38(8 DOWNTO 8);
  DataIntoFIFO_9 <= BinOpOut_38(9 DOWNTO 9);
  DataIntoFIFO_10 <= BinOpOut_38(10 DOWNTO 10);
  DataIntoFIFO_11 <= BinOpOut_38(11 DOWNTO 11);
  DataIntoFIFO_12 <= BinOpOut_38(12 DOWNTO 12);
  DataIntoFIFO_13 <= BinOpOut_38(13 DOWNTO 13);
  S_136 <= to_unsigned(S_157) & to_unsigned(S_156) & to_unsigned(S_155) & to_unsigned(S_154) & to_unsigned(S_153) & 
    to_unsigned(S_152) & to_unsigned(S_151) & to_unsigned(S_150) & to_unsigned(S_149) & to_unsigned(S_148) & 
    to_unsigned(S_147) & to_unsigned(S_146) & to_unsigned(S_145) & to_unsigned(S_144);
  S_143 <= not((to_unsigned(S_137) and not(to_unsigned(S_140))));
  S_142 <= S_141 and S_7;
  S_141 <= not((to_unsigned(S_137) and to_unsigned(S_140)));
  MuxEnables_11 <= to_stdlogic(not(S_138)) & to_stdlogic(S_138);
  S_138 <= S_142 xor AckOut;
  S_137 <= to_stdlogic(S_132 = S_134);
  S_135 <= S_134 + ConstOut;
  S_133 <= S_132 + ConstOut;
  AckOut <= S_3 and S_143;
  swEndPtr_CE <= WireTrue_19 or WireTrue_25;
  MuxEnables_12 <= WireTrue_19 & WireTrue_25;
  localSwEndPtr_CE <= SeqChain_2 or WireTrue_25;
  MuxEnables_13 <= SeqChain_2 & WireTrue_25;
  statusRegister_CE <= WireTrue_3 or WireTrue_4 or WireFalse_2;
  MuxEnables_14 <= WireTrue_3 & WireTrue_4 & WireFalse_2;
  intrMonitor_CE <= WireTrue_18 or WireFalse_15;
  MuxEnables_15 <= WireTrue_18 & WireFalse_15;
  intrReset_CE <= WireTrue_18 or LinkWire_5;
  MuxEnables_16 <= WireTrue_18 & LinkWire_5;
  MuxEnables_17 <= S_23 & LinkWire_5;
  timeoutEnable_CE <= S_23 or LinkWire_5;
  MuxEnables_18 <= S_23 & LinkWire_5;
  timeoutMonitor_CE <= S_22 or WireFalse_18;
  MuxEnables_19 <= S_22 & WireFalse_18;
  dataDMAProgressCnt_CE <= WireTrue or WireTrue_1;
  MuxEnables_20 <= WireTrue & WireTrue_1;
  MuxEnables_21 <= SeqChain_2 & not(SeqChain_2);
  MuxEnables_22 <= S_5 & S_131;
  S_131 <= not(S_5);
  dma_done_cnt_CE <= WireTrue_15 or WireTrue_16;
  MuxEnables_23 <= WireTrue_15 & WireTrue_16;
  setStoped_CE <= WireTrue_8 or S_20;
  MuxEnables_24 <= WireTrue_8 & S_20;
  setPaused_CE <= S_21 or WireTrue_9;
  MuxEnables_25 <= S_21 & WireTrue_9;
  MuxEnables_26 <= WireTrue_8 & S_9 & not((WireTrue_8 or S_9));
  newDescReady_CE <= WireFalse_3 or WireFalse_4;
  MuxEnables_27 <= WireFalse_3 & WireFalse_4;
  MuxEnables_28 <= WireTrue_13 & WireFalse_9;
  timeoutExpired_CE <= WireTrue_20 or WireFalse_16;
  MuxEnables_29 <= WireTrue_20 & WireFalse_16;
  S_25 <= to_unsigned(S_26) xor S_27;
  MuxEnables_30 <= to_stdlogic(S_27) & to_stdlogic(not(S_27));
  S_27 <= to_unsigned(Z_Dones_1_4) xor to_unsigned(Z_Dones_2_2);
  BinOpOut_75 <= ConstOut_25 & debugDmaAckWait;
  BinOpOut_74 <= ConstOut_24 & dataDMAProgressCnt_Down & ifc_buf_rellen;
  BinOpOut_73 <= ConstOut_23 & to_unsigned(VCC) & to_unsigned(BUF_NEWLEN_DV) & UNSIGNED(BUF_NEWLEN);
  BinOpOut_72 <= ConstOut_13 & hwEndPtr;
  BinOpOut_71 <= ConstOut_13 & hwStrPtr;
  LinkWire_0_1 <= SwitchOut(14);
  LinkWire_1 <= SwitchOut(13);
  LinkWire_2_1 <= SwitchOut(12);
  LinkWire_3_1 <= SwitchOut(11);
  LinkWire_4_1 <= SwitchOut(10);
  LinkWire_5_1 <= SwitchOut(9);
  LinkWire_6_1 <= SwitchOut(8);
  LinkWire_7 <= SwitchOut(7);
  LinkWire_8 <= SwitchOut(6);
  LinkWire_9 <= SwitchOut(5);
  LinkWire_10 <= SwitchOut(4);
  LinkWire_11 <= SwitchOut(3);
  LinkWire_12 <= SwitchOut(2);
  LinkWire_13 <= SwitchOut(1);
  WireTrue_26 <= WireFalse_19 and BinOpOut_70;
  BinOpOut_70 <= to_stdlogic(to_unsigned(SW_RD) = ConstOut);
  RangeCast <= UNSIGNED(SW_DWR);
  BinOpOut_69 <= RangeCast(0 DOWNTO 0);
  RangeCast_1 <= UNSIGNED(SW_DWR);
  BinOpOut_68 <= RangeCast_1(1 DOWNTO 1);
  WireTrue_25 <= LinkWire_3 and BinOpOut_16;
  LinkWire_0 <= SwitchOut_1(7);
  LinkWire_2 <= SwitchOut_1(5);
  LinkWire_3 <= SwitchOut_1(4);
  LinkWire_4 <= SwitchOut_1(3);
  LinkWire_5 <= SwitchOut_1(2);
  LinkWire_6 <= SwitchOut_1(1);
  RangeCast_2 <= UNSIGNED(SW_ADDR);
  BinOpOut_67 <= RangeCast_2(5 DOWNTO 0);
  S_180 <= LinkWire_13 or LinkWire_12 or LinkWire_11 or LinkWire_10 or LinkWire_9 or LinkWire_8 or LinkWire_7 or 
    LinkWire_6_1 or LinkWire_5_1 or LinkWire_4_1 or LinkWire_3_1 or LinkWire_2_1 or LinkWire_1 or LinkWire_0_1 or 
    SwitchOut(0) or (WireFalse_19 and not(BinOpOut_70)) or LinkWire_6 or LinkWire_5 or LinkWire_4 or 
    LinkWire_2 or SwitchOut_1(6) or LinkWire_0 or SwitchOut_1(0) or WireTrue_25 or (LinkWire_3 and not(
    BinOpOut_16));
  WireTrue_24 <= CForkIn_13 and BinOpOut_66;
  WireFalse_19 <= CForkIn_13 and not(BinOpOut_66);
  BinOpOut_66 <= to_stdlogic(to_unsigned(SW_WR) = ConstOut);
  BinOpOut_65 <= to_unsigned(SW_WR) or to_unsigned(SW_RD);
  CForkIn_13 <= StartOut_10 or to_stdlogic(LoopZ_6);
  BinOpOut_64 <= timeoutMonitor + ConstOut_1;
  WireTrue_23 <= WireFalse_17 and to_stdlogic(BinOpOut_63);
  WireFalse_18 <= WireFalse_17 and not(to_stdlogic(BinOpOut_63));
  BinOpOut_63 <= to_unsigned(to_stdlogic(timeoutEnable = ConstOut)) and to_unsigned(to_stdlogic(timeoutExpired = 
    ConstOut));
  S_19 <= WireTrue_23 or WireFalse_18 or WireTrue_22;
  WireTrue_22 <= CForkIn_12 and to_stdlogic(BinOpOut_62);
  WireFalse_17 <= CForkIn_12 and not(to_stdlogic(BinOpOut_62));
  BinOpOut_62 <= to_unsigned(BinOpOut_5) or to_unsigned(BinOpOut_54);
  S_174 <= to_unsigned(to_stdlogic(intrReset = dataDMAProgressCnt_Down_1)) and to_unsigned(to_stdlogic(
    regIntrMonitor >= (intrRegister and ConstOut_21))) and to_unsigned(to_stdlogic(interruptEnable = 
    ConstOut));
  WireTrue_21 <= CForkIn_12 and to_stdlogic(S_174);
  CForkIn_12 <= StartOut_9 or Z_Dones_1_5;
  BinOpOut_61 <= ifc_interrupt1 & ifc_interrupt0;
  CForkIn_11 <= StartOut_8 or Z_Dones_1_3;
  S_18 <= WireTrue_20 or WireFalse_16;
  WireTrue_20 <= CForkIn_10 and BinOpOut_60;
  WireFalse_16 <= CForkIn_10 and not(BinOpOut_60);
  BinOpOut_60 <= to_stdlogic(timeoutMonitor >= timeoutRegister);
  CForkIn_10 <= StartOut_7 or LoopZ_8;
  length_CE <= S_24 or WireTrue_17 or WireFalse_14;
  MuxEnables_31 <= S_24 & WireTrue_17 & WireFalse_14;
  BinOpOut_59 <= (swEndPtr + BinOpOut_58) and bufSizeMask;
  BinOpOut_58 <= ConstOut_20 & length_1;
  WireTrue_19 <= Z_Dones_5 and BinOpOut_57;
  BinOpOut_57 <= to_stdlogic(BinOpOut_48 = dataDMAProgressCnt_Down_1);
  S_17 <= WireTrue_18 or WireFalse_15;
  BinOpOut_56 <= intrMonitor + BinOpOut_55;
  BinOpOut_55 <= ConstOut_13 & BinOpOut_52;
  WireTrue_18 <= S_5 and BinOpOut_54;
  WireFalse_15 <= S_5 and not(BinOpOut_54);
  BinOpOut_54 <= to_stdlogic(intrReset = ConstOut);
  BinOpOut_51 <= length_1 + BinOpOut_50;
  BinOpOut_50 <= dataDMAProgressCnt_Down_1 & BinOpOut_52;
  WireTrue_17 <= S_5 and BinOpOut_49;
  WireFalse_14 <= S_5 and not(BinOpOut_49);
  BinOpOut_49 <= to_stdlogic(BinOpOut_48 = ConstOut);
  BinOpOut_48 <= flag_length(13 DOWNTO 13);
  BinOpOut_53 <= ConstOut_19 & BinOpOut_52;
  BinOpOut_52 <= flag_length(12 DOWNTO 0);
  S_2 <= to_stdlogic(S_3) and to_stdlogic(S_143);
  False_fork_input <= to_stdlogic(S_3) and not(to_stdlogic(S_143));
  S_3 <= to_unsigned(CForkIn_16 and BinOpOut_47) or to_unsigned(S_4);
  BinOpOut_47 <= to_stdlogic(dma_done_cnt /= ConstOut_18);
  S_15 <= WireTrue_19 or (Z_Dones_5 and not(BinOpOut_57)) or (CForkIn_16 and not(BinOpOut_47)) or StartOut_6;
  S_24 <= StartOut_6 or WireTrue_19;
  BinOpOut_46 <= dma_done_cnt - ConstOut_9;
  WireTrue_16 <= WireFalse_13 and BinOpOut_1;
  S_175 <= to_unsigned(BinOpOut_1) and to_unsigned(BinOpOut_41) and to_unsigned(BinOpOut_44);
  WireFalse_13 <= WireFalse_12 and not(to_stdlogic(S_175));
  BinOpOut_44 <= to_stdlogic(RESIZE(UNSIGNED(DMA_TAG), 12) = BinOpOut_43);
  BinOpOut_43 <= ConstOut_16 & BinOpOut_42;
  BinOpOut_42 <= ConstOut_17 or UNSIGNED(DMA_TAG_ID);
  S_176 <= to_unsigned(BinOpOut_44) and to_unsigned(to_stdlogic(dataDMAProgressCnt_Down = dataDMAProgressCnt_Down_1)) and 
    to_unsigned(BinOpOut_41);
  S_16 <= WireTrue_16 or (WireFalse_13 and not(BinOpOut_1)) or (WireFalse_12 and to_stdlogic(S_175)) or 
    WireTrue_15;
  BinOpOut_45 <= dma_done_cnt + ConstOut_9;
  WireTrue_15 <= CForkIn_9 and to_stdlogic(S_176);
  WireFalse_12 <= CForkIn_9 and not(to_stdlogic(S_176));
  BinOpOut_41 <= to_stdlogic(to_unsigned(DMA_DONE) = ConstOut);
  CForkIn_9 <= StartOut_5 or Z_Dones_0;
  descOffset_CE <= WireTrue_8 or SeqChain_2;
  MuxEnables_32 <= WireTrue_8 & SeqChain_2;
  hwDataLength_CE <= WireTrue_11 or WireFalse_7;
  MuxEnables_33 <= WireTrue_11 & WireFalse_7;
  length_CE_1 <= WireTrue_13 or WireFalse_9;
  MuxEnables_34 <= WireTrue_13 & WireFalse_9;
  MuxEnables_35 <= BinOpOut_39 & not(BinOpOut_39);
  S_6 <= to_stdlogic(S_7) and to_stdlogic(S_141);
  False_fork_input_1 <= to_stdlogic(S_7) and not(to_stdlogic(S_141));
  S_7 <= to_unsigned(WireFalse_11) or to_unsigned(S_8);
  BinOpOut_38 <= pageBreakFlag & length;
  BinOpOut_39 <= to_stdlogic(descOffset = ConstOut_11);
  S_14 <= SeqChain_2 or WireTrue_14;
  WireTrue_14 <= CForkIn_15 and BinOpOut_37;
  WireFalse_11 <= CForkIn_15 and not(BinOpOut_37);
  BinOpOut_37 <= to_stdlogic(to_unsigned(DMA_ACK) = dataDMAProgressCnt_Down_1);
  BinOpOut_36 <= (localSwEndPtr + BinOpOut_35) and bufSizeMask;
  BinOpOut_35 <= ConstOut_13 & length;
  BinOpOut_34 <= hwStrPtr + length;
  BinOpOut_33 <= descOffset + RESIZE(length, 12);
  BinOpOut_31 <= UNSIGNED(BUFFER_ADDR) + BinOpOut_71;
  BinOpOut_30 <= S_1(31 DOWNTO 12) & descOffset;
  S_13 <= (CForkIn_14 and BinOpOut_29) or WireTrue_13 or WireFalse_9;
  WireFalse_10 <= CForkIn_14 and not(BinOpOut_29);
  BinOpOut_29 <= to_stdlogic(newDescReady = dataDMAProgressCnt_Down_1);
  WireTrue_13 <= ElseDone and BinOpOut_28;
  WireFalse_9 <= ElseDone and not(BinOpOut_28);
  BinOpOut_28 <= to_stdlogic(hwDataLength <= pageFreeSpace);
  WireTrue_12 <= SeqChain_3 and BinOpOut_27;
  WireFalse_8 <= SeqChain_3 and not(BinOpOut_27);
  BinOpOut_27 <= to_stdlogic(BinOpOut_26 > swFreeSpace);
  BinOpOut_26 <= ConstOut_13 & hwDataLength;
  S_12 <= WireTrue_11 or WireFalse_7;
  WireTrue_11 <= Z_Dones_4_1 and BinOpOut_25;
  WireFalse_7 <= Z_Dones_4_1 and not(BinOpOut_25);
  BinOpOut_25 <= to_stdlogic(dataLength > ConstOut_12);
  BinOpOut_24 <= ((swStrPtr - localSwEndPtr) - ConstOut_1) and bufSizeMask;
  BinOpOut_23 <= ConstOut_12 - BinOpOut_22;
  BinOpOut_22 <= dataDMAProgressCnt_Down_1 & descOffset;
  BinOpOut_21 <= localHwEndPtr - hwStrPtr;
  BinOpOut_32 <= ConstOut_3 & BinOpOut_42 & length(11 DOWNTO 0) & ConstOut_14;
  WireTrue_10 <= WireFalse_5 and BinOpOut_20;
  WireFalse_6 <= WireFalse_5 and not(BinOpOut_20);
  BinOpOut_20 <= to_stdlogic(hwStrPtr /= localHwEndPtr);
  WireTrue_9 <= CForkIn_8 and to_stdlogic(BinOpOut_19);
  WireFalse_5 <= CForkIn_8 and not(to_stdlogic(BinOpOut_19));
  BinOpOut_19 <= to_unsigned(BinOpOut_40) and to_unsigned(BinOpOut_17);
  CForkIn_8 <= (CForkIn_17 and to_stdlogic(S_177)) or Z_Dones_1_1;
  S_179 <= S_9 or WireTrue_12 or WireFalse_6 or (CForkIn_7 and not(to_stdlogic(BinOpOut_18)));
  S_177 <= to_unsigned(to_stdlogic(pageBreakFlag = ConstOut)) or to_unsigned(BinOpOut_40) or to_unsigned(to_stdlogic(
    controlRegister(0 DOWNTO 0) = ConstOut));
  BinOpOut_40 <= to_stdlogic(controlRegister(1 DOWNTO 1) = ConstOut);
  WireTrue_8 <= CForkIn_7 and to_stdlogic(BinOpOut_18);
  BinOpOut_18 <= to_unsigned(BinOpOut_16) and to_unsigned(BinOpOut_17);
  BinOpOut_17 <= to_stdlogic(pageBreakFlag = dataDMAProgressCnt_Down_1);
  BinOpOut_16 <= to_stdlogic(controlRegister(2 DOWNTO 2) = ConstOut);
  CForkIn_7 <= (CForkIn_17 and not(to_stdlogic(S_177))) or Z_Dones_4 or StartOut_4;
  S_11 <= WireTrue_8 or WireTrue_12 or WireFalse_6;
  parts_CE <= WireFalse_3 or WireTrue_7;
  MuxEnables_36 <= WireFalse_3 & WireTrue_7;
  BinOpOut_14 <= parts + ConstOut_9;
  BinOpOut_13 <= ConstOut_10 + parts;
  WireTrue_7 <= CForkIn_6 and BinOpOut_15;
  WireFalse_4 <= CForkIn_6 and not(BinOpOut_15);
  BinOpOut_15 <= to_stdlogic(parts < ConstOut_10);
  CForkIn_6 <= to_stdlogic(SeqChain) or Z_Dones_2_1;
  S_28 <= to_unsigned(S_29) xor S_30;
  MuxEnables_37 <= to_stdlogic(S_30) & to_stdlogic(not(S_30));
  S_30 <= to_unsigned(Z_Dones_1) xor to_unsigned(CForkIn_5 and not(BinOpOut_12));
  WireTrue_6 <= CForkIn_5 and BinOpOut_12;
  BinOpOut_12 <= to_stdlogic(to_unsigned(DESC_EMPTY) = ConstOut);
  CForkIn_5 <= WireFalse_3 or LoopZ_5;
  WireTrue_5 <= CForkIn_4 and BinOpOut_11;
  WireFalse_3 <= CForkIn_4 and not(BinOpOut_11);
  BinOpOut_11 <= to_stdlogic(getNextDesc = dataDMAProgressCnt_Down_1);
  CForkIn_4 <= LoopZ_4 or LoopZ_3 or StartOut_3;
  MuxEnables_38 <= BinOpOut_8 & S_31;
  WireTrue_4 <= CForkIn_3 and BinOpOut_10;
  WireFalse_2 <= CForkIn_3 and not(BinOpOut_10);
  BinOpOut_10 <= to_stdlogic(setPaused = ConstOut);
  CForkIn_3 <= (CForkIn_2 and not(BinOpOut_9)) or LoopZ_2;
  MuxEnables_39 <= BinOpOut_8 & S_31;
  S_31 <= not(BinOpOut_8);
  WireTrue_3 <= CForkIn_2 and BinOpOut_9;
  BinOpOut_9 <= to_stdlogic(setStoped = ConstOut);
  BinOpOut_8 <= to_stdlogic(dataDMAProgressCnt = ConstOut_3);
  CForkIn_2 <= LoopZ_1 or LoopZ or StartOut_2;
  MuxEnables_40 <= BinOpOut_7 & not(BinOpOut_7);
  BinOpOut_6 <= hwEndPtr + RangeCast_3(12 DOWNTO 0);
  RangeCast_3 <= UNSIGNED(BUF_NEWLEN);
  WireTrue_2 <= CForkIn_1 and BinOpOut_5;
  BinOpOut_5 <= to_stdlogic(to_unsigned(BUF_NEWLEN_DV) = ConstOut);
  BinOpOut_7 <= to_stdlogic(statusRegister = ConstOut_1);
  CForkIn_1 <= StartOut_1 or Z_Dones_2;
  BinOpOut_4 <= dataDMAProgressCnt - ConstOut_17;
  WireTrue_1 <= WireFalse_1 and BinOpOut_1;
  BinOpOut_3 <= dataDMAProgressCnt + ConstOut_17;
  WireTrue <= WireFalse and BinOpOut;
  WireFalse_1 <= WireFalse and not(BinOpOut);
  S_10 <= WireTrue_1 or (WireFalse_1 and not(BinOpOut_1)) or WireTrue or (CForkIn and to_stdlogic(BinOpOut_2));
  WireFalse <= CForkIn and not(to_stdlogic(BinOpOut_2));
  BinOpOut_2 <= to_unsigned(BinOpOut) and to_unsigned(BinOpOut_1);
  BinOpOut_1 <= to_stdlogic(dataDMAProgressCnt_Down = ConstOut);
  BinOpOut <= to_stdlogic(dataDMAProgressCnt_Up = ConstOut);
  CForkIn <= StartOut or LoopZ_7;
  S_182 <= to_unsigned(Z_Dones_1_2) or to_unsigned(WireFalse_10);
  S_178 <= to_unsigned(S_181) or to_unsigned(WireFalse_10) or to_unsigned(WireTrue_7);
  S_1 <= to_unsigned(S_130) & to_unsigned(S_129) & to_unsigned(S_128) & to_unsigned(S_127) & to_unsigned(S_126) & 
    to_unsigned(S_125) & to_unsigned(S_124) & to_unsigned(S_123) & to_unsigned(S_122) & to_unsigned(S_121) & 
    to_unsigned(S_120) & to_unsigned(S_119) & to_unsigned(S_118) & to_unsigned(S_117) & to_unsigned(S_116) & 
    to_unsigned(S_115) & to_unsigned(S_114) & to_unsigned(S_113) & to_unsigned(S_112) & to_unsigned(S_111) & 
    to_unsigned(S_110) & to_unsigned(S_109) & to_unsigned(S_108) & to_unsigned(S_107) & to_unsigned(S_106) & 
    to_unsigned(S_105) & to_unsigned(S_104) & to_unsigned(S_103) & to_unsigned(S_102) & to_unsigned(S_101) & 
    to_unsigned(S_100) & to_unsigned(S_99);
  S_35 <= S_32(0 DOWNTO 0);
  S_36 <= S_32(1 DOWNTO 1);
  S_37 <= S_32(2 DOWNTO 2);
  S_38 <= S_32(3 DOWNTO 3);
  S_39 <= S_32(4 DOWNTO 4);
  S_40 <= S_32(5 DOWNTO 5);
  S_41 <= S_32(6 DOWNTO 6);
  S_42 <= S_32(7 DOWNTO 7);
  S_43 <= S_32(8 DOWNTO 8);
  S_44 <= S_32(9 DOWNTO 9);
  S_45 <= S_32(10 DOWNTO 10);
  S_46 <= S_32(11 DOWNTO 11);
  S_47 <= S_32(12 DOWNTO 12);
  S_48 <= S_32(13 DOWNTO 13);
  S_49 <= S_32(14 DOWNTO 14);
  S_50 <= S_32(15 DOWNTO 15);
  S_51 <= S_32(16 DOWNTO 16);
  S_52 <= S_32(17 DOWNTO 17);
  S_53 <= S_32(18 DOWNTO 18);
  S_54 <= S_32(19 DOWNTO 19);
  S_55 <= S_32(20 DOWNTO 20);
  S_56 <= S_32(21 DOWNTO 21);
  S_57 <= S_32(22 DOWNTO 22);
  S_58 <= S_32(23 DOWNTO 23);
  S_59 <= S_32(24 DOWNTO 24);
  S_60 <= S_32(25 DOWNTO 25);
  S_61 <= S_32(26 DOWNTO 26);
  S_62 <= S_32(27 DOWNTO 27);
  S_63 <= S_32(28 DOWNTO 28);
  S_64 <= S_32(29 DOWNTO 29);
  S_65 <= S_32(30 DOWNTO 30);
  S_66 <= S_32(31 DOWNTO 31);
  BinOpOut_0 <= BinOpOut_76(0 DOWNTO 0);
  BinOpOut_1_1 <= BinOpOut_76(1 DOWNTO 1);
  S_0 <= to_unsigned(S_98) & to_unsigned(S_97) & to_unsigned(S_96) & to_unsigned(S_95) & to_unsigned(S_94) & 
    to_unsigned(S_93) & to_unsigned(S_92) & to_unsigned(S_91) & to_unsigned(S_90) & to_unsigned(S_89) & 
    to_unsigned(S_88) & to_unsigned(S_87) & to_unsigned(S_86) & to_unsigned(S_85) & to_unsigned(S_84) & 
    to_unsigned(S_83) & to_unsigned(S_82) & to_unsigned(S_81) & to_unsigned(S_80) & to_unsigned(S_79) & 
    to_unsigned(S_78) & to_unsigned(S_77) & to_unsigned(S_76) & to_unsigned(S_75) & to_unsigned(S_74) & 
    to_unsigned(S_73) & to_unsigned(S_72) & to_unsigned(S_71) & to_unsigned(S_70) & to_unsigned(S_69) & 
    to_unsigned(S_68) & to_unsigned(S_67);
  RangeCast_4 <= UNSIGNED(DMA_ADDR);
  S_33 <= RangeCast_4(0 DOWNTO 0);
  RangeCast_5 <= UNSIGNED(DMA_ADDR);
  S_34 <= RangeCast_5(1 DOWNTO 1);
  MuxEnables_41 <= WireTrue_7 & WireFalse_10 & Z_Dones_1_2 & SeqChain_1;
  MuxEnables_42 <= WireTrue_7 & Z_Dones_1_2 & WireFalse_10 & SeqChain_1;
  S_23 <= WireTrue_21 or WireTrue_23;
  S_22 <= WireTrue_22 or WireTrue_23;
  S_21 <= WireTrue_8 or WireTrue_10 or WireFalse_6;
  S_20 <= WireTrue_9 or WireTrue_10 or WireFalse_6;
  I0_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I0_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I0_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I0_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I0_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_13 <= to_stdlogic(DataIntoFIFO_13);
  I0_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I0_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I0_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I0_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I0_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I1_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I1_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I1_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I1_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I1_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_12 <= to_stdlogic(DataIntoFIFO_12);
  I1_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I1_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I1_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I1_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I1_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I2_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I2_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I2_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I2_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I2_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_11 <= to_stdlogic(DataIntoFIFO_11);
  I2_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I2_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I2_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I2_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I2_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I3_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I3_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I3_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I3_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I3_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_10 <= to_stdlogic(DataIntoFIFO_10);
  I3_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I3_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I3_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I3_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I3_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I4_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I4_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I4_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I4_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I4_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_9 <= to_stdlogic(DataIntoFIFO_9);
  I4_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I4_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I4_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I4_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I4_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I5_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I5_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I5_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I5_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I5_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_8 <= to_stdlogic(DataIntoFIFO_8);
  I5_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I5_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I5_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I5_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I5_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I6_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I6_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I6_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I6_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I6_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_7 <= to_stdlogic(DataIntoFIFO_7);
  I6_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I6_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I6_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I6_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I6_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I7_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I7_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I7_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I7_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I7_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_6 <= to_stdlogic(DataIntoFIFO_6);
  I7_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I7_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I7_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I7_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I7_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I8_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I8_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I8_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I8_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I8_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_5 <= to_stdlogic(DataIntoFIFO_5);
  I8_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I8_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I8_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I8_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I8_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I9_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I9_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I9_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I9_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I9_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_4 <= to_stdlogic(DataIntoFIFO_4);
  I9_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I9_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I9_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I9_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I9_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I10_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I10_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I10_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I10_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I10_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_3 <= to_stdlogic(DataIntoFIFO_3);
  I10_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I10_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I10_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I10_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I10_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I11_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I11_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I11_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I11_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I11_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_2 <= to_stdlogic(DataIntoFIFO_2);
  I11_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I11_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I11_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I11_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I11_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I12_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I12_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I12_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I12_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I12_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_1 <= to_stdlogic(DataIntoFIFO_1);
  I12_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I12_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I12_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I12_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I12_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I13_FIFORam_rx_dma_ctrl_opt_162_A0 <= to_stdlogic(S_132);
  I13_FIFORam_rx_dma_ctrl_opt_162_A1_GND <= GND;
  I13_FIFORam_rx_dma_ctrl_opt_162_A2_GND <= GND;
  I13_FIFORam_rx_dma_ctrl_opt_162_A3_GND <= GND;
  I13_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_0 <= to_stdlogic(DataIntoFIFO_0);
  I13_FIFORam_rx_dma_ctrl_opt_162_DPRA0 <= to_stdlogic(S_134);
  I13_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND <= GND;
  I13_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND <= GND;
  I13_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND <= GND;
  I13_FIFORam_rx_dma_ctrl_opt_162_WE <= to_stdlogic(S_142);
  I0_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I0_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I0_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I0_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I0_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_66);
  I0_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I0_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I0_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I0_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I0_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I1_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I1_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I1_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I1_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I1_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_65);
  I1_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I1_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I1_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I1_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I1_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I2_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I2_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I2_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I2_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I2_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_64);
  I2_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I2_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I2_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I2_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I2_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I3_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I3_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I3_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I3_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I3_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_63);
  I3_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I3_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I3_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I3_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I3_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I4_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I4_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I4_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I4_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I4_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_62);
  I4_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I4_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I4_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I4_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I4_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I5_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I5_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I5_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I5_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I5_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_61);
  I5_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I5_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I5_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I5_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I5_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I6_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I6_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I6_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I6_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I6_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_60);
  I6_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I6_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I6_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I6_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I6_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I7_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I7_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I7_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I7_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I7_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_59);
  I7_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I7_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I7_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I7_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I7_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I8_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I8_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I8_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I8_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I8_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_58);
  I8_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I8_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I8_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I8_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I8_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I9_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I9_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I9_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I9_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I9_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_57);
  I9_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I9_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I9_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I9_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I9_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I10_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I10_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I10_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I10_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I10_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_56);
  I10_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I10_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I10_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I10_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I10_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I11_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I11_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I11_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I11_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I11_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_55);
  I11_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I11_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I11_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I11_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I11_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I12_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I12_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I12_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I12_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I12_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_54);
  I12_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I12_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I12_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I12_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I12_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I13_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I13_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I13_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I13_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I13_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_53);
  I13_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I13_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I13_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I13_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I13_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I14_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I14_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I14_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I14_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I14_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_52);
  I14_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I14_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I14_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I14_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I14_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I15_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I15_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I15_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I15_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I15_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_51);
  I15_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I15_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I15_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I15_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I15_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I16_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I16_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I16_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I16_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I16_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_50);
  I16_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I16_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I16_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I16_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I16_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I17_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I17_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I17_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I17_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I17_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_49);
  I17_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I17_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I17_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I17_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I17_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I18_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I18_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I18_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I18_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I18_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_48);
  I18_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I18_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I18_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I18_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I18_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I19_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I19_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I19_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I19_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I19_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_47);
  I19_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I19_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I19_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I19_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I19_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I20_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I20_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I20_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I20_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I20_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_46);
  I20_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I20_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I20_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I20_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I20_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I21_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I21_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I21_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I21_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I21_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_45);
  I21_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I21_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I21_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I21_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I21_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I22_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I22_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I22_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I22_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I22_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_44);
  I22_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I22_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I22_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I22_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I22_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I23_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I23_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I23_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I23_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I23_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_43);
  I23_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I23_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I23_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I23_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I23_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I24_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I24_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I24_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I24_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I24_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_42);
  I24_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I24_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I24_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I24_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I24_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I25_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I25_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I25_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I25_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I25_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_41);
  I25_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I25_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I25_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I25_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I25_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I26_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I26_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I26_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I26_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I26_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_40);
  I26_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I26_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I26_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I26_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I26_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I27_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I27_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I27_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I27_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I27_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_39);
  I27_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I27_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I27_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I27_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I27_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I28_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I28_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I28_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I28_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I28_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_38);
  I28_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I28_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I28_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I28_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I28_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I29_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I29_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I29_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I29_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I29_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_37);
  I29_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I29_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I29_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I29_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I29_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I30_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I30_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I30_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I30_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I30_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_36);
  I30_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I30_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I30_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I30_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I30_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I31_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0 <= to_stdlogic(BinOpOut_0);
  I31_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1 <= to_stdlogic(BinOpOut_1_1);
  I31_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND <= GND;
  I31_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND <= GND;
  I31_DMAReqMem_rx_dma_ctrl_opt_208_D <= to_stdlogic(S_35);
  I31_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0 <= to_stdlogic(S_33);
  I31_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1 <= to_stdlogic(S_34);
  I31_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND <= GND;
  I31_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND <= GND;
  I31_DMAReqMem_rx_dma_ctrl_opt_208_WE <= to_stdlogic(S_178);
  I0_start_rx_dma_ctrl_opt_612_aclr_GND <= GND;
  I0_start_rx_dma_ctrl_opt_574_aclr_GND <= GND;
  I0_start_rx_dma_ctrl_opt_567_aclr_GND <= GND;
  I0_start_rx_dma_ctrl_opt_558_aclr_GND <= GND;
  I0_start_rx_dma_ctrl_opt_521_aclr_GND <= GND;
  I0_start_rx_dma_ctrl_opt_508_aclr_GND <= GND;
  I0_start_rx_dma_ctrl_opt_278_aclr_GND <= GND;
  I0_start_rx_dma_ctrl_opt_258_aclr_GND <= GND;
  I0_start_rx_dma_ctrl_opt_245_aclr_GND <= GND;
  I0_start_rx_dma_ctrl_opt_231_aclr_GND <= GND;
  I0_start_rx_dma_ctrl_opt_212_aclr_GND <= GND;


  -- Port connections:

  INTERRUPT <= STD_LOGIC_VECTOR(ifc_interrupt);
  ENABLE <= to_stdlogic(ifc_enable);
  BUF_NEWLEN_RDY <= VCC;
  BUF_RELLEN <= STD_LOGIC_VECTOR(ifc_buf_rellen);
  BUF_RELLEN_DV <= to_stdlogic(dataDMAProgressCnt_Down);
  DESC_READ <= to_stdlogic(ifc_desc_read);
  SW_DRD <= STD_LOGIC_VECTOR(ifc_sw_drd);
  SW_ARDY <= to_stdlogic(ifc_sw_ardy);
  SW_DRDY <= to_stdlogic(ifc_sw_drdy);
  DMA_REQ <= to_stdlogic(dataDMAProgressCnt_Up);
  DMA_DOUT <= STD_LOGIC_VECTOR(ifc_dma_dout);


  -- Component instances:

  -- MPRAM component instance 'FIFORam'
  I0_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I0_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I0_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I0_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I0_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I0_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_13,
      DPO => S_157,
      DPRA0 => I0_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I0_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I0_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I0_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_171,
      WCLK => PIN_CLK,
      WE => I0_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I1_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I1_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I1_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I1_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I1_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I1_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_12,
      DPO => S_156,
      DPRA0 => I1_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I1_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I1_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I1_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_170,
      WCLK => PIN_CLK,
      WE => I1_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I2_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I2_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I2_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I2_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I2_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I2_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_11,
      DPO => S_155,
      DPRA0 => I2_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I2_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I2_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I2_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_169,
      WCLK => PIN_CLK,
      WE => I2_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I3_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I3_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I3_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I3_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I3_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I3_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_10,
      DPO => S_154,
      DPRA0 => I3_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I3_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I3_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I3_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_168,
      WCLK => PIN_CLK,
      WE => I3_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I4_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I4_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I4_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I4_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I4_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I4_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_9,
      DPO => S_153,
      DPRA0 => I4_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I4_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I4_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I4_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_167,
      WCLK => PIN_CLK,
      WE => I4_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I5_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I5_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I5_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I5_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I5_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I5_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_8,
      DPO => S_152,
      DPRA0 => I5_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I5_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I5_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I5_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_166,
      WCLK => PIN_CLK,
      WE => I5_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I6_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I6_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I6_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I6_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I6_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I6_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_7,
      DPO => S_151,
      DPRA0 => I6_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I6_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I6_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I6_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_165,
      WCLK => PIN_CLK,
      WE => I6_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I7_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I7_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I7_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I7_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I7_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I7_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_6,
      DPO => S_150,
      DPRA0 => I7_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I7_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I7_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I7_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_164,
      WCLK => PIN_CLK,
      WE => I7_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I8_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I8_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I8_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I8_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I8_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I8_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_5,
      DPO => S_149,
      DPRA0 => I8_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I8_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I8_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I8_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_163,
      WCLK => PIN_CLK,
      WE => I8_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I9_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I9_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I9_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I9_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I9_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I9_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_4,
      DPO => S_148,
      DPRA0 => I9_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I9_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I9_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I9_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_162,
      WCLK => PIN_CLK,
      WE => I9_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I10_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I10_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I10_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I10_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I10_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I10_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_3,
      DPO => S_147,
      DPRA0 => I10_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I10_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I10_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I10_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_161,
      WCLK => PIN_CLK,
      WE => I10_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I11_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I11_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I11_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I11_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I11_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I11_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_2,
      DPO => S_146,
      DPRA0 => I11_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I11_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I11_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I11_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_160,
      WCLK => PIN_CLK,
      WE => I11_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I12_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I12_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I12_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I12_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I12_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I12_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_1,
      DPO => S_145,
      DPRA0 => I12_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I12_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I12_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I12_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_159,
      WCLK => PIN_CLK,
      WE => I12_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'FIFORam'
  I13_FIFORam_rx_dma_ctrl_opt_162 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I13_FIFORam_rx_dma_ctrl_opt_162_A0,
      A1 => I13_FIFORam_rx_dma_ctrl_opt_162_A1_GND,
      A2 => I13_FIFORam_rx_dma_ctrl_opt_162_A2_GND,
      A3 => I13_FIFORam_rx_dma_ctrl_opt_162_A3_GND,
      D => I13_FIFORam_rx_dma_ctrl_opt_162_D_DataIntoFIFO_0,
      DPO => S_144,
      DPRA0 => I13_FIFORam_rx_dma_ctrl_opt_162_DPRA0,
      DPRA1 => I13_FIFORam_rx_dma_ctrl_opt_162_DPRA1_GND,
      DPRA2 => I13_FIFORam_rx_dma_ctrl_opt_162_DPRA2_GND,
      DPRA3 => I13_FIFORam_rx_dma_ctrl_opt_162_DPRA3_GND,
      SPO => S_158,
      WCLK => PIN_CLK,
      WE => I13_FIFORam_rx_dma_ctrl_opt_162_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I0_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I0_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I0_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I0_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I0_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I0_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_98,
      DPRA0 => I0_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I0_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I0_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I0_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_130,
      WCLK => PIN_CLK,
      WE => I0_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I1_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I1_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I1_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I1_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I1_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I1_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_97,
      DPRA0 => I1_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I1_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I1_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I1_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_129,
      WCLK => PIN_CLK,
      WE => I1_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I2_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I2_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I2_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I2_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I2_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I2_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_96,
      DPRA0 => I2_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I2_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I2_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I2_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_128,
      WCLK => PIN_CLK,
      WE => I2_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I3_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I3_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I3_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I3_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I3_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I3_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_95,
      DPRA0 => I3_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I3_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I3_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I3_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_127,
      WCLK => PIN_CLK,
      WE => I3_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I4_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I4_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I4_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I4_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I4_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I4_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_94,
      DPRA0 => I4_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I4_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I4_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I4_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_126,
      WCLK => PIN_CLK,
      WE => I4_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I5_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I5_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I5_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I5_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I5_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I5_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_93,
      DPRA0 => I5_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I5_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I5_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I5_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_125,
      WCLK => PIN_CLK,
      WE => I5_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I6_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I6_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I6_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I6_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I6_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I6_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_92,
      DPRA0 => I6_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I6_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I6_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I6_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_124,
      WCLK => PIN_CLK,
      WE => I6_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I7_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I7_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I7_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I7_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I7_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I7_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_91,
      DPRA0 => I7_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I7_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I7_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I7_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_123,
      WCLK => PIN_CLK,
      WE => I7_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I8_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I8_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I8_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I8_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I8_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I8_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_90,
      DPRA0 => I8_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I8_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I8_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I8_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_122,
      WCLK => PIN_CLK,
      WE => I8_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I9_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I9_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I9_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I9_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I9_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I9_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_89,
      DPRA0 => I9_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I9_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I9_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I9_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_121,
      WCLK => PIN_CLK,
      WE => I9_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I10_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I10_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I10_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I10_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I10_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I10_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_88,
      DPRA0 => I10_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I10_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I10_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I10_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_120,
      WCLK => PIN_CLK,
      WE => I10_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I11_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I11_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I11_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I11_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I11_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I11_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_87,
      DPRA0 => I11_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I11_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I11_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I11_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_119,
      WCLK => PIN_CLK,
      WE => I11_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I12_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I12_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I12_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I12_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I12_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I12_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_86,
      DPRA0 => I12_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I12_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I12_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I12_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_118,
      WCLK => PIN_CLK,
      WE => I12_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I13_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I13_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I13_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I13_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I13_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I13_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_85,
      DPRA0 => I13_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I13_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I13_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I13_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_117,
      WCLK => PIN_CLK,
      WE => I13_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I14_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I14_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I14_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I14_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I14_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I14_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_84,
      DPRA0 => I14_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I14_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I14_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I14_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_116,
      WCLK => PIN_CLK,
      WE => I14_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I15_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I15_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I15_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I15_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I15_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I15_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_83,
      DPRA0 => I15_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I15_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I15_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I15_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_115,
      WCLK => PIN_CLK,
      WE => I15_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I16_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I16_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I16_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I16_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I16_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I16_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_82,
      DPRA0 => I16_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I16_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I16_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I16_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_114,
      WCLK => PIN_CLK,
      WE => I16_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I17_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I17_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I17_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I17_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I17_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I17_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_81,
      DPRA0 => I17_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I17_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I17_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I17_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_113,
      WCLK => PIN_CLK,
      WE => I17_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I18_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I18_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I18_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I18_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I18_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I18_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_80,
      DPRA0 => I18_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I18_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I18_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I18_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_112,
      WCLK => PIN_CLK,
      WE => I18_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I19_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I19_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I19_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I19_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I19_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I19_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_79,
      DPRA0 => I19_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I19_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I19_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I19_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_111,
      WCLK => PIN_CLK,
      WE => I19_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I20_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I20_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I20_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I20_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I20_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I20_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_78,
      DPRA0 => I20_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I20_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I20_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I20_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_110,
      WCLK => PIN_CLK,
      WE => I20_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I21_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I21_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I21_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I21_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I21_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I21_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_77,
      DPRA0 => I21_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I21_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I21_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I21_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_109,
      WCLK => PIN_CLK,
      WE => I21_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I22_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I22_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I22_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I22_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I22_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I22_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_76,
      DPRA0 => I22_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I22_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I22_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I22_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_108,
      WCLK => PIN_CLK,
      WE => I22_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I23_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I23_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I23_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I23_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I23_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I23_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_75,
      DPRA0 => I23_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I23_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I23_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I23_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_107,
      WCLK => PIN_CLK,
      WE => I23_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I24_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I24_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I24_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I24_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I24_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I24_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_74,
      DPRA0 => I24_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I24_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I24_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I24_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_106,
      WCLK => PIN_CLK,
      WE => I24_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I25_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I25_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I25_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I25_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I25_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I25_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_73,
      DPRA0 => I25_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I25_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I25_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I25_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_105,
      WCLK => PIN_CLK,
      WE => I25_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I26_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I26_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I26_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I26_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I26_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I26_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_72,
      DPRA0 => I26_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I26_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I26_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I26_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_104,
      WCLK => PIN_CLK,
      WE => I26_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I27_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I27_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I27_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I27_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I27_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I27_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_71,
      DPRA0 => I27_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I27_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I27_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I27_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_103,
      WCLK => PIN_CLK,
      WE => I27_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I28_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I28_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I28_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I28_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I28_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I28_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_70,
      DPRA0 => I28_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I28_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I28_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I28_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_102,
      WCLK => PIN_CLK,
      WE => I28_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I29_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I29_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I29_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I29_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I29_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I29_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_69,
      DPRA0 => I29_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I29_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I29_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I29_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_101,
      WCLK => PIN_CLK,
      WE => I29_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I30_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I30_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I30_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I30_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I30_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I30_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_68,
      DPRA0 => I30_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I30_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I30_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I30_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_100,
      WCLK => PIN_CLK,
      WE => I30_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- MPRAM component instance 'DMAReqMem'
  I31_DMAReqMem_rx_dma_ctrl_opt_208 : RAM16X1D
    GENERIC MAP (
      INIT => X"0000"
    )
    PORT MAP (
      A0 => I31_DMAReqMem_rx_dma_ctrl_opt_208_A0_BinOpOut_0,
      A1 => I31_DMAReqMem_rx_dma_ctrl_opt_208_A1_BinOpOut_1,
      A2 => I31_DMAReqMem_rx_dma_ctrl_opt_208_A2_GND,
      A3 => I31_DMAReqMem_rx_dma_ctrl_opt_208_A3_GND,
      D => I31_DMAReqMem_rx_dma_ctrl_opt_208_D,
      DPO => S_67,
      DPRA0 => I31_DMAReqMem_rx_dma_ctrl_opt_208_DPRA0,
      DPRA1 => I31_DMAReqMem_rx_dma_ctrl_opt_208_DPRA1,
      DPRA2 => I31_DMAReqMem_rx_dma_ctrl_opt_208_DPRA2_GND,
      DPRA3 => I31_DMAReqMem_rx_dma_ctrl_opt_208_DPRA3_GND,
      SPO => S_99,
      WCLK => PIN_CLK,
      WE => I31_DMAReqMem_rx_dma_ctrl_opt_208_WE
    );

  -- Startup block
  I0_start_rx_dma_ctrl_opt_612 : CelStart
    GENERIC MAP (
      inpipelength => 11,
      outpipelength => 3
    )
    PORT MAP (
      aclr => I0_start_rx_dma_ctrl_opt_612_aclr_GND,
      clk => PIN_CLK,
      sclr => PIN_RESET,
      start => StartOut_10
    );

  -- Startup block
  I0_start_rx_dma_ctrl_opt_574 : CelStart
    GENERIC MAP (
      inpipelength => 11,
      outpipelength => 3
    )
    PORT MAP (
      aclr => I0_start_rx_dma_ctrl_opt_574_aclr_GND,
      clk => PIN_CLK,
      sclr => PIN_RESET,
      start => StartOut_9
    );

  -- Startup block
  I0_start_rx_dma_ctrl_opt_567 : CelStart
    GENERIC MAP (
      inpipelength => 11,
      outpipelength => 3
    )
    PORT MAP (
      aclr => I0_start_rx_dma_ctrl_opt_567_aclr_GND,
      clk => PIN_CLK,
      sclr => PIN_RESET,
      start => StartOut_8
    );

  -- Startup block
  I0_start_rx_dma_ctrl_opt_558 : CelStart
    GENERIC MAP (
      inpipelength => 11,
      outpipelength => 3
    )
    PORT MAP (
      aclr => I0_start_rx_dma_ctrl_opt_558_aclr_GND,
      clk => PIN_CLK,
      sclr => PIN_RESET,
      start => StartOut_7
    );

  -- Startup block
  I0_start_rx_dma_ctrl_opt_521 : CelStart
    GENERIC MAP (
      inpipelength => 11,
      outpipelength => 3
    )
    PORT MAP (
      aclr => I0_start_rx_dma_ctrl_opt_521_aclr_GND,
      clk => PIN_CLK,
      sclr => PIN_RESET,
      start => StartOut_6
    );

  -- Startup block
  I0_start_rx_dma_ctrl_opt_508 : CelStart
    GENERIC MAP (
      inpipelength => 11,
      outpipelength => 3
    )
    PORT MAP (
      aclr => I0_start_rx_dma_ctrl_opt_508_aclr_GND,
      clk => PIN_CLK,
      sclr => PIN_RESET,
      start => StartOut_5
    );

  -- Startup block
  I0_start_rx_dma_ctrl_opt_278 : CelStart
    GENERIC MAP (
      inpipelength => 11,
      outpipelength => 3
    )
    PORT MAP (
      aclr => I0_start_rx_dma_ctrl_opt_278_aclr_GND,
      clk => PIN_CLK,
      sclr => PIN_RESET,
      start => StartOut_4
    );

  -- Startup block
  I0_start_rx_dma_ctrl_opt_258 : CelStart
    GENERIC MAP (
      inpipelength => 11,
      outpipelength => 3
    )
    PORT MAP (
      aclr => I0_start_rx_dma_ctrl_opt_258_aclr_GND,
      clk => PIN_CLK,
      sclr => PIN_RESET,
      start => StartOut_3
    );

  -- Startup block
  I0_start_rx_dma_ctrl_opt_245 : CelStart
    GENERIC MAP (
      inpipelength => 11,
      outpipelength => 3
    )
    PORT MAP (
      aclr => I0_start_rx_dma_ctrl_opt_245_aclr_GND,
      clk => PIN_CLK,
      sclr => PIN_RESET,
      start => StartOut_2
    );

  -- Startup block
  I0_start_rx_dma_ctrl_opt_231 : CelStart
    GENERIC MAP (
      inpipelength => 11,
      outpipelength => 3
    )
    PORT MAP (
      aclr => I0_start_rx_dma_ctrl_opt_231_aclr_GND,
      clk => PIN_CLK,
      sclr => PIN_RESET,
      start => StartOut_1
    );

  -- Startup block
  I0_start_rx_dma_ctrl_opt_212 : CelStart
    GENERIC MAP (
      inpipelength => 11,
      outpipelength => 3
    )
    PORT MAP (
      aclr => I0_start_rx_dma_ctrl_opt_212_aclr_GND,
      clk => PIN_CLK,
      sclr => PIN_RESET,
      start => StartOut
    );

END;

