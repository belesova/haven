<?xml version="1.0" encoding="ISO-8859-1"?>
<source>
	
<!-- MAIN INFO ********************************************************** -->


<!-- Component name -->
<component>REP_2PORT_COVER</component>


<!-- Authors -->
<authors>
       <author login="kajan">Michal Kajan</author>
</authors>


<!-- Features ?????????????? -->
<features>
</features>


<!-- Bugs -->
<bugs>
</bugs>


<!-- Things to do

<todo>
    <item>Test the component</item>
</todo>

-->

<!-- Short Block description -->
<description>

	<!-- THE MOST IMPORTANT PART!!! There should be about 8 rows which
	     fully describe the component and its main functions -->
        This component encapsulates repeater and other necessary
        components such as DCM clock management component, XGMII receivers
        and transmitters to one component that can be easily usable
        for instantiation in higher levels of component usage.


</description>


<!-- COMPONENT INTERFACE ************************************************ -->
<interface>

	<!-- Port description -->
	<port_map>

		<divider>Common signals</divider>		
		<port  name="ECLK" dir="in" width="1">
			Global FPGA clock
		</port>
		<port  name="RESET_GLOBAL" dir="in" width="1">
			Global reset (from toplevel component)
      </port>
		<port  name="RESET_IBUF_IFC" dir="out" width="1">
         This reset is generated until locking signal of clock signals
         is generated from DCM clock management component and both
         XGMII receivers.
		</port>


        <divider>
            XGMII Receiver A input
        </divider>
        <port name="RXCLKA" dir="in" width="1">
            XGMII receiver A clock
        </port>
        <port name="RXDA" dir="in" width="32">
            XGMII receiver A data
        </port>
        <port name="RXCA" dir="in" width="4">
            XGMII receiver A data delimiter
        </port>


        <divider>
            XGMII Receiver B input
        </divider>
        <port name="RXCLKB" dir="in" width="1">
            XGMII receiver B clock
        </port>
        <port name="RXDB" dir="in" width="32">
            XGMII receiver B data
        </port>
        <port name="RXCB" dir="in" width="4">
            XGMII receiver B data delimiter
        </port>


        <divider>
           Packet forwarding enable ports
        </divider>   
        <port name="EN0" dir="in" width="1">
            Forward enable for port 0
        </port>
        <port name="EN1" dir="in" width="1">
            Forward enable for port 1
        </port>


        <divider>
           FIFO overflow indicator
        </divider>   
        <port name="OVERFLOW0" dir="out" width="1">
            FIFO overflow indicator for port 0 (from repeater)
        </port>
        <port name="OVERFLOW1" dir="out" width="1">
            FIFO overflow indicator for port 1 (from repeater)
        </port>


        <divider>
           FIFO underflow indicator
        </divider>   
        <port name="UNDERFLOW0" dir="out" width="1">
            FIFO underflow indicator for port 0 (from repeater)
        </port>
        <port name="UNDERFLOW1" dir="out" width="1">
            FIFO underflow indicator for port 1 (from repeater)
        </port>


        <divider>
            XGMII Transmitter A output
        </divider>
        <port name="TXCLKA" dir="out" width="1">
            XGMII transmitter A clock
        </port>
        <port name="TXDA" dir="out" width="32">
            XGMII transmitter A data
        </port>
        <port name="TXCA" dir="out" width="4">
            XGMII transmitter A data delimiter
        </port>


        <divider>
            XGMII Transmitter B output
        </divider>
        <port name="TXCLKB" dir="out" width="1">
            XGMII transmitter B clock
        </port>
        <port name="TXDB" dir="out" width="32">
            XGMII transmitter B data
        </port>
        <port name="TXCB" dir="out" width="4">
            XGMII transmitter B data delimiter
        </port>


        <divider>
            XGMII Receiver A output
        </divider>
        <port name="IBUF0_CLK" dir="out" width="1">
           XGMII receiver A internal clock used to clock
           all receiver logic
        </port>
        <port name="IBUF0_DATA" dir="out" width="64">
            XGMII receiver A data, single data rate
        </port>
        <port name="IBUF0_CMD" dir="out" width="8">
           XGMII receiver A data delimiter, single
           data rate
        </port>


        <divider>
            XGMII Receiver B output
        </divider>
        <port name="IBUF1_CLK" dir="out" width="1">
           XGMII receiver B internal clock used to clock
           all receiver logic
        </port>
        <port name="IBUF1_DATA" dir="out" width="64">
            XGMII receiver B data, single data rate
        </port>
        <port name="IBUF1_CMD" dir="out" width="8">
           XGMII receiver B data delimiter, single
           data rate
        </port>


	</port_map>

</interface>


<!-- HW BODY SECTION **************************************************** -->
<!-- information for HW designers, structure should be as follow          -->
<body>

<h1>Component description</h1>
   <p> 
      This component contains TX DCM clock management component, 2 XGMII
      receivers and transmitters (one for each port) and repeater component.
      Purpose of this component is only to provide one component with defined
      interface for easier usage for instantiation in higher levels of
      component hierarchy.
	</p>
   <p>
      XGMII receivers process input data from 32-bit DDR to 64-bit SDR form.
      This data flows to the repeater and then to XGMII transmitters which
      provide 64-bit SDR to 32-bit DDR transformation.
   </p>   
   <p>
      Output signals from XGMII receivers (clock, data, commands) are used
      in components in higher level of hierarchy thus for these signals
      are defined output ports in component interface.
	</p>





<h1>Schemes</h1>
	
	<p>
		The block scheme of the component is in the following figure.
      <obr src="./fig/rep_2port_cover.fig">REP_2PORT_COVER simplified block scheme</obr> 
	</p>


</body>

</source>
