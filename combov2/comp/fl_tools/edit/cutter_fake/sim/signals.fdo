# signals.fdo : Include file with signals
# Copyright (C) 2006 CESNET
# Author: Michal Trs <trsm1@liberouter.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.
#
# $Id:

   view wave
   delete wave *

proc blk_FL_CUTTER { PARAM } {
   global FL_CUTTER_BASE

   # CUTTER interface
   if { $PARAM == "IFC" } {
      add wave -divider "FL_CUTTER"
      add_wave "-label clk" $FL_CUTTER_BASE/clk
      add_wave "-label reset" $FL_CUTTER_BASE/reset

      add wave -divider "FL_CUTTER: Cutted data"
      add_wave "-label cutted_data -hex"    $FL_CUTTER_BASE/cutted_data
      add_wave "-label cutted_vld"     $FL_CUTTER_BASE/cutted_vld

      add wave -divider "FL_CUTTER: RX interface"
      add_wave "-label rx_sof_n"       $FL_CUTTER_BASE/rx_sof_n
      add_wave "-label rx_sop_n"       $FL_CUTTER_BASE/rx_sop_n
      add_wave "-label rx_eop_n"       $FL_CUTTER_BASE/rx_eop_n
      add_wave "-label rx_eof_n"       $FL_CUTTER_BASE/rx_eof_n
      add_wave "-label rx_src_rdy_n -color gold"   $FL_CUTTER_BASE/rx_src_rdy_n
      add_wave "-label rx_dst_rdy_n -color gold"   $FL_CUTTER_BASE/rx_dst_rdy_n
      add_wave "-label rx_data -hex"   $FL_CUTTER_BASE/rx_data
      add_wave "-label rx_rem -unsigned"    $FL_CUTTER_BASE/rx_rem

      add wave -divider "FL_CUTTER: TX interface"
      add_wave "-label tx_sof_n"       $FL_CUTTER_BASE/tx_sof_n
      add_wave "-label tx_sop_n"       $FL_CUTTER_BASE/tx_sop_n
      add_wave "-label tx_eop_n"       $FL_CUTTER_BASE/tx_eop_n
      add_wave "-label tx_eof_n"       $FL_CUTTER_BASE/tx_eof_n
      add_wave "-label tx_src_rdy_n -color gold"   $FL_CUTTER_BASE/tx_src_rdy_n
      add_wave "-label tx_dst_rdy_n -color gold"   $FL_CUTTER_BASE/tx_dst_rdy_n
      add_wave "-label tx_data -hex"   $FL_CUTTER_BASE/tx_data
      add_wave "-label tx_rem -unsigned"    $FL_CUTTER_BASE/tx_rem
   }

   # internal signals
    if { $PARAM == "INT" } {
      add wave -divider "FL_CUTTER internal signals"
      add_wave "-label reg_data -hex" $FL_CUTTER_BASE/reg_data
   }
}
