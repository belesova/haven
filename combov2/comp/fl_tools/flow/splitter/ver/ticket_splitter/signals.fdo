# signals.fdo : Include file with signals
# Copyright (C) 2003 CESNET
# Author: Petr Kobiersky <xkobie00@stud.fit.vutbr.cz>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.
#
# $Id: signals.fdo 10599 2009-08-21 11:36:39Z polcak_l $
#


# -------------------------------------------------------------------
#                       Signals of interfaces
# -------------------------------------------------------------------
proc rx {NAME PATH} {
    add wave -divider "$NAME"      
     add_wave "-noupdate  -hex -label RX_DATA"    $PATH/RX_DATA
     add_wave "-noupdate  -hex -label RX_REM"     $PATH/RX_REM
     add_wave "-noupdate  -label RX_SOF_N"        $PATH/RX_SOF_N
     add_wave "-noupdate  -label RX_EOF_N"        $PATH/RX_EOF_N
     add_wave "-noupdate  -label RX_SOP_N"        $PATH/RX_SOP_N
     add_wave "-noupdate  -label RX_EOP_N"        $PATH/RX_EOP_N
     add_wave "-noupdate  -label RX_SRC_RDY_N"    $PATH/RX_SRC_RDY_N
     add_wave "-noupdate  -label RX_DST_RDY_N"    $PATH/RX_DST_RDY_N
}

proc ctrl_in {NAME PATH} {
    add wave -divider "$NAME"      
     add_wave "-noupdate  -hex -label CTRL_DATA_IN" $PATH/CTRL_DATA_IN
     add_wave "-noupdate  -label CTRL_DATA_IN_VLD"  $PATH/CTRL_DATA_IN_VLD
     add_wave "-noupdate  -label CTRL_DATA_IN_RQ"   $PATH/CTRL_DATA_IN_RQ
}

proc tx {NAME PATH} {
    add wave -divider "$NAME"      
     add_wave "-noupdate  -hex -label TX_DATA"    $PATH/TX_DATA
     add_wave "-noupdate  -hex -label TX_REM"     $PATH/TX_REM
     add_wave "-noupdate  -label TX_SOF_N"        $PATH/TX_SOF_N
     add_wave "-noupdate  -label TX_EOF_N"        $PATH/TX_EOF_N
     add_wave "-noupdate  -label TX_SOP_N"        $PATH/TX_SOP_N
     add_wave "-noupdate  -label TX_EOP_N"        $PATH/TX_EOP_N
     add_wave "-noupdate  -label TX_SRC_RDY_N"    $PATH/TX_SRC_RDY_N
     add_wave "-noupdate  -label TX_DST_RDY_N"    $PATH/TX_DST_RDY_N
}

proc ctrl_out {NAME PATH} {
    add wave -divider "$NAME"      
     add_wave "-noupdate  -hex -label CTRL_DATA_OUT" $PATH/CTRL_DATA_OUT
     add_wave "-noupdate  -label CTRL_DATA_OUT_VLD"  $PATH/CTRL_DATA_OUT_VLD
     add_wave "-noupdate  -label CTRL_DATA_OUT_RQ"   $PATH/CTRL_DATA_OUT_VLD
}

proc ticket_splitter_ifc  { PATH } {
   add wave -divider "FL Ticket Splitter"
   add_wave "-label clk" $PATH/clk
   add_wave "-label reset" $PATH/reset

   add wave -divider "FLS: Input interface"
   add_wave "-label rx_sof_n" $PATH/rx_sof_n
   add_wave "-label rx_sop_n" $PATH/rx_sop_n
   add_wave "-label rx_eop_n" $PATH/rx_eop_n
   add_wave "-label rx_eof_n" $PATH/rx_eof_n
   add_wave "-label rx_src_rdy_n" $PATH/rx_src_rdy_n
   add_wave "-label rx_dst_rdy_n" $PATH/rx_dst_rdy_n
   add_wave "-label rx_data -hex" $PATH/rx_data
   add_wave "-label rx_rem -hex" $PATH/rx_rem

   add wave -divider "FLS: Ticket interface"
   add_wave "-label CTRL_DATA_IN -hex" $PATH/CTRL_DATA_IN
   add_wave "-label CTRL_DATA_IN_VLD -hex" $PATH/CTRL_DATA_IN_VLD
   add_wave "-label CTRL_DATA_IN_RQ -hex" $PATH/CTRL_DATA_IN_RQ

   add wave -divider "FLS: Output interface"
   add_wave "-label tx_sof_n" $PATH/tx_sof_n
   add_wave "-label tx_sop_n" $PATH/tx_sop_n
   add_wave "-label tx_eop_n" $PATH/tx_eop_n
   add_wave "-label tx_eof_n" $PATH/tx_eof_n
   add_wave "-label tx_src_rdy_n" $PATH/tx_src_rdy_n
   add_wave "-label tx_dst_rdy_n" $PATH/tx_dst_rdy_n
   add_wave "-label tx_data -hex" $PATH/tx_data
   add_wave "-label tx_rem -hex" $PATH/tx_rem
}

proc ticket_splitter_int  { FL_SPLITTER_PATH } {
   add_wave "-label tx_data -hex" $FL_SPLITTER_PATH/tx_data
   add_wave "-label ticket_wr         -hex" $FL_SPLITTER_PATH/ticket_wr
   add_wave "-label ticket_do         -hex" $FL_SPLITTER_PATH/ticket_do
   add_wave "-label ticket_do_dv      -hex" $FL_SPLITTER_PATH/ticket_do_dv
   add_wave "-label ticket_full       -hex" $FL_SPLITTER_PATH/ticket_full
   add_wave "-label ticket_writeable_n -hex" $FL_SPLITTER_PATH/ticket_writeable_n
   add_wave "-label ticket_trans_n    -hex" $FL_SPLITTER_PATH/ticket_trans_n
   add_wave "-label ctrl_data_in_rq_i -hex" $FL_SPLITTER_PATH/ctrl_data_in_rq_i

   add_wave "-label cu_sof_out_n -hex" $FL_SPLITTER_PATH/cu_sof_out_n
   add_wave "-label cu_sop_out_n -hex" $FL_SPLITTER_PATH/cu_sop_out_n
   add_wave "-label cu_eop_out_n -hex" $FL_SPLITTER_PATH/cu_eop_out_n
   add_wave "-label cu_eof_out_n -hex" $FL_SPLITTER_PATH/cu_eof_out_n
   add_wave "-label cu_src_rdy_out_n -hex" $FL_SPLITTER_PATH/cu_src_rdy_out_n
   add_wave "-label cu_dst_rdy_out_n -hex" $FL_SPLITTER_PATH/cu_dst_rdy_out_n
   add_wave "-label cu_data_out -hex" $FL_SPLITTER_PATH/cu_data_out
   add_wave "-label cu_rem_out -hex" $FL_SPLITTER_PATH/cu_rem_out
   add_wave "-label cu_fifo_status -hex" $FL_SPLITTER_PATH/cu_fifo_status
}
