# signals.fdo : Include file with signals
# Copyright (C) 2008 CESNET
# Author: Pavol Korcek <korcek@liberouter.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.
#
# $Id: signals.fdo 11507 2009-10-06 17:46:31Z korcek $
#


# -------------------------------------------------------------------
#                       Signals of interfaces
# -------------------------------------------------------------------

proc ib_switch {NAME PATH} {
    add wave -divider "$NAME"
      add_wave "-noupdate -color yellow -label RESET" $PATH/IB_RESET
      add_wave "-noupdate -color yellow -label CLK"   $PATH/IB_CLK
    add wave -divider "  Upstream Port"
      add_wave "-noupdate -hex -label PORT0"          $PATH/PORT0
    add wave -divider "  Downstream Port"
      add_wave "-noupdate -hex -label PORT1"          $PATH/PORT1
      add_wave "-noupdate -hex -label PORT2"          $PATH/PORT2
}

proc lb_root {NAME PATH} {
    add wave -divider "$NAME"
      add_wave "-noupdate -color yellow -label RESET" $PATH/RESET
      add_wave "-noupdate -color yellow -label CLK"   $PATH/IB_CLK
      add_wave "-noupdate -hex -label INTERNAL_BUS"   $PATH/INTERNAL_BUS
      add_wave "-noupdate -hex -label LOCAL_BUS"      $PATH/LOCAL_BUS
}

proc ib_endpoint_master {NAME PATH} {
    add wave -divider "$NAME"
      add_wave "-noupdate -color yellow -label RESET" $PATH/IB_RESET
      add_wave "-noupdate -color yellow -label CLK"   $PATH/IB_CLK
      add_wave "-noupdate -hex -label INTERNAL_BUS"   $PATH/INTERNAL_BUS
      add_wave "-noupdate -hex -label WRITE"          $PATH/WR
      add_wave "-noupdate -hex -label READ"           $PATH/RD
      add_wave "-noupdate -hex -label BUS_MASTER"     $PATH/BM
}

proc lb_endpoint {NAME PATH} {
    add wave -divider "$NAME"
      add_wave "-noupdate -color yellow -label RESET" $PATH/RESET
      add_wave "-noupdate -hex -label LB_CLK"         $PATH/LB_CLK
      add_wave "-noupdate -hex -label LOCAL_BUS"      $PATH/LOCALBUS
      add_wave "-noupdate -hex -label CLK"            $PATH/CLK
      add_wave "-noupdate -hex -label MI32"           $PATH/MI32
}

proc mi32tobm {NAME PATH} {
    add wave -divider "$NAME"
      add_wave "-noupdate -color yellow -label RESET" $PATH/RESET
      add_wave "-noupdate -color yellow -label CLK"   $PATH/CLK
      add_wave "-noupdate -hex -label MI32"           $PATH/MI32
      add_wave "-noupdate -hex -label BM"             $PATH/BM
    add wave -divider "Common"
      add_wave "-noupdate -hex -label TIMER_CNT"   	$PATH/mi32tobm_core_u/timer_cnt
      add_wave "-noupdate -hex -label BMREQ_CNT"   	$PATH/mi32tobm_core_u/bmreq_cnt
      add_wave "-noupdate -hex -label init_wr_reg"   	$PATH/mi32tobm_core_u/init_wr_reg
      add_wave "-noupdate -hex -label BMDONE_CNT"   	$PATH/mi32tobm_core_u/bmdone_cnt
      add_wave "-noupdate -hex -label req_signal"   	$PATH/mi32tobm_core_u/req_signal
      add_wave "-noupdate -hex -label bm_req_waiting" 	$PATH/mi32tobm_core_u/bm_req_waiting
      add_wave "-noupdate -hex -label last_req"	     	$PATH/mi32tobm_core_u/last_req
      add_wave "-noupdate -hex -label last_done"	$PATH/mi32tobm_core_u/last_done

}

proc ib_mi64mem {NAME PATH} {
    add wave -divider "$NAME"
      add_wave "-noupdate -color yellow -label RESET" $PATH/RESET
      add_wave "-noupdate -color yellow -label CLK"   $PATH/CLK
      
      add wave -divider "WRITE"
      add_wave "-noupdate -hex -label IBMI_WRITE64"   $PATH/IBMI_WRITE64
      	add_wave "-noupdate -hex -label  WRITE_ADDR"     $PATH/WRITE_ADDR 
      	add_wave "-noupdate -hex -label  WRITE_DATA"     $PATH/WRITE_DATA 
    	add_wave "-noupdate -hex -label  WRITE_BE"       $PATH/WRITE_BE 
    	add_wave "-noupdate -hex -label  WRITE_REQ"      $PATH/WRITE_REQ 
    	add_wave "-noupdate -hex -label  WRITE_RDY"      $PATH/WRITE_RDY 
    	add_wave "-noupdate -hex -label  WRITE_LENGTH"   $PATH/WRITE_LENGTH 
    	add_wave "-noupdate -hex -label  WRITE_SOF"      $PATH/WRITE_SOF 
    	add_wave "-noupdate -hex -label  WRITE_EOF"      $PATH/WRITE_EOF 

      add wave -divider "READ"
      add_wave "-noupdate -hex -label IBMI_READ64"    $PATH/IBMI_READ64
    	add_wave "-noupdate -hex -label  READ_ADDR"      $PATH/READ_ADDR 
    	add_wave "-noupdate -hex -label  READ_BE"        $PATH/READ_BE 
    	add_wave "-noupdate -hex -label  READ_REQ"       $PATH/READ_REQ 
    	add_wave "-noupdate -hex -label  READ_ARDY"      $PATH/READ_ARDY 
    	add_wave "-noupdate -hex -label  READ_SOF_IN"    $PATH/READ_SOF_IN 
    	add_wave "-noupdate -hex -label  READ_EOF_IN"    $PATH/READ_EOF_IN 
    	add_wave "-noupdate -hex -label  READ_DATA"      $PATH/READ_DATA 
    	add_wave "-noupdate -hex -label  READ_SRC_RDY"   $PATH/READ_SRC_RDY 
    	add_wave "-noupdate -hex -label  READ_DST_RDY"   $PATH/READ_DST_RDY 
}

