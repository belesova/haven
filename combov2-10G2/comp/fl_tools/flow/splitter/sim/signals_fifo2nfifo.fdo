# signals_fifo2nfifo.fdo : Include file with signals
# Copyright (C) 2009 CESNET
# Author(s): Martin Kosek <kosek@liberouter.org>
#            Jakub Olbert <xolber00@stud.fit.vutbr.cz>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.
#

   view wave
   delete wave *

proc blk_FL_SPLITTER_FIFO2NFIFO { PARAM } {
   global FL_SPLITTER_FIFO2NFIFO_PATH
   global FIFO_BUFFER_PATH
   global TB_BASE
    
   if { $PARAM == "IFC_TOP" } {
      add wave -divider "FL Splitter Top"
      add_wave "-label rx_data -hex" $TB_BASE/rx_data
      add_wave "-label rx_rem -hex" $TB_BASE/rx_rem
      add_wave "-label rx_sof_n" $TB_BASE/rx_sof_n
      add_wave "-label rx_sop_n" $TB_BASE/rx_sop_n
      add_wave "-label rx_eop_n" $TB_BASE/rx_eop_n
      add_wave "-label rx_eof_n" $TB_BASE/rx_eof_n
      add_wave "-label rx_src_rdy_n" $TB_BASE/rx_src_rdy_n
      add_wave "-label rx_dst_rdy_n" $TB_BASE/rx_dst_rdy_n
   }

   # Splitter interface
   if { $PARAM == "IFC" } {
#      add wave -divider "FL Splitter"
#      add_wave "-label clk -color yellow" $FL_SPLITTER_FIFO2NFIFO_PATH/clk
#      add_wave "-label reset" $FL_SPLITTER_FIFO2NFIFO_PATH/reset
      
      add wave -divider "FLS: Input interface"
      add_wave "-label rx_sof_n" $FL_SPLITTER_FIFO2NFIFO_PATH/rx_sof_n
      add_wave "-label rx_sop_n" $FL_SPLITTER_FIFO2NFIFO_PATH/rx_sop_n
      add_wave "-label rx_eop_n" $FL_SPLITTER_FIFO2NFIFO_PATH/rx_eop_n
      add_wave "-label rx_eof_n" $FL_SPLITTER_FIFO2NFIFO_PATH/rx_eof_n
      add_wave "-label rx_src_rdy_n" $FL_SPLITTER_FIFO2NFIFO_PATH/rx_src_rdy_n
      add_wave "-label rx_dst_rdy_n" $FL_SPLITTER_FIFO2NFIFO_PATH/rx_dst_rdy_n
      add_wave "-label rx_data -hex" $FL_SPLITTER_FIFO2NFIFO_PATH/rx_data
      add_wave "-label rx_rem -hex" $FL_SPLITTER_FIFO2NFIFO_PATH/rx_rem
   
      add wave -divider "FLS: Output interface"
      add_wave "-label tx_sof_n" $FL_SPLITTER_FIFO2NFIFO_PATH/tx_sof_n
      add_wave "-label tx_sop_n" $FL_SPLITTER_FIFO2NFIFO_PATH/tx_sop_n
      add_wave "-label tx_eop_n" $FL_SPLITTER_FIFO2NFIFO_PATH/tx_eop_n
      add_wave "-label tx_eof_n" $FL_SPLITTER_FIFO2NFIFO_PATH/tx_eof_n
      add_wave "-label tx_src_rdy_n" $FL_SPLITTER_FIFO2NFIFO_PATH/tx_src_rdy_n
      add_wave "-label tx_dst_rdy_n" $FL_SPLITTER_FIFO2NFIFO_PATH/tx_dst_rdy_n
      add_wave "-label tx_data -hex" $FL_SPLITTER_FIFO2NFIFO_PATH/tx_data
      add_wave "-label tx_rem -hex" $FL_SPLITTER_FIFO2NFIFO_PATH/tx_rem
   }
   
   # Control Unit
   if { $PARAM == "CU" } {
      add wave -divider "FLS: Control Unit interface"
      add_wave "-label clk" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/clk
      add_wave "-label reset" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/reset
      add_wave "-label sof_in_n" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/sof_in_n
      add_wave "-label sop_in_n" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/sop_in_n
      add_wave "-label eop_in_n" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/eop_in_n
      add_wave "-label eof_in_n" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/eof_in_n
      add_wave "-label src_rdy_in_n" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/src_rdy_in_n
      add_wave "-label dst_rdy_in_n" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/dst_rdy_in_n
      add_wave "-label data_in -hex" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/data_in
      add_wave "-label rem_in -hex" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/rem_in
      add_wave "-label sof_out_n" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/sof_out_n
      add_wave "-label sop_out_n" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/sop_out_n
      add_wave "-label eop_out_n" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/eop_out_n
      add_wave "-label eof_out_n" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/eof_out_n
      add_wave "-label src_rdy_out_n" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/src_rdy_out_n
      add_wave "-label dst_rdy_out_n" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/dst_rdy_out_n
      add_wave "-label data_out -hex" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/data_out
      add_wave "-label rem_out -hex" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/rem_out
      add_wave "-label fifo_status" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/fifo_status

      add wave -divider "FLS: Control Unit internal"
      add_wave "-label cnt_next" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/cnt_next
      add_wave "-label mx_max" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/mx_max
      add_wave "-label max_bus" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/max_bus
      add_wave "-label reg_max_bus" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/reg_max_bus
      add_wave "-label reg_next" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/reg_next
      add_wave "-label reg_ready" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/reg_next
      add_wave "-label reg_addr" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/reg_addr
      add_wave "-label reg_valid" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/reg_valid
      add_wave "-label FLS_MAX_SELECT_DI" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/FIFO_STATUS
      add_wave "-label FLS_MAX_SELECT_MAX" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/max_bus

      add wave -divider "FLS: FSM"
      add_wave "-label clk" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/fls_cu_fsm_i/clk
      add_wave "-label clr_ready" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/fls_cu_fsm_i/clr_ready
      add_wave "-label clr_valid" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/fls_cu_fsm_i/clr_valid
      add_wave "-label eof" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/fls_cu_fsm_i/eof
      add_wave "-label next_queue" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/fls_cu_fsm_i/next_queue
      add_wave "-label present_state" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/fls_cu_fsm_i/present_state
      add_wave "-label queue_rdy" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/fls_cu_fsm_i/queue_rdy
      add_wave "-label reset" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/fls_cu_fsm_i/reset
      add_wave "-label set_valid" $FL_SPLITTER_FIFO2NFIFO_PATH/fls_cu_i/fls_cu_fsm_i/set_valid


   }

   #FIFO2NFIFO BUFFER
   if { $PARAM == "BUFFER" } {
      add wave -divider "FLS: FIFO2NFIFO_BUFFER interface"
      add_wave "-hex -label RX_DATA      " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/RX_DATA
      add_wave "-hex -label RX_REM       " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/RX_REM
      add_wave "-hex -label RX_SOF_N     " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/RX_SOF_N
      add_wave "-hex -label RX_SOP_N     " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/RX_SOP_N
      add_wave "-hex -label RX_EOP_N     " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/RX_EOP_N
      add_wave "-hex -label RX_EOF_N     " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/RX_EOF_N
      add_wave "-hex -label RX_SRC_RDY_N " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/RX_SRC_RDY_N
      add_wave "-hex -label RX_DST_RDY_N " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/RX_DST_RDY_N
      add_wave "-hex -label TX_DATA      " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/TX_DATA
      add_wave "-hex -label TX_REM       " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/TX_REM
      add_wave "-hex -label TX_SOF_N     " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/TX_SOF_N
      add_wave "-hex -label TX_SOP_N     " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/TX_SOP_N
      add_wave "-hex -label TX_EOP_N     " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/TX_EOP_N
      add_wave "-hex -label TX_EOF_N     " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/TX_EOF_N
      add_wave "-hex -label TX_SRC_RDY_N " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/TX_SRC_RDY_N
      add_wave "-hex -label TX_DST_RDY_N " $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/TX_DST_RDY_N

      add wave -divider "FLS: FIFO2NFIFO_BUFFER"
      add_wave "-label blockaddr -unsigned" $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/block_addr
      add_wave "-label fifostatus" $FL_SPLITTER_FIFO2NFIFO_PATH/cu_fifo_status
      add_wave "-label frame_part" $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/frame_part
      add_wave "-label juice_in" $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/fl_juice_in
   }

   #FIFO2NFIFO
   if { $PARAM == "FIFO2NFIFO" } {
      add wave -divider "FLS: FIFO2NFIFO"
      add_wave "-label data_in -hex" $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/fifo_data_in
      add_wave "-label data_out -hex" $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/fifo_data_out
      add_wave "-label valid" $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/fifo_data_vld
      add_wave "-label status" $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/fifo_status
      add_wave "-label write" $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/fifo_write
      add_wave "-label read" $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/fifo_read
      add_wave "-label empty" $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/fifo_empty
      add_wave "-label full" $FL_SPLITTER_FIFO2NFIFO_PATH/FIFO_2N_FIFO_BUFFER/fifo_full
   }

   # ALIGN_UNIT
   if { $PARAM == "ALIGN_UNIT" } {
      # ALIGN_UNIT_0
      add wave -divider "ALIGN_UNIT_0"
      add_wave "-label data_in -hex" $FIFO_BUFFER_PATH/align_units__0/align_unit/data_in
      add_wave "-label TX_DATA -hex" $FIFO_BUFFER_PATH/align_units__0/align_unit/tx_data

      # ALIGN_UNIT_1
      add wave -divider "ALIGN_UNIT_1"
      add_wave "-label data_in -hex" $FIFO_BUFFER_PATH/align_units__1/align_unit/data_in
      add_wave "-label TX_DATA -hex" $FIFO_BUFFER_PATH/align_units__1/align_unit/tx_data
   }

}

