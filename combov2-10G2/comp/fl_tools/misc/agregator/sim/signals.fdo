# signals.fdo : Include file with signals
# Copyright (C) 2006 CESNET
# Author: Martin Kosek <kosek@liberouter.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.
#
# $Id: signals.fdo 2363 2008-05-13 08:03:25Z kosek $

proc blk_FL_AGREGATOR { PARAM } {
   global FL_AGREGATOR_PATH
   set BASE "$FL_AGREGATOR_PATH"
  
   # interface
   if { $PARAM == "IFC" } {
      add wave -divider "FL_AGREGATOR"
      add_wave "-label clk -color magenta" $BASE/clk
      add_wave "-label reset -color magenta" $BASE/reset
      
      add wave -divider "Input data"
      add_wave "-label rx_sof_n" $BASE/rx_sof_n
      add_wave "-label rx_sop_n" $BASE/rx_sop_n
      add_wave "-label rx_eop_n" $BASE/rx_eop_n
      add_wave "-label rx_eof_n" $BASE/rx_eof_n
      add_wave "-label rx_src_rdy_n" $BASE/rx_src_rdy_n
      add_wave "-label rx_dst_rdy_n" $BASE/rx_dst_rdy_n
      add_wave "-label rx_data -hex" $BASE/rx_data
      add_wave "-label rx_rem -hex" $BASE/rx_rem
      
      add wave -divider "Output data"
      add_wave "-label tx_sof_n" $BASE/tx_sof_n
      add_wave "-label tx_sop_n" $BASE/tx_sop_n
      add_wave "-label tx_eop_n" $BASE/tx_eop_n
      add_wave "-label tx_eof_n" $BASE/tx_eof_n
      add_wave "-label tx_src_rdy_n" $BASE/tx_src_rdy_n
      add_wave "-label tx_dst_rdy_n" $BASE/tx_dst_rdy_n
      add_wave "-label tx_data -hex" $BASE/tx_data
      add_wave "-label tx_rem -hex" $BASE/tx_rem
      
      add wave -divider "Control signals"
      add_wave "-label enable" $BASE/enable

      add wave -divider "ADC signals data"
      add_wave "-label adc_rd" $BASE/adc_rd
      add_wave "-label adc_wr" $BASE/adc_wr
      add_wave "-label adc_addr -hex" $BASE/adc_addr
      add_wave "-label adc_di -hex" $BASE/adc_di
      add_wave "-label adc_do -hex" $BASE/adc_do
      add_wave "-label adc_drdy" $BASE/adc_drdy
   }

   # Miscelaneous signals
   if { $PARAM == "MISC" } {
      add wave -divider "FL_AGREGATOR misc signals"
      add_wave "-label clk -color magenta" $BASE/clk
      add_wave "-label reset -color magenta" $BASE/reset
      
      add wave -divider "Controls"
      add_wave "-label reg_sum -hex" $BASE/reg_sum
      add_wave "-label reg_sum_clr" $BASE/reg_sum_clr
      add_wave "-label reg_sum_we" $BASE/reg_sum_we
      add_wave "-label reg_first_packet" $BASE/reg_first_packet
      add_wave "-label reg_first_packet_we" $BASE/reg_first_packet_we
      add_wave "-label reg_last_packet" $BASE/reg_last_packet
      add_wave "-label reg_last_packet_we" $BASE/reg_last_packet_we
      add_wave "-label reg_ticket" $BASE/reg_ticket
      add_wave "-label reg_ticket_we" $BASE/reg_ticket_we
      add_wave "-label reg_enable" $BASE/reg_enable
      add_wave "-label reg_frame_length -hex" $BASE/reg_frame_length
      add_wave "-label reg_frame_length_we" $BASE/reg_frame_length_we
      add_wave "-label mx_reg_sum_di -hex" $BASE/mx_reg_sum_di
      add_wave "-label mx_reg_sum_di_sel" $BASE/mx_reg_sum_di_sel
      add_wave "-label cnt_length -hex" $BASE/cnt_length
      add_wave "-label cnt_length_ce" $BASE/cnt_length_ce
      add_wave "-label cnt_length_clr" $BASE/cnt_length_clr
      add_wave "-label cnt_timeout -hex" $BASE/cnt_timeout
      add_wave "-label cnt_timeout_max" $BASE/cnt_timeout_max
      add_wave "-label cnt_timeout_clr" $BASE/cnt_timeout_clr
      add_wave "-label cnt_bad_packets -hex" $BASE/cnt_bad_packets
      add_wave "-label cnt_bad_packets_ce" $BASE/cnt_bad_packets_ce
      add_wave "-label cnt_port0_packets -hex" $BASE/cnt_port0_packets
      add_wave "-label cnt_port0_packets_ce" $BASE/cnt_port0_packets_ce
      add_wave "-label cmp_sum_greater" $BASE/cmp_sum_greater
      add_wave "-label cmp_bad_length" $BASE/cmp_bad_length
      add_wave "-label cmp_port0" $BASE/cmp_port0

      add wave -divider "I/O control"
      add_wave "-label input_allow_n" $BASE/input_allow_n
      add_wave "-label input_eof" $BASE/input_eof
      add_wave "-label input_valid_n" $BASE/input_valid_n
      add_wave "-label output_allow_n" $BASE/output_allow_n
      add_wave "-label output_valid_n" $BASE/output_valid_n
      add_wave "-label output_sof" $BASE/output_sof
      add_wave "-label output_eof" $BASE/output_eof
      add_wave "-label output_timeout -color yellow" $BASE/output_timeout
      
      add wave -divider "Misc"
      add_wave "-label adder_sum -hex" $BASE/adder_sum
      add_wave "-label result_allow" $BASE/result_allow
      add_wave "-label result_deny" $BASE/result_deny
      add_wave "-label fifo_length_dv" $BASE/fifo_length_dv
      add_wave "-label write_ticket" $BASE/write_ticket
      add_wave "-label write_last_ticket" $BASE/write_last_ticket
      add_wave "-label packet_length -hex" $BASE/packet_length
      
      add wave -divider "FIFO length"
      add_wave "-label reset" $BASE/fifo_length_i/reset
      add_wave "-label clk" $BASE/fifo_length_i/clk
      add_wave "-label data_in -hex" $BASE/fifo_length_i/data_in
      add_wave "-label write_req" $BASE/fifo_length_i/write_req
      add_wave "-label full" $BASE/fifo_length_i/full
      add_wave "-label data_out -hex" $BASE/fifo_length_i/data_out
      add_wave "-label read_req" $BASE/fifo_length_i/read_req
      add_wave "-label empty" $BASE/fifo_length_i/empty
      
      add wave -divider "FL FIFO"
      add_wave "-label clk" $BASE/fl_fifo_i/clk
      add_wave "-label reset" $BASE/fl_fifo_i/reset
      add_wave "-label rx_data -hex" $BASE/fl_fifo_i/rx_data
      add_wave "-label rx_rem -hex" $BASE/fl_fifo_i/rx_rem
      add_wave "-label rx_src_rdy_n" $BASE/fl_fifo_i/rx_src_rdy_n
      add_wave "-label rx_dst_rdy_n" $BASE/fl_fifo_i/rx_dst_rdy_n
      add_wave "-label rx_sop_n" $BASE/fl_fifo_i/rx_sop_n
      add_wave "-label rx_eop_n" $BASE/fl_fifo_i/rx_eop_n
      add_wave "-label rx_sof_n" $BASE/fl_fifo_i/rx_sof_n
      add_wave "-label rx_eof_n" $BASE/fl_fifo_i/rx_eof_n
      add_wave "-label tx_data -hex" $BASE/fl_fifo_i/tx_data
      add_wave "-label tx_rem -hex" $BASE/fl_fifo_i/tx_rem
      add_wave "-label tx_src_rdy_n" $BASE/fl_fifo_i/tx_src_rdy_n
      add_wave "-label tx_dst_rdy_n" $BASE/fl_fifo_i/tx_dst_rdy_n
      add_wave "-label tx_sop_n" $BASE/fl_fifo_i/tx_sop_n
      add_wave "-label tx_eop_n" $BASE/fl_fifo_i/tx_eop_n
      add_wave "-label tx_sof_n" $BASE/fl_fifo_i/tx_sof_n
      add_wave "-label tx_eof_n" $BASE/fl_fifo_i/tx_eof_n
   }
}
