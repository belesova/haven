<source>

    <component>
        FrameLink Extract component
    </component>

    <authors>
        <author login="xkosar02">
            Vlastimil Kosar
        </author>
    </authors>

    <features>
        <item>
            Supports rx/tx FrameLink data bus width of 16, 32, 64 and 128 bits.
	    Extract specified number of bytes from offset in specified packet of frame.
	    Core generator for multiport output interface.
        </item>
    </features>

    <description>
        This FrameLink extract component extracts specified number of bytes from
	offset in specified packet of frame. This component also provide pipeline.
        Component suports FrameLink data bus width of 16, 32, 64 and 128 bits. 
	FrameLink wrappers for data width of 16, 32, 64 and 128 bits are supported.
	Multiport ouput interfaces can be generated by core generator.
    </description>

    <interface>

        <generic_map>
            <generic name="DATA_WIDTH" type="integer" default="32">
		    RX/TX interface data bus width (16, 32, 64 and 128 bits supported).
            </generic>
	    <generic name="PIPELINE_EN" type="boolean" default="false">
                    Enable pipeline function.
            </generic>
	    <generic name="PACKET_NO" type="integer" default="">
		    Part of Frame where the field is extracted
            </generic>
	    <generic name="OFFSET" type="integer" default="">
		    Start extracting on specified offset
            </generic>
	    <generic name="SIZE" type="integer" default="">
		    Size of "Extracted field" in Bytes
            </generic>
	    <generic name="PARTS" type="integer" default="4">
		    Number of parts in FL frame
            </generic>
	    <generic name="LENGTH" type="integer" default="2048">
		    Maximal length of FL frame part in words (should be power of 2)
            </generic>
        </generic_map>

        <port_map>
	    <port name="CLK" dir="in" width="1">
		Clock input.
            </port>
            <port name="RESET" dir="in" width="1">
                Global reset.
            </port>
            

	    <divider>
	  	    RX FrameLink interface
	    </divider>
	    <port name="RX_DATA" dir="in" width="DATA_WIDTH">
		    RX data bus.
	    </port>
	    <port name="RX_REM" dir="in" width="log2(DATA_WIDTH/8)">
		    RX data remainder.
	    </port>
	    <port name="RX_SRC_RDY_N" dir="in" width="1">
		    RX source ready.
	    </port>
	    <port name="RX_DST_RDY_N" dir="out" width="1">
		    RX destination ready.
            </port>
	    <port name="RX_SOP_N" dir="in" width="1">
		    RX start of packet (segment).
	    </port>
	    <port name="RX_EOP_N" dir="in" width="1">
		    RX end of packet (segment).
	    </port>
	    <port name="RX_SOF_N" dir="in" width="1">
		    RX start of frame.
	    </port>
	    <port name="RX_EOF_N" dir="in" width="1">
		    RX end of frame.
	    </port>


	    
            <divider>
                TX FrameLink interface
            </divider>
            <port name="TX_DATA" dir="out" width="DATA_WIDTH">
                TX data bus.
            </port>
            <port name="TX_REM" dir="out" width="log2(DATA_WIDTH/8)">
                TX data remainder.
            </port>
	    <port name="TX_SRC_RDY_N" dir="out" width="1">
		    TX source ready.
	    </port>
	    <port name="TX_DST_RDY_N" dir="in" width="1">
		    TX destination ready.
            </port>
	    <port name="TX_SOP_N" dir="out" width="1">
		    TX start of packet (segment).
	    </port>
	    <port name="TX_EOP_N" dir="out" width="1">
		    TX end of packet (segment).
            </port>
            <port name="TX_SOF_N" dir="out" width="1">
                TX start of frame.
            </port>
            <port name="TX_EOF_N" dir="out" width="1">
                TX end of frame.
            </port>
	    
	    <divider>
		    Extracted data's output interface
            </divider>
	    <port name="EXT_DATA" dir="out" width="SIZE*8">
		    Extracted data.
	    </port>
	    <port name="EXT_DATA_VLD" dir="out" width="1">
		    Data on EXT_DATA port are available
            </port>
        </port_map>

    </interface>

    <body>

        <h1>Data alignment</h1>
	<p>FL_OP procedure for testbench
            Little-endian byte order is used in this component. 
        </p>

        <h1>FrameLink EXTRACT Component</h1>
        <p>
		This component can extract specified number of bytes from specified offset in specified packet of frame. Component suports FrameLink data bus width of 16, 32, 64 and 128 bits. Pipeline can be optionaly used. 
        </p>
	<h2>Frequency and Resources usage</h2>
	<p>
		<tab sloupce="cccc">
			<tr>
				<th>Generic settings</th>
				<th>Slices XST</th>
                                <th>Slices Precision</th>
			</tr>
			<tr>
                <th>32 bit FL, SIZE=15B, pipeline=false, default settings, aligment</th> 
				<td>66</td>
                                <td>58</td>
			</tr>
			<tr>
                <th>32 bit FL, SIZE=15B, pipeline=true, default settings, aligment</th> 
				<td>88</td>
                                <td>78</td>
			</tr>
			<tr>
                <th>128 bit FL, SIZE=15B, pipeline=true, default settings, no aligment</th> 
				<td>89</td>
                                <td>79</td>
			</tr>
			<tr>
                          <th>128 bit FL, SIZE=15B, pipeline=false, default settings, no aligment</th> 
				<td>15</td>
                                <td>10</td>
			</tr>
                        <tr>
                          <th>128 bit FL, SIZE=15B, pipeline=true, packet_counter_width=2 part_counter_width=5, no aligment</th> 
                          <td>83</td>
                          <td>72</td>
                        </tr>
		<nazev>Chip utilization</nazev>
		</tab> 
	
		<tab sloupce="cccc">
			<tr>
				<th>Generic settings</th>
                                <th>Max.frequency by XST</th>
				<th>Max.frequency by Precision</th>
			</tr>
			<tr>
                          <th>32 bit FL, SIZE=15B, pipeline=false, default settings, aligment</th> 
				<td>215 MHz</td>
                                <td>267 MHz</td>
			</tr>
			<tr>
                          <th>32 bit FL, SIZE=15B, pipeline=true, default settings, aligment</th> 
				<td>215 MHz</td>
                                <td>267 MHz</td>
			</tr>
			<tr>
                          <th>128 bit FL, SIZE=15B, pipeline=true, default settings, no aligment</th> 
				<td>272 MHz</td>
                                <td>290 MHz</td>
			</tr>
			<tr>
                          <th>128 bit FL, SIZE=15B, pipeline=false, default settings, no aligment</th> 
				<td>272 MHz</td>
                                <td>290 MHz</td>
			</tr>
                        <tr>
                          <th>128 bit FL, SIZE=15B, pipeline=true, packet_counter_width=2 part_counter_width=5, no aligment</th> 
                          <td>382 MHz</td>
                          <td>377 MHz</td>
                        </tr>
		<nazev>Maximal frequency</nazev>
		</tab> 
	
         All values was measured after synthesis before PaR.
       </p> 
	<p>
          Note: Unit speed depend on counters width, so use counters width that you need. The default values are set to values that should be enough for everbody. 
        </p>
	
       <h1>FL_EXTRACT core generator</h1>
       <p>
        In subdiractory sw is placed coregenerator. It transforms XML description of multi output ports FL_EXTRACT component to its VHDL code.
       </p>
       <h2>Example of XML file.</h2>
       <p>
       <pre>
         &lt;!DOCTYPE fl_extract SYSTEM "fl_extract_xml.dtd"&gt;
         &lt;fl_extract fl_width="32"&gt;
            &lt;fields&gt;
               &lt;field  packet_no="1" offset="4" size="15"&gt;EXT_DATA&lt;/field&gt;
            &lt;/fields&gt;
         &lt;/fl_extract&gt;
       </pre>
       <b>Note: The tag &lt;!DOCTYPE fl_extract SYSTEM "fl_extract_xml.dtd"&gt; must be placed in yours XML file and the path to fl_extract_xml.dtd must be set corectly.</b>
       </p>
     <h2>Description of XML tags</h2>
     <h3>The &lt;fl_extract&gt; tag</h3>
      <p>
        This tag describes generic settings for whole component.
      </p>
      <h3>Description of atributes:</h3>
      <p>
        <ul>
          <li> <b> fl_width </b> (default value = 32) Set data width of FrameLink bus in bits. Posible values are 16, 32, 64 and 128.</li>
          <li> <b> fl_pipeline </b> (dafault value = false) Set if the pipeline registers will be generated. Posible vaules are true and false.</li>
          <li> <b> packet_counter_width </b> (default value = 4) Set data width of packet counter in bits. </li>
          <li> <b> part_counter_width </b> (default value = 16) Set data width of part of packet couter in bits. </li>
        </ul>
       </p>
       <h3>The &lt;field&gt;PORT_NAME&lt;/field&gt; tag:</h3>
       <p>
         This tag describes which data will be extracted and also specifies output port name.
       </p>
       <h3>Description of atributes:</h3>
       <p>
         <ul>
           <li> <b> packet_no </b> Indicate from which packet will be the data extracted.</li>
           <li> <b> offset </b> Indicate frow which offset will be the data extracted.</li>
           <li> <b> size </b> Indicate how many bytes will be extracted.</li>
           <li> <b> PORT_NAME </b> Output port name. PORT_NAME_VLD output port thet indicates that data are valid will be generated too.</li>
         </ul>
       </p>
       <p>
         <b>Note: Attributes that have default value can be omited.</b>
       </p>
    </body>
</source>
