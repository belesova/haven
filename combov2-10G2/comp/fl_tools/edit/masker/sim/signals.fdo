# signals.fdo : Include file with signals
# Copyright (C) 2006 CESNET
# Author: Adam Crha <xcrhaa00@liberouter.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.



proc blk_FL_MASKER { FL_MASKER_BASE PARAM } {

   if { $PARAM == "MI32" } {

      add wave -divider "FL_MASKER: MI32"
      add_wave "-label mi32 -hex"              /testbench//mi
  }

   if { $PARAM == "MON" } {
      add wave -divider "FL_MASKER: MONITOR"
      add_wave "-label rx_src_rdy_n"               /testbench/fl_monitor/rx_src_rdy_n
      add_wave "-label rx_dst_rdy_n"               /testbench/fl_monitor/rx_dst_rdy_n
      add_wave "-label rx_data -hex"               /testbench/fl_monitor/rx_data
      add_wave "-label rx_sof_n -color pink"       /testbench/fl_monitor/rx_sof_n
      add_wave "-label rx_eof_n -color pink"       /testbench/fl_monitor/rx_eof_n
      add_wave "-label rx_sop_n -color pink"       /testbench/fl_monitor/rx_sop_n
      add_wave "-label rx_eop_n -color pink"       /testbench/fl_monitor/rx_eop_n
 
 


   }

   # MASKER interface
   if { $PARAM == "IFC" } {
      add wave -divider "FL_MASKER IFC"
      add_wave "-label clk"            $FL_MASKER_BASE/clk
      add_wave "-label reset"          $FL_MASKER_BASE/reset
      add_wave "-label out_data -hex"  $FL_MASKER_BASE/out_data

      add wave -divider "FL_MASKER: RX interface, IFC"
      add_wave "-label rx_sof_n"       $FL_MASKER_BASE/rx_sof_n
      add_wave "-label rx_eof_n"       $FL_MASKER_BASE/rx_eof_n
      add_wave "-label rx_sop_n"       $FL_MASKER_BASE/rx_sop_n
      add_wave "-label rx_eop_n"       $FL_MASKER_BASE/rx_eop_n
      add_wave "-label rx_src_rdy_n -color yellow"   $FL_MASKER_BASE/rx_src_rdy_n
      add_wave "-label rx_dst_rdy_n -color yellow"   $FL_MASKER_BASE/rx_dst_rdy_n
      add_wave "-label rx_data -hex"   $FL_MASKER_BASE/rx_data
      add_wave "-label rx_rem -hex"   $FL_MASKER_BASE/rx_rem

      add wave -divider "FL_MASKER: TX interface, IFC"
      add_wave "-label tx_sof_n"       $FL_MASKER_BASE/tx_sof_n
      add_wave "-label tx_eof_n"       $FL_MASKER_BASE/tx_eof_n

      add_wave "-label tx_sop_n"       $FL_MASKER_BASE/tx_sop_n
      add_wave "-label tx_eop_n"       $FL_MASKER_BASE/tx_eop_n

      add_wave "-label tx_src_rdy_n -color yellow"   $FL_MASKER_BASE/tx_src_rdy_n
      add_wave "-label tx_dst_rdy_n -color yellow"   $FL_MASKER_BASE/tx_dst_rdy_n
      add_wave "-label tx_data -hex"   $FL_MASKER_BASE/tx_data
      add_wave "-label tx_rem -hex"   $FL_MASKER_BASE/tx_rem

      add wave -divider "multiplexers"
      add_wave "-hex -label mx_mask_out "   $FL_MASKER_BASE/mx_mask_out
      add_wave "-hex -label  mx_mask_mi32"   $FL_MASKER_BASE/mx_mask_mi32
      add_wave "-hex -label mx_mask_mi32_cfg "   $FL_MASKER_BASE/mx_mask_mi32_cfg

   add wave -divider "OTHERS"
      add_wave "-dec -label cnt_word   "   $FL_MASKER_BASE/cnt_word
   }

   # Control unit
   if { $PARAM == "INFSM" } {
      add wave -divider "FL_MASKER: INFSM"
      add_wave "-label CLK"             $FL_MASKER_BASE/fsmi/clk
      add_wave "-label RESET"           $FL_MASKER_BASE/fsmi/reset

      add_wave "-label RX_SRC_RDY_N"        $FL_MASKER_BASE/fsmi/RX_SRC_RDY_N
      add_wave "-label TX_DST_RDY_N"        $FL_MASKER_BASE/fsmi/TX_DST_RDY_N
      add_wave "-label RX_SOF_N"        $FL_MASKER_BASE/fsmi/rx_sof_n
      add_wave "-label RX_EOF_N"        $FL_MASKER_BASE/fsmi/rx_eof_n

      add_wave "-label CONFIG"     $FL_MASKER_BASE/fsmi/CONFIG

      add_wave "-label FSM_MAY_CONFIG"        $FL_MASKER_BASE/fsmi/FSM_MAY_CONFIG
      add_wave "-label FSM_RX_DST_RDY_N"        $FL_MASKER_BASE/fsmi/FSM_RX_DST_RDY_N
      add_wave "-label FSM_TX_SRC_RDY_N"        $FL_MASKER_BASE/fsmi/FSM_TX_SRC_RDY_N

      add_wave "-label present_state"   $FL_MASKER_BASE/fsmi/present_state
      add_wave "-label next_state"      $FL_MASKER_BASE/fsmi/next_state

   }   

      add_wave "-label cnt"       $FL_MASKER_BASE/cnt
      add_wave "-label mask"       $FL_MASKER_BASE/mask
      add_wave "-label RESET_VALUE"       $FL_MASKER_BASE/RESET_VALUE
      add_wave "-label wr_req"       $FL_MASKER_BASE/wr_req
      add_wave "-label wr_ack"       $FL_MASKER_BASE/wr_ack
      add_wave "-label present_state"       $FL_MASKER_BASE/fl_masker_fsm/present_state
      add_wave "-label next_state"       $FL_MASKER_BASE/fl_masker_fsm/next_state
}
