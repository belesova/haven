# tcam.fdo: TCAM function simulation file
# Copyright (C) 2004 CESNET
# Author: Jiri Belohlavek <belohlavek@liberouter.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.
#
#

vlib work

vcom -93 -explicit -work work \
        ../tcam_sim.vhd ./tcam_tb.vhd

# ---------------------------------------------------------------------
#                           Simulation
# ---------------------------------------------------------------------
vsim -t 1ps  -L xilinxcorelib  -lib work testbench

# Show windows
view wave
# Start waveform with no signal
delete wave *

# Set TCAM_CTRL basic path
set TCAM_CTRL_PATH "sim:/testbench/CAM_SIM_U/"

# ------------- Helpfull procedures -----------------------------
proc tcam_ifc { debug } {
    global  TCAM_CTRL_PATH
    radix -hex

    if { $debug == "INTERFACE" } {
      add wave -divider "CAM interface"
      add wave -label cd $TCAM_CTRL_PATH/cd
      add wave -label cop $TCAM_CTRL_PATH/cop
      add wave -label copv $TCAM_CTRL_PATH/copv
      add wave -label cack $TCAM_CTRL_PATH/cack
      add wave -label ceot $TCAM_CTRL_PATH/ceot
      add wave -label cmf $TCAM_CTRL_PATH/cmf
      add wave -label cmv $TCAM_CTRL_PATH/cmv
      add wave -label cmm $TCAM_CTRL_PATH/cmm
      add wave -label cff $TCAM_CTRL_PATH/cff  
      add wave -label cmclk $TCAM_CTRL_PATH/cmclk
      add wave -label cphase $TCAM_CTRL_PATH/cphase
      add wave -label crst $TCAM_CTRL_PATH/crst
      add wave -label csen $TCAM_CTRL_PATH/csen
      add wave -label cad $TCAM_CTRL_PATH/cad
      add wave -label cce $TCAM_CTRL_PATH/cce
      add wave -label cwe $TCAM_CTRL_PATH/cwe
      add wave -label coe $TCAM_CTRL_PATH/coe
      add wave -label cale $TCAM_CTRL_PATH/cale
    }
    if { $debug == "SINGLE_READ" } {
      add wave -divider "Sigle read"
      add wave -label cmclk $TCAM_CTRL_PATH/cmclk
      add wave -label cphase $TCAM_CTRL_PATH/cphase
      add wave -label copv $TCAM_CTRL_PATH/copv
      add wave -label cop $TCAM_CTRL_PATH/cop
#      add wave -label cop { $TCAM_CTRL_PATH/cop (1 downto 0) }
#      add wave -label cop { $TCAM_CTRL_PATH/cop (8 downto 2) }
      add wave -label cd $TCAM_CTRL_PATH/cd
      add wave -label cack $TCAM_CTRL_PATH/cack
      add wave -label rburreg $TCAM_CTRL_PATH/rburreg
    }

    if { $debug == "LEARN" } {
      add wave -divider "Learn"
      add wave -label cmclk $TCAM_CTRL_PATH/cmclk
      add wave -label cphase $TCAM_CTRL_PATH/cphase
      add wave -label copv $TCAM_CTRL_PATH/copv
      add wave -label cop $TCAM_CTRL_PATH/cop
      add wave -label cd $TCAM_CTRL_PATH/cd
      add wave -label cad $TCAM_CTRL_PATH/cad
      add wave -label cce $TCAM_CTRL_PATH/cce
      add wave -label cwe $TCAM_CTRL_PATH/cwe
      add wave -label coe $TCAM_CTRL_PATH/coe
      add wave -label cmv $TCAM_CTRL_PATH/cmv
      add wave -label cmf $TCAM_CTRL_PATH/cmf
    }

    if { $debug == "SEARCH" } {
      add wave -divider "Search"
      add wave -label cmclk $TCAM_CTRL_PATH/cmclk
      add wave -label cphase $TCAM_CTRL_PATH/cphase
      add wave -label copv $TCAM_CTRL_PATH/copv
      add wave -label cop $TCAM_CTRL_PATH/cop
      add wave -label cd $TCAM_CTRL_PATH/cd
      add wave -label cad $TCAM_CTRL_PATH/cad
      add wave -label cce $TCAM_CTRL_PATH/cce
      add wave -label cale $TCAM_CTRL_PATH/cale      
      add wave -label cwe $TCAM_CTRL_PATH/cwe
      add wave -label coe $TCAM_CTRL_PATH/coe
      add wave -label cmv $TCAM_CTRL_PATH/cmv
      add wave -label cmf $TCAM_CTRL_PATH/cmf
    }
    
}


# ------------- Calling procedures ------------------------------
#tcam_ifc "INTERFACE"
tcam_ifc "SEARCH"
#add wave -label cd  $TCAM_CTRL_PATH/cd

# ------------- Run ---------------------------------------------
run 10 us

