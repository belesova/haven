<source>

<component>Process part of XGMII OBUF</component>

<authors>
    <author login="xmatou06">Jiri Matousek</author>
    <author login="polcak_l">Libor Polcak</author>
</authors>

<features>
    <item>Adds padding to short packets (shorter than 60B)</item>
	 <item>Optionally replaces source MAC address by pre-set value</item>
    <item>Computes CRC of each packet</item>
    <item>
    Synchronises sending of packet and corresponding CRC to XGMII_enc part
    </item>
</features>

<!--<bugs>
</bugs>-->

<!--<todo>
</todo>-->

<description>
   This part of XGMII OBUF controls minimal packet length. There is also place
   for replacement of source MAC address and computation of packet CRC. This
   CRC is added to the packet in the next part of XGMII OBUF (XGMII_enc).
</description>

<interface>
    <port_map>
    
        <port name="CLK" dir="in" width="1">
           Internal Clock signal
        </port>
        <port name="RESET" dir="in" width="1">
           Synchronous reset
        </port>

        <divider> Data input interface </divider>
        <port name="RX_DATA" dir="in" width="64">
				   Packet data
        </port>
        <port name="RX_SOP" dir="in" width="1">
				   Start of payload
        </port>
        <port name="RX_EOP" dir="in" width="1">
				   End of payload
        </port>
        <port name="RX_EOP_POS" dir="in" width="log2(64/8)">
				   End of packet position
        </port>
        <port name="RX_DV" dir="in" width="1">
				   Data validity signal
        </port>

        <divider> Source MAC address replacement interface </divider>
        <port name="SRC_MAC_RPLC" dir="in" width="1">
				   Control of source MAC address replacement ('1' mens replace)
        </port>
        <port name="REG_MAC_ADDR" dir="in" width="48">
				   New value of source MAC address.
        </port>
        <port name="NEXT_SRC_MAC_RPLC" dir="out" width="1">
				   Next source MAC address replacing request (active in '1')
        </port>

        <divider> Data output interface </divider>
        <port name="TX_DATA" dir="out" width="64">
				   Outgoing data
        </port>
        <port name="TX_SOP" dir="out" width="1">
				   Start of payload
        </port>
        <port name="TX_EOP" dir="out" width="1">
				   End of payload
        </port>
        <port name="TX_EOP_POS" dir="out" width="log2(64/8)">
				   End of packet position
        </port>
        <port name="TX_DV" dir="out" width="1">
				   Data validity signal
        </port>
        
        <divider> CRC output interface </divider>
        <port name="TX_CRC" dir="out" width="32">
				   Packet CRC
        </port>
        <port name="TX_CRC_DV" dir="out" width="1">
				   CRC validity signal
        </port>
        
        <divider> Reading request from XGMII_enc part </divider>
        <port name="RX_DATA_READ" dir="in" width="1">
               Outgoing data request
        </port>
        
        <divider> Write enable to Process part </divider>
        <port name="RX_DST_RDY" dir="out" width="1">
               Input data enable
        </port>

    </port_map>
</interface>

<!--<constant>
</constant>-->

<!--<operations>
</operations>-->

<!--<addr_space>
</addr_space>-->

<!--<sw_body>
</sw_body>-->

<body>

	<h1>Process information</h1>

	<h2>General info</h2>
	<p>
      Short packets are extended to the minimal size (60B). Next, there is a
      possibility to replace source MAC address by value from REG_MAC_ADDR.
      After that packet's CRC is computed and sent together with corresponding
      data to the next part of XGMII OBUF (XGMII_enc).
	</p>

	<!--<h1>Frequency and Resources usage</h1>
	<h2>Precision</h2>

	<p>
		<tab sloupce="ccc">
			<tr>
				<th>Slices (% of C6X slices)</th>
				<th>BlockRams (% of C6X BRAMs)</th>
			</tr>
			<tr>
				<td></td>
				<td></td>
			</tr>
		<nazev>Chip utilization (Precision)</nazev>
		</tab>

		<tab sloupce="ccc">
			<tr>
				<th>Max.frequency by Precision (XGMII_CLK)</th>
				<th>Frequency tested in HW (XGMII_CLK)</th>
			</tr>
			<tr>
				<td></td>
				<td></td>
			</tr>
		<nazev>Maximal frequency (Precision)</nazev>
		</tab>
   </p>

	<h2>XST</h2>
   <p>
		<tab sloupce="ccc">
			<tr>
				<th>Slices (% of C6X slices)</th>
				<th>BlockRams (% of C6X BRAMs)</th>
			</tr>
			<tr>
				<td></td>
				<td></td>
			</tr>
		<nazev>Chip utilization (XST)</nazev>
		</tab>

		<tab sloupce="ccc">
			<tr>
				<th>Max.frequency by XST (XGMII_CLK)</th>
				<th>Frequency tested in HW (XGMII_CLK)</th>
			</tr>
			<tr>
				<td></td>
				<td></td>
			</tr>
		<nazev>Maximal frequency (XST)</nazev>
		</tab>
   </p>-->

	<h1>Schemes</h1>
	<p>
		Detailed block structure of the component is in the following figure.
		<obr src="./fig/process.fig">Process architecture</obr>
	</p>
	
	<p>
      State diagram of FSMRX from Process part of XGMII OBUF.
		<obr src="./fig/process_fsmrx.fig">FSMRX state diagram</obr>
	</p>

</body>


</source>
