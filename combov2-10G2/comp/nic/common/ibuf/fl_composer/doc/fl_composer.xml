<?xml version="1.0" encoding="ISO-8859-1"?>
<source>
	
<!-- MAIN INFO ********************************************************** -->


<!-- Component name -->
<component>FrameLink Composer</component>


<!-- Authors -->
<authors>
       <author login="solanka">Lukas Solanka</author>
       <author login="polcak_l">Libor Polcak</author>
</authors>


<!-- Features -->
<features>
	<item>
		Creates regular FrameLink protocol from payload incoming to one interface
		and headers and footers incoming to another
	</item>
</features>


<!-- Bugs -->
<!--<bugs>
</bugs>-->


<!-- Things to do -->
<todo>
		<item>HW tests</item>
</todo>


<!-- Short Block description -->
<description>
   <p>
		 FrameLink Composer has two incoming interfaces. It has generics that
		 selects which parts of FrameLink frame are incoming to the headers/footers
		 one. There are incoming only payload parts to the another interface.
		 Regular FrameLink protocol is transmitted.
		 <ref_comp ref="relay" tag_id="HEAD">FrameLink Relay</ref_comp> component
		 can be optionaly placed to the output of FrameLink Composer to divide
		 long paths.
   </p>
</description>


<!-- COMPONENT INTERFACE ************************************************ -->
<interface>

	<!-- Generic description -->
	<generic_map>
		<generic name="CTRL_HDR_EN" type="boolean" default="true">
			Enables frame headers
		</generic>
		<generic name="CTRL_FTR_EN" type="boolean" default="true">
			Enables frame footers
		</generic>
		<generic name="FL_WIDTH_TX" type="integer" default="64">
			FrameLink width
		</generic>
		<generic name="FL_RELAY" type="boolean" default="false">
			Put <ref_comp ref="relay" tag_id="HEAD">FL Relay</ref_comp> component
			to the FL output
		</generic>
	</generic_map>

	<!-- Port description -->
	<port_map>

      <divider>Common signals</divider>		
      <port name="CLK" dir="in" width="1">
         FrameLink clock
      </port>
      <port name="RESET" dir="in" width="1">
         Asynchronous reset, active in '1'
      </port>

      <divider>Input payload interface</divider>		
      <port name="RX_DATA" dir="in" width="FL_WIDTH_TX">
         Data
      </port>
			<port name="RX_REM" dir="in" width="log2(FL_WIDTH_TX/8)">
         Position of the end of the part, valid only if RX_EOP_N is set to '0'.
      </port>
      <port name="RX_SOP_N" dir="in" width="1">
         Start of the part, active in '0'
      </port>
      <port name="RX_EOP_N" dir="in" width="1">
         End of the packet, active in '0'.
      </port>
      <port name="RX_SRC_RDY_N" dir="in" width="1">
         Source is ready, active in '0'
      </port>
      <port name="RX_DST_RDY_N" dir="out" width="1">
         Destination is ready, active in '0'
      </port>

			<divider>Input headers/footers interface</divider>		
      <port name="RX_HDATA" dir="in" width="FL_WIDTH_TX">
         Part data
      </port>
			<port name="RX_HREM" dir="in" width="log2(FL_WIDTH_TX/8)">
         Position of the end of the part, valid only if RX_HEOP_N is set to '0'.
      </port>
      <port name="RX_HSOP_N" dir="in" width="1">
         Start of the part, active in '0'
      </port>
      <port name="RX_HEOP_N" dir="in" width="1">
         End of the packet, active in '0'.
      </port>
      <port name="RX_HSRC_RDY_N" dir="in" width="1">
         Source is ready, active in '0'
      </port>
      <port name="RX_HDST_RDY_N" dir="out" width="1">
         Destination is ready, active in '0'
      </port>

 
      <divider>Output FrameLink</divider>		
      <port  name="TX" dir="inout" width="FL_WIDTH_TX">
				FrameLink
			</port>

   </port_map>
</interface>

<!-- HW BODY SECTION **************************************************** -->
<body>

<h1>FL Composer information</h1>

	<h2>General info</h2>
	<p>
		Input signals are driven to multiplexers that are used to chose one of
		two inputs. Multiplexers and inputs are contoled by the FSM. There are
		four FSMs from which one chosed generically is used. Generated FrameLink
		is driven either directly or through the
		<ref_comp ref="relay" tag_id="HEAD">FL Relay</ref_comp> to the output.
	</p>
	<p>
		The block structure of the component is in the following figure.
		<obr src="./fig/fl_composer.fig">FL Composer architecture</obr>
	</p>

	<h2>Finite State Machines</h2>
	<p>
		There are four finite state machines shown below. Which one is used depends
		on the generics CTRL_HDR_EN and CTRL_FTR_EN.
	</p>
	<p>
		<obr src="./fig/fsm_hpf.fig">
			Finite State Machine for both header, payload and footer
		</obr>
		<obr src="./fig/fsm_hp.fig">
			Finite State Machine for header and payload
		</obr>
		<obr src="./fig/fsm_pf.fig">
			Finite State Machine for payload and footer
		</obr>
		<obr src="./fig/fsm_p.fig">
			Finite State Machine for payload only
		</obr>
	</p>

		
<h1>Frequency and Resources usage</h1>

  <h2>Precision</h2>
	<p>
		<tab sloupce="lcccc">
			<tr>
				<th>Generics</th>
				<th>Slices (% of C6X slices)</th>
				<th>BlockRams (+ % of C6X BRAMs)</th>
				<th>Max.frequency by Precision</th>
				<th>Frequency tested in HW</th>
			</tr>
			<tr>
				<th>CTRL_HDR_EN=T, CTRL_FTR_EN=F, FL_WIDTH_TX=64, FL_RELAY=T</th>
				<td>86 (0.36%)</td>
				<td>0 (0%)</td>
				<td>245.9 MHz</td>
				<td>None</td>
			</tr>
			<tr>
				<th>CTRL_HDR_EN=T, CTRL_FTR_EN=T, FL_WIDTH_TX=64, FL_RELAY=F</th>
				<td>40 (0.17%)</td>
				<td>0 (0%)</td>
				<td>348.8 MHz</td>
				<td>None</td>
			</tr>
			<tr>
				<th>CTRL_HDR_EN=T, CTRL_FTR_EN=F, FL_WIDTH_TX=128, FL_RELAY=T</th>
				<td>152 (0.64%)</td>
				<td>0 (0%)</td>
				<td>245.9 MHz</td>
				<td>None</td>
			</tr>
		<nazev>Precision chip utilization and maximal frequency</nazev>
		</tab> 
	
  </p> 

  <h2>XST</h2>
	<p>
		<tab sloupce="lccc">
			<tr>
				<th>Generics</th>
				<th>Slices (% of C6X slices)</th>
				<th>Max.frequency by XST</th>
				<th>Frequency tested in HW</th>
			</tr>
			<tr>
				<th>CTRL_HDR_EN=T, CTRL_FTR_EN=F, FL_WIDTH_TX=64, FL_RELAY=T</th>
				<td>93 (0%)</td>
				<td>214.0 MHz</td>
				<td>None</td>
			</tr>
			<tr>
				<th>CTRL_HDR_EN=T, CTRL_FTR_EN=T, FL_WIDTH_TX=64, FL_RELAY=F</th>
				<td>45 (0%)</td>
				<td>389.7 MHz</td>
				<td>None</td>
			</tr>
			<tr>
				<th>CTRL_HDR_EN=T, CTRL_FTR_EN=F, FL_WIDTH_TX=128, FL_RELAY=T</th>
				<td>168 (0%)</td>
				<td>208.5 MHz</td>
				<td>None</td>
			</tr>
		<nazev>XST chip utilization and maximal frequency</nazev>
		</tab> 
	
  </p> 

</body>

</source>
