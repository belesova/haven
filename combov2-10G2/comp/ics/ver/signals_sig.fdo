# top_level_sig.fdo : Include file with signals 
# Copyright (C) 2008 CESNET
# Author: Marek Santa <xsanta06@stud.fit.vutbr.cz>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.
#
# $Id: signals_sig.fdo 11602 2009-10-14 19:03:54Z xspinl00 $
#

# Global file with signals
source "./signals.fdo"
set ARCHGRP $ARCH

exec make
view wave
delete wave *

add wave -divider "RXTX_DMA_MODUL"  
add_wave "-noupdate -color yellow -label RESET"      /testbench/RESET
add_wave "-noupdate -color yellow -label CLK"        /testbench/CLK

fl_rx   FL_RX   /testbench/DUT_U/VHDL_DUT_U
fl_tx   FL_TX   /testbench/DUT_U/VHDL_DUT_U
ib_up   IB_UP   /testbench/DUT_U/VHDL_DUT_U
ib_down IB_DOWN /testbench/DUT_U/VHDL_DUT_U 


if {$ARCHGRP == "FULL"} {
   set DMA_MODULE_I sim:/testbench/DUT_U/VHDL_DUT_U/dma_mod_4x16b_rxtx_i
} elseif {$ARCHGRP == "GENERIC"} {
   set DMA_MODULE_I sim:/testbench/DUT_U/VHDL_DUT_U/dma_module_i
   set DMA_MOD_BASE "../dma_ctrl_generic/top"
}

#add wave -divider "Internal DUT signals"
#add wave -divider "IB SWITCH"
#add wave "-hex" sim:/testbench/DUT_U/VHDL_DUT_U/ib_switch0_i/*
#add wave -divider "LB ENDPOINT"
#add wave "-hex" $DMA_MODULE_I/lb_endpoint_i/*
#add wave -divider "LB ROOT"
#add wave "-hex" sim:/testbench/DUT_U/VHDL_DUT_U/ib2lb_i/*
#add wave -divider "IB ENDPOINT READ FSM"
#add wave sim:/testbench/DUT_U/VHDL_DUT_U/ib2lb_i/ib_endpoint_u/ib_endpoint_read_fsm_u/*

if {$ARCHGRP == "FULL"} {
add wave -divider "Tx DMA"
add wave -group "TX DMA0" -hex sim:/testbench/DUT_U/VHDL_DUT_U/dma_mod_4x16b_rxtx_i/dma_ctrl_array_opt_i/gen_dma_ctrl__0/tx_dma_ctrl_i/tx_dma_ctrl_opt_8b/tx_dma_ctrl_opt_arch_i/*
add wave -group "TX DMA1" -hex sim:/testbench/DUT_U/VHDL_DUT_U/dma_mod_4x16b_rxtx_i/dma_ctrl_array_opt_i/gen_dma_ctrl__1/tx_dma_ctrl_i/tx_dma_ctrl_opt_8b/tx_dma_ctrl_opt_arch_i/*
add wave -group "TX DMA2" -hex sim:/testbench/DUT_U/VHDL_DUT_U/dma_mod_4x16b_rxtx_i/dma_ctrl_array_opt_i/gen_dma_ctrl__2/tx_dma_ctrl_i/tx_dma_ctrl_opt_8b/tx_dma_ctrl_opt_arch_i/*
add wave -group "TX DMA3" -hex sim:/testbench/DUT_U/VHDL_DUT_U/dma_mod_4x16b_rxtx_i/dma_ctrl_array_opt_i/gen_dma_ctrl__3/tx_dma_ctrl_i/tx_dma_ctrl_opt_8b/tx_dma_ctrl_opt_arch_i/*
add wave -divider "Rx DMA"
add wave -group "RX DMA0" -hex sim:/testbench/DUT_U/VHDL_DUT_U/dma_mod_4x16b_rxtx_i/dma_ctrl_array_opt_i/gen_dma_ctrl__0/rx_dma_ctrl_i/rx_dma_ctrl_opt_8b/rx_dma_ctrl_opt_arch_i/*
add wave -group "RX DMA1" -hex sim:/testbench/DUT_U/VHDL_DUT_U/dma_mod_4x16b_rxtx_i/dma_ctrl_array_opt_i/gen_dma_ctrl__1/rx_dma_ctrl_i/rx_dma_ctrl_opt_8b/rx_dma_ctrl_opt_arch_i/*
add wave -group "RX DMA2" -hex sim:/testbench/DUT_U/VHDL_DUT_U/dma_mod_4x16b_rxtx_i/dma_ctrl_array_opt_i/gen_dma_ctrl__2/rx_dma_ctrl_i/rx_dma_ctrl_opt_8b/rx_dma_ctrl_opt_arch_i/*
add wave -group "RX DMA3" -hex sim:/testbench/DUT_U/VHDL_DUT_U/dma_mod_4x16b_rxtx_i/dma_ctrl_array_opt_i/gen_dma_ctrl__3/rx_dma_ctrl_i/rx_dma_ctrl_opt_8b/rx_dma_ctrl_opt_arch_i/*
misc "INTERRUPT" "$DMA_MODULE_I"
} elseif {$ARCHGRP == "GENERIC"} {
   source "$DMA_MOD_BASE/../sim/signals.fdo"
   source "$DMA_MOD_BASE/sim/signals.fdo"
   blk_DMA_RX "$DMA_MODULE_I/rx_dma_ctrl_i" "FULL"
   blk_DMA_TX "$DMA_MODULE_I/tx_dma_ctrl_i" "FULL"
   blk_DMA_DESCMAN "$DMA_MODULE_I" "FULL"
   misc "INTERRUPT" "$DMA_MODULE_I"
}
restart -f
run -all
