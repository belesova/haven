<?xml version="1.0" encoding="ISO-8859-1"?>
<source>

        <component>Control Bus Endpoint</component>

<authors>
   <author login="pus">Viktor Pus</author>
</authors>

<bugs>
   <item>No known bugs</item>
</bugs>

<description>
   This component is used for sending and recieving messages at 
   Control Bus interface. It is responsible for flow control and 
   SRC/DST_ID generating/decoding. FrameLink is used as interface to user 
   component.
</description>

<interface>
   <generic_map>
      <generic name="DATA_WIDTH" type="integer" default="16">
         Width of data interface. Use only default value of 16.
      </generic>
      <generic name="SOURCE_ID" type="stv(3 downto 0)" default="">
         SRC/DST Identification
      </generic>
      <generic name="EMPTY_INTERVAL" type="integer" default="4">
         Send empty packet if this number of packets was recieved and none
         was sent. Minimum is 1.
      </generic>
      <generic name="IN_BUF_SIZE" type="integer" default="16">
         Items in RX buffer, set 0 for no buffer. Max = 256.
      </generic>
      <generic name="OUT_BUF_SIZE" type="integer" default="16">
         Items in TX buffer. Set to greater possible size of message.
      </generic>
      <generic name="OUT_BUF_MSGS" type="integer" default="4">
         Maximal number of messages in TX buffer.
      </generic>
  </generic_map>
  <port_map>
   <divider>Common Interface</divider>
   <port name="CB_CLK"        dir="in"  width="1">
      Clock signal
   </port>
   <port name="CB_RESET" dir="in" width="1">
      Reset signal
   </port>
   <divider>Control Bus interface</divider>
   <port name="CB" dir="inout" width="">
      Control Bus Interface.
   </port>
   <divider>User component upstream FrameLink interface</divider>
   <port name="UPS_FL" dir="inout" width="">
      Upstream FrameLink interface (t_fl16)
   </port>
   <divider>User component downstream FrameLink interface</divider>
   <port name="DNS_FL" dir="inout" width="">
      Downstream FrameLink interface (t_fl16)
   </port>
   </port_map>
</interface>

<body>

    <h1>Specification</h1>
    <p>
    When packet is recieved from Control Bus interface:
    <ul>
    <li>Packet field DST_ID (see Control Bus specification) is checked against 
        SOURCE_ID generic. If it does not match, packet is ignored.</li>
    <li>Field DiffBufSpace is added to internal counter of free items in
        root RX buffer.</li>
    <li>If packet contains data, these are transfered to user component</li>
    <li>With every transfered word, counter of freed items is incremented.</li>
    </ul>
    </p>
    <p>
    When packet is recieved from user component:
    <ul>
      <li>Packet size is checked against counter of free items at the root
          RX buffer.</li>
      <li>Packet header consisting of SRC_ID and freed items counter value
          is generated and sent.</li>
      <li>Packet data is sent.</li>
      <li>If more than N packets is recieved and no packet is sent,
          empty packet (only header) is sent.</li>
    </ul>
    </p>
    <p>
    Initialization proceeds like this:
    <ul>
    <li>Empty packet (only header) with information about space in
        root RX buffer is recieved.</li>
    <li>Empty packet with information about space in this component's
        RX buffer is sent.</li>
    </ul>
    Generic EMPTY_INTERVAL helps to avoid deadlocks in flow control. If
    (EMPTY_INTERVAL) packets are recieved and none is sent, then
    cb_root may have old information about cb_endpoint free buffer space.
    So, cb_endpoint sends one empty packet with updated info about its 
    free buffer space. 
    If EMPTY_INTERVAL set to minimum value of 1, 
    empty packet is sent after each recieved
    packet.
    </p>

    <h1>Component characteristics</h1>
    <p>
    Maximum reachable frequency is 170 MHz.
    </p>
    <p>
       <tab sloupce="cc">
		    <tr>
			    <th>Generic settings</th>
				 <th>Slices</th>
          </tr>
          <tr>
             <th>IN_BUF_SIZE = 16, OUT_BUF_SIZE = 16</th>
             <th>159</th>
          </tr>
          <tr>
             <th>IN_BUF_SIZE = 256, OUT_BUF_SIZE = 256</th>
             <th>1350</th>
          </tr>
          <tr>
             <th>IN_BUF_SIZE = 0 (no input buffer), OUT_BUF_SIZE = 32</th>
             <th>166</th>
          </tr>
          <nazev>Chip utilization</nazev>
       </tab>
    </p>
</body>
</source>
